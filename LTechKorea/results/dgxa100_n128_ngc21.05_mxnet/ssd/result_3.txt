+ echo 'Beginning trial 1 of 5'
Beginning trial 1 of 5
+ srun -N1 -n1 --container-name=single_stage_detector python -c '
import mlperf_log_utils
from mlperf_logging.mllog import constants
mlperf_log_utils.mlperf_submission_log(constants.SSD)'
:::MLLOG {"namespace": "", "time_ms": 1621374557567, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "ssd", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621374557573, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "NVIDIA", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621374557573, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 82}}
:::MLLOG {"namespace": "", "time_ms": 1621374557573, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 86}}
:::MLLOG {"namespace": "", "time_ms": 1621374557573, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "128xNVIDIA DGX A100", "metadata": {"file": "/workspace/ssd/mlperf_log_utils.py", "lineno": 90}}
+ '[' 1 -eq 1 ']'
+ srun --ntasks=128 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on luna-0284
Clearing cache on luna-0266
Clearing cache on luna-0188
Clearing cache on luna-0084
Clearing cache on luna-0033
Clearing cache on luna-0179
Clearing cache on luna-0272
Clearing cache on luna-0263
Clearing cache on luna-0081
Clearing cache on luna-0215
Clearing cache on luna-0036
Clearing cache on luna-0269
Clearing cache on luna-0021
Clearing cache on luna-0094
Clearing cache on luna-0270
Clearing cache on luna-0177
Clearing cache on luna-0276
Clearing cache on luna-0109
Clearing cache on luna-0189
Clearing cache on luna-0040
Clearing cache on luna-0273
Clearing cache on luna-0026
Clearing cache on luna-0092
Clearing cache on luna-0038
Clearing cache on luna-0119
Clearing cache on luna-0277
Clearing cache on luna-0087
Clearing cache on luna-0090
Clearing cache on luna-0219
Clearing cache on luna-0034
Clearing cache on luna-0115
Clearing cache on luna-0037
Clearing cache on luna-0222
Clearing cache on luna-0082
Clearing cache on luna-0180
Clearing cache on luna-0080
Clearing cache on luna-0205
Clearing cache on luna-0265
Clearing cache on luna-0089
Clearing cache on luna-0214
Clearing cache on luna-0175
Clearing cache on luna-0271
Clearing cache on luna-0178
Clearing cache on luna-0268
Clearing cache on luna-0122
Clearing cache on luna-0173
Clearing cache on luna-0191
Clearing cache on luna-0275
Clearing cache on luna-0209
Clearing cache on luna-0117
Clearing cache on luna-0120
Clearing cache on luna-0111
Clearing cache on luna-0176
Clearing cache on luna-0030
Clearing cache on luna-0114
Clearing cache on luna-0096
Clearing cache on luna-0185
Clearing cache on luna-0213
Clearing cache on luna-0121
Clearing cache on luna-0279
Clearing cache on luna-0186
Clearing cache on luna-0088
Clearing cache on luna-0267
Clearing cache on luna-0028
Clearing cache on luna-0264
Clearing cache on luna-0086
Clearing cache on luna-0190
Clearing cache on luna-0274
Clearing cache on luna-0029
Clearing cache on luna-0208
Clearing cache on luna-0211
Clearing cache on luna-0283
Clearing cache on luna-0126
Clearing cache on luna-0218
Clearing cache on luna-0027
Clearing cache on luna-0025
Clearing cache on luna-0112
Clearing cache on luna-0079
Clearing cache on luna-0207
Clearing cache on luna-0174
Clearing cache on luna-0127
Clearing cache on luna-0085
Clearing cache on luna-0110
Clearing cache on luna-0220
Clearing cache on luna-0223
Clearing cache on luna-0113
Clearing cache on luna-0262
Clearing cache on luna-0184
Clearing cache on luna-0032
Clearing cache on luna-0128
Clearing cache on luna-0221
Clearing cache on luna-0024
Clearing cache on luna-0039
Clearing cache on luna-0182
Clearing cache on luna-0078
Clearing cache on luna-0093
Clearing cache on luna-0206
Clearing cache on luna-0212
Clearing cache on luna-0224
Clearing cache on luna-0123
Clearing cache on luna-0287
Clearing cache on luna-0278
Clearing cache on luna-0083
Clearing cache on luna-0095
Clearing cache on luna-0181
Clearing cache on luna-0125
Clearing cache on luna-0077
Clearing cache on luna-0280
Clearing cache on luna-0023
Clearing cache on luna-0035
Clearing cache on luna-0116
Clearing cache on luna-0187
Clearing cache on luna-0217
Clearing cache on luna-0286
Clearing cache on luna-0281
Clearing cache on luna-0118
Clearing cache on luna-0192
Clearing cache on luna-0183
Clearing cache on luna-0031
Clearing cache on luna-0022
Clearing cache on luna-0091
Clearing cache on luna-0216
Clearing cache on luna-0210
Clearing cache on luna-0282
Clearing cache on luna-0261
Clearing cache on luna-0124
Clearing cache on luna-0285
Clearing cache on luna-0288
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
+ srun --ntasks=128 --container-name=single_stage_detector python -c '
from mlperf_logging.mllog import constants
from mlperf_log_utils import log_event
log_event(key=constants.CACHE_CLEAR, value=True)'
:::MLLOG {"namespace": "", "time_ms": 1621374561932, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "<string>", "lineno": 4}}
+ srun --mpi=pmix --ntasks=1024 --ntasks-per-node=8 --container-name=single_stage_detector --container-mounts=/raid/datasets/coco/coco-2017:/data,/lustre/fsw/mlperf-ci/23336738/results:/results,/raid/datasets/coco/coco-2017/coco2017/models:/pretrained/mxnet ./run_and_time.sh
STARTING TIMING RUN AT 2021-05-18 02:49:22 PM
STARTING TIMING RUN AT 2021-05-18 02:49:22 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:22 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:22 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:22 PM
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:22 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
running benchmark
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
+ '[' -n 7 ']'
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ declare -a CMD
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ BATCHSIZE=3
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ cluster=
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
running benchmark
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
running benchmark
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ '[' -n 3 ']'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 1 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ cluster=
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
running benchmark
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ '[' -n 2 ']'
running benchmark
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ declare -a CMD
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' -n 0 ']'
running benchmark
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 5 ']'
running benchmark
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ '[' -n 2 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 4 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ cluster=
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ ASYNC_EVAL=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
running benchmark
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' -n 6 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
running benchmark
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 7 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
running benchmark
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
running benchmark
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
running benchmark
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' -n 3 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ cluster=
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ LOG_INTERVAL=100
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ declare -a CMD
+ BATCHSIZE=3
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ cluster=
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ declare -a CMD
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ cluster=
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ cluster=
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
running benchmark
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ declare -a CMD
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
running benchmark
+ echo 'running benchmark'
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ declare -a CMD
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
running benchmark
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
running benchmark
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ echo 'running benchmark'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ declare -a CMD
running benchmark
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ declare -a CMD
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
running benchmark
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 3 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ BATCHSIZE=3
running benchmark
+ declare -a CMD
+ '[' -n 2 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ cluster=selene
running benchmark
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ echo 'running benchmark'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ cluster=
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
running benchmark
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' -n 2 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ cluster=selene
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
running benchmark
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
running benchmark
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
running benchmark
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 1 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
running benchmark
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
running benchmark
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ declare -a CMD
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ declare -a CMD
+ cluster=
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
running benchmark
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ declare -a CMD
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
running benchmark
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
running benchmark
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' -n 0 ']'
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
running benchmark
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
running benchmark
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
running benchmark
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ BATCHSIZE=3
+ '[' -n 7 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 6 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
running benchmark
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 0 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' -n 7 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ declare -a CMD
+ EVALBATCHSIZE=5
running benchmark
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
running benchmark
+ '[' -n 6 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ cluster=
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ '[' -n 3 ']'
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
running benchmark
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ cluster=
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
running benchmark
+ cluster=selene
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
running benchmark
+ declare -a CMD
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 4 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
running benchmark
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ '[' -n 4 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATA_LAYOUT=NHWC
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ echo 'running benchmark'
+ ASYNC_EVAL=1
running benchmark
+ cluster=
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ cluster=
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 4 ']'
running benchmark
+ declare -a CMD
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ DATASET_SIZE=117266
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ cluster=
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVALBATCHSIZE=5
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 5 ']'
+ '[' -n 5 ']'
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
running benchmark
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ '[' -n 4 ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 4 ']'
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 5 ']'
+ cluster=selene
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 5 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 2 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ '[' -n 0 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 7 ']'
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 2 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ declare -a CMD
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 4 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ '[' -n 1 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ declare -a CMD
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' -n 2 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' -n 4 ']'
+ '[' -n 0 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ cluster=
+ cluster=
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
running benchmark
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 7 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ cluster=
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
running benchmark
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
running benchmark
+ echo 'running benchmark'
+ LOG_INTERVAL=100
running benchmark
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ '[' -n 0 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ cluster=
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ '[' -n 7 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 6 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ '[' -n 4 ']'
+ declare -a CMD
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ cluster=
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
running benchmark
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
running benchmark
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
running benchmark
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
running benchmark
+ echo 'running benchmark'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ '[' -n 4 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 1 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 4 ']'
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ EVALBATCHSIZE=5
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 1 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
running benchmark
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ '[' -n 2 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
running benchmark
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' -n 5 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
running benchmark
+ cluster=
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ LOG_INTERVAL=100
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
running benchmark
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 0 ']'
running benchmark
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ '[' -n 4 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ EVALBATCHSIZE=5
+ cluster=
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
running benchmark
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ '[' -n 1 ']'
+ echo 'running benchmark'
running benchmark
+ '[' 1024 -gt 128 ']'
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ '[' -n 2 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 4 ']'
running benchmark
+ ASYNC_EVAL=1
+ BATCHSIZE=3
running benchmark
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 5 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ declare -a CMD
+ '[' -n 3 ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 1 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
running benchmark
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
running benchmark
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ BATCHSIZE=3
running benchmark
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ cluster=
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
running benchmark
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 2 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ BATCHSIZE=3
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 6 ']'
running benchmark
+ NUMEPOCHS=90
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ DATA_LAYOUT=NHWC
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS+=(--async-val)
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' -n 4 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ echo 'running benchmark'
+ BATCHSIZE=3
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ declare -a CMD
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 0 ']'
+ LOG_INTERVAL=100
+ '[' -n 4 ']'
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ '[' -n 3 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' -n 0 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
running benchmark
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ cluster=
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 1 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
running benchmark
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 3 ']'
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ declare -a CMD
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 7 ']'
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ '[' -n 2 ']'
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 1 ']'
+ PARAMS+=(--async-val)
running benchmark
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 7 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 2 ']'
+ EVALBATCHSIZE=5
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ cluster=
running benchmark
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
running benchmark
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
running benchmark
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
running benchmark
+ cluster=
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
running benchmark
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ '[' -n 0 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ cluster=
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
running benchmark
+ '[' 1024 -gt 128 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ cluster=
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
running benchmark
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 4 ']'
+ EVALBATCHSIZE=5
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
running benchmark
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 2 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ '[' -n 7 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' -n 2 ']'
running benchmark
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
running benchmark
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' -n 3 ']'
+ '[' -n 0 ']'
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ [[ 1 -eq 1 ]]
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ EVALBATCHSIZE=5
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
running benchmark
+ DATASET_DIR=/data/coco2017
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 6 ']'
+ DATASET_DIR=/data/coco2017
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 0 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
running benchmark
+ declare -a CMD
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
running benchmark
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ '[' -n 7 ']'
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ EVALBATCHSIZE=5
running benchmark
+ '[' -n 3 ']'
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ EVALBATCHSIZE=5
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
running benchmark
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ LOG_INTERVAL=100
+ '[' -n 7 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
running benchmark
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' -n 2 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 1 ']'
+ cluster=
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
running benchmark
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
running benchmark
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ '[' -n 2 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 7 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
running benchmark
+ '[' 1024 -gt 128 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ declare -a CMD
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
running benchmark
+ '[' -n 6 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
running benchmark
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
running benchmark
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
running benchmark
+ EVAL_DATASET_SIZE=5000
+ '[' -n 0 ']'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 1 ']'
+ '[' -n 1 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ '[' -n 7 ']'
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 2 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ declare -a CMD
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ '[' -n 0 ']'
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 5 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ '[' -n 6 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ cluster=
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 4 ']'
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ 1 -eq 1 ]]
+ DATA_LAYOUT=NHWC
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 2 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 3 ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 6 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ declare -a CMD
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ cluster=
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ cluster=selene
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 5 ']'
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ '[' -n 6 ']'
+ LOG_INTERVAL=100
+ '[' 1024 -gt 128 ']'
+ DATASET_SIZE=117266
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
+ declare -a CMD
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 1 ']'
+ '[' -n 4 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ cluster=
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ cluster=
+ EVALBATCHSIZE=5
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ NUMEPOCHS=90
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ NUMEPOCHS=90
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ cluster=
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ LOG_INTERVAL=100
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 2 ']'
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 1 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ cluster=selene
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS+=(--async-val)
+ DATASET_DIR=/data/coco2017
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 1 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS+=(--async-val)
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ '[' -n 3 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 3 ']'
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ASYNC_EVAL=1
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ PARAMS+=(--async-val)
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 5 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ NUMEPOCHS=90
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ LOG_INTERVAL=100
+ echo 'running benchmark'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ PARAMS+=(--async-val)
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ cluster=
+ '[' -n 4 ']'
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ echo 'running benchmark'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' -n 2 ']'
+ ASYNC_EVAL=1
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 3 ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVALBATCHSIZE=5
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ LOG_INTERVAL=100
+ DATASET_DIR=/data/coco2017
+ DATASET_SIZE=117266
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data/coco2017
+ '[' -n 3 ']'
+ DATA_LAYOUT=NHWC
+ '[' 1024 -gt 128 ']'
+ ASYNC_EVAL=1
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 4 ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' 1024 -gt 128 ']'
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ [[ 1 -eq 1 ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ ASYNC_EVAL=1
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ EVAL_DATASET_SIZE=5000
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ echo 'running benchmark'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ cluster=
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' -n 5 ']'
+ '[' -n 0 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ '[' 1024 -gt 128 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ echo 'running benchmark'
+ declare -a CMD
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS+=(--async-val)
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_DIR=/data/coco2017
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ echo 'running benchmark'
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ EVALBATCHSIZE=5
+ '[' -n 0 ']'
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ cluster=
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ EVAL_DATASET_SIZE=5000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ PARAMS+=(--async-val)
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data/coco2017
+ BATCHSIZE=3
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ echo 'running benchmark'
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ '[' -n 7 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ '[' 1024 -gt 128 ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ '[' 1024 -gt 128 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' -n 3 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ NUMEPOCHS=90
+ cluster=
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_SIZE=117266
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ '[' '' = apiLog.sh ']'
+ EVAL_DATASET_SIZE=5000
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ declare -a CMD
+ LOG_INTERVAL=100
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' -n 7 ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 6 ']'
+ ASYNC_EVAL=1
+ declare -a CMD
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ declare -a CMD
+ DATASET_DIR=/data/coco2017
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ DATA_LAYOUT=NHWC
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ASYNC_EVAL=1
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ '[' -n 2 ']'
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' -n 7 ']'
+ cluster=
+ '[' 1024 -gt 128 ']'
+ BATCHSIZE=3
+ declare -a CMD
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVALBATCHSIZE=5
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ DATASET_SIZE=117266
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
+ '[' -n 3 ']'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ '[' 1024 -gt 128 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ 1 -eq 1 ]]
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ DATASET_SIZE=117266
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ DATA_LAYOUT=NHWC
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ declare -a CMD
+ DATASET_SIZE=117266
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ BATCHSIZE=3
+ DATASET_DIR=/data/coco2017
+ EVALBATCHSIZE=5
+ DATA_LAYOUT=NHWC
+ '[' -n 0 ']'
+ ASYNC_EVAL=1
+ NUMEPOCHS=90
+ '[' -n 5 ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ echo 'running benchmark'
+ '[' 1024 -gt 128 ']'
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' 1024 -gt 128 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ DATASET_DIR=/data/coco2017
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ BATCHSIZE=3
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ EVALBATCHSIZE=5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ NUMEPOCHS=90
+ echo 'running benchmark'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ declare -a CMD
+ EVAL_DATASET_SIZE=5000
+ '[' -n 1 ']'
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' 1024 -gt 128 ']'
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ASYNC_EVAL=1
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' 1024 -gt 128 ']'
+ cluster=
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ echo 'running benchmark'
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ 1 -eq 1 ]]
+ '[' '' = apiLog.sh ']'
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 1 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ '[' '' = apiLog.sh ']'
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ BATCHSIZE=3
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ NUMEPOCHS=90
+ '[' '' = apiLog.sh ']'
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ echo 'running benchmark'
+ declare -a CMD
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ [[ 1 -eq 1 ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ PARAMS+=(--async-val)
running benchmark
+ declare -a CMD
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' '' = apiLog.sh ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATASET_DIR=/data/coco2017
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ [[ 1 -eq 1 ]]
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ '[' '' = apiLog.sh ']'
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 3 ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
running benchmark
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
+ EVAL_DATASET_SIZE=5000
+ PARAMS+=(--async-val)
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ DATA_LAYOUT=NHWC
running benchmark
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 2 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
running benchmark
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCHSIZE=3
+ NUMEPOCHS=90
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_SIZE=117266
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_EVAL=1
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ DATASET_DIR=/data/coco2017
+ declare -a CMD
running benchmark
+ DATA_LAYOUT=NHWC
+ ASYNC_EVAL=1
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ echo 'running benchmark'
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-18 02:49:23 PM
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ NUMEPOCHS=90
+ BATCHSIZE=3
+ EVALBATCHSIZE=5
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ LOG_INTERVAL=100
+ DATASET_SIZE=117266
+ NUMEPOCHS=90
+ EVAL_DATASET_SIZE=5000
+ '[' -n 5 ']'
+ '[' 1024 -gt 128 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LOG_INTERVAL=100
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ DATASET_SIZE=117266
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ EVAL_DATASET_SIZE=5000
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ '[' -n 4 ']'
+ '[' 1024 -gt 128 ']'
+ cluster=
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
running benchmark
+ PRETRAINED_BACKBONE=/pretrained/mxnet/resnet34-333f7ec4.pickle
+ ASYNC_EVAL=1
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data/coco2017
+ DATA_LAYOUT=NHWC
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ ASYNC_EVAL=1
+ echo 'running benchmark'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ declare -a CMD
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' -n 3 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' 1024 -gt 128 ']'
+ cluster=
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ PARAMS+=(--async-val)
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ '[' -n 1 ']'
+ '[' 1024 -gt 128 ']'
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ [[ 1 -eq 1 ]]
+ [[ DGXA100_multi_128x8x3x8 == DGX2* ]]
+ [[ DGXA100_multi_128x8x3x8 == DGXA100* ]]
+ PARAMS+=(--async-val)
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--' 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ '[' '' = apiLog.sh ']'
+ PARAMS=(--batch-size "${BATCHSIZE}" --eval-batch-size "${EVALBATCHSIZE}" --epochs "${NUMEPOCHS}" --log-interval "${LOG_INTERVAL}" --coco-root "${DATASET_DIR}" --dataset-size "${DATASET_SIZE}" --eval-dataset-size "${EVAL_DATASET_SIZE}" --pretrained-backbone "${PRETRAINED_BACKBONE}" --data-layout "${DATA_LAYOUT}")
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ [[ 1 -eq 1 ]]
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PARAMS+=(--async-val)
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ 1 -eq 1 ]]
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ PARAMS+=(--async-val)
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ ./bind.sh --cluster=selene --ib=single -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=7 --membind=7 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=0 --membind=0 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=5 --membind=5 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=4 --membind=4 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=2 --membind=2 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=6 --membind=6 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --cpunodebind=3 --membind=3 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
+ exec numactl --cpunodebind=1 --membind=1 -- python -u ssd_main_async.py --batch-size 3 --eval-batch-size 5 --epochs 90 --log-interval 100 --coco-root /data/coco2017 --dataset-size 117266 --eval-dataset-size 5000 --pretrained-backbone /pretrained/mxnet/resnet34-333f7ec4.pickle --data-layout NHWC --async-val --lr-decay-epochs 68 85 --lr-warmup-epoch=35 --lr=0.0035 --weight-decay=4e-5 --bn-group=8 --gradient-predivide-factor=64 --input-jpg-decode=cache --input-batch-multiplier=20
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565414, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565416, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565415, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565418, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565417, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565420, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565421, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565422, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565423, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565424, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565425, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565426, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565427, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565428, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565430, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565429, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565432, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565431, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565438, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565440, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565439, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565440, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565442, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565441, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565450, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565451, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565451, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565450, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565450, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565450, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565451, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565451, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565451, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565451, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565452, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565453, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565455, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565454, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565456, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565457, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565461, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565507, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1157815982, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 195}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565458, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565459, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
:::MLLOG {"namespace": "", "time_ms": 1621374565460, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 237}}
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[14:49:25] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
:::MLLOG {"namespace": "", "time_ms": 1621374565588, "event_type": "POINT_IN_TIME", "key": "seed", "value": 1157815982, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 224}}
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816966, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816518, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816574, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816694, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816974, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816862, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816510, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816806, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816926, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816542, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816662, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816590, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816854, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816718, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816606, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816654, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816246, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816750, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816382, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816030, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816582, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816830, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816678, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816886, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816230, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816950, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816358, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816958, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816046, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816070, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816526, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816118, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816814, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816086, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816182, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816558, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816766, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816190, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816614, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816366, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816486, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816398, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816214, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816102, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816126, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816342, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816822, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816174, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816390, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816494, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157815990, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816990, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816422, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816518
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816278, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816710, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816550, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816094, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816430, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816294, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816054, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816734, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816062, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816894, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816846, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816302, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816262, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816310, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816598, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816286, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816350, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816326, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157815998, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816238, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816438, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816942, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816998, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816622, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816838, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816502, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816702, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816926
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816110, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816374, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816222, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816726, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816966
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816470, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816878, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816454, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816022, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816038, start_epoch=1, synthNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816518, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816206, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816950
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816254, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816574
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816742, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816694
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816534, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816462, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816078, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157815982, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816526
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816382
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816478, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816870, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816510
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816806
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816902, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816542
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816662
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816782, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816006, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816318, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816630, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816566, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816758, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816686, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816158, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816134, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816406, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816910, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816638, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816718
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816646, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816142, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816654
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816270, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816670, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816166, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816118
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816030
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816198, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816414, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816182
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816798, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816678
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816774, start_epoch=1, synthNamespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816542, start_epoch=1, synthetic=FalseINFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816150, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816662, start_epoch=1, synthetic=Falseetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816014, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816446, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816278
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816590
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816710
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816790, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816334, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816966, start_epoch=1, synthetic=FalseINFO:root:Seed: 1157816886
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816854
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816358
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816982, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816486
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816974
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816430
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816814
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816342
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816086
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816830
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816062
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816918, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816934, start_epoch=1, synthabout to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816286
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816326
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816958
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816750
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816094
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816070
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816654, start_epoch=1, synthetic=FalseINFO:root:Seed: 1157816102
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816294
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816702
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816494
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816374
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157815990
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816974, start_epoch=1, synthetic=Falseetic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816846
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816990
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816422
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816766
about to model_zoo.get_model( resnet34_v1 )
etic=False, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816454
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816614
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816254
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816510, start_epoch=1, synthetic=FalseINFO:root:Seed: 1157815998
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816606
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816438
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157815982
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816046
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816806, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816622
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816926, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816502
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816214
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1157816862
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816126
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1157816870
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816582
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816822
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816390
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816110
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816782
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816558
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816222
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816726
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816318
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816630
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1157816758
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816470
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816686
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816302
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816262
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816406
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816550
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816350
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816230
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816206
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816246
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816270
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816998
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816398
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816838
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816174
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816950, start_epoch=1, synthetic=FalseINFO:root:Seed: 1157816734
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816718, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816574, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816694, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816894
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816006
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816774
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816150
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:Seed: 1157816566
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816014
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816878
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816158
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816310
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816190
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816790
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816750, start_epoch=1, synthetic=FalseINFO:root:Seed: 1157816334
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816022
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816038
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816526, start_epoch=1, synthetic=FalseINFO:root:Seed: 1157816238
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816366
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816462
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816382, start_epoch=1, synthetic=FalseINFO:root:Seed: 1157816942
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816118, start_epoch=1, synthetic=FalseINFO:root:Seed: 1157816078
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816030, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816478
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816054
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816830, start_epoch=1, synthetic=FalseINFO:root:Seed: 1157816902
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816182, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816798
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816678, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816446
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816134
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816598
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816910
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816638
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816766, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816742
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816646
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816142
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816982
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816534
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816854, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816670
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816166
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816358, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816198
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816414
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816918
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816070, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816814, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816342, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Seed: 1157816510
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816582, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:Seed: 1157816934
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816086, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816494, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Seed: 1157816542
INFO:root:loss scaling: 128.0
Seed: 1157816662
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816558, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816422, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 1157816518
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816278, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816590, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816710, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816886, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816230, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816614, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:precision: fp16
Seed: 1157816718
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Seed: 1157816654
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816246, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816366, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816486, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816046, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816094, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816430, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816862, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Seed: 1157816118
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 1157816926
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816062, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
Seed: 1157816182
precision: fp16
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157815990, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816846, start_epoch=1, synthetic=FalseINFO:root:precision: fp16
Seed: 1157816678
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1157816966
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:precision: fp16
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816550, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816190, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816286, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1157816854
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816326, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
Seed: 1157816950
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Seed: 1157816574
INFO:root:loss scaling: 128.0
Seed: 1157816694
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816958, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816606, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816438, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1157816974
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816622, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1157816526
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816502, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:loss scaling: 128.0
Seed: 1157816382
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816102, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816126, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816294, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
Seed: 1157816342
precision: fp16
loss scaling: 128.0
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816174, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816390, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816702, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 1157816806
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816734, start_epoch=1, synthetic=FalseINFO:root:loss scaling: 128.0
Seed: 1157816830
INFO:root:loss scaling: 128.0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816110, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816374, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816222, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816726, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816990, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:bn all reduce fp16: False
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816470, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816262, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 416
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 64
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 112
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 448
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816454, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816350, start_epoch=1, synthetic=FalseINFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816038, start_epoch=1, synthetic=FalseINFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816254, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157815998, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816534, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816078, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157815982, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Seed: 1157816750
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816998, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1157816094
INFO:root:fuse bn relu: True
Seed: 1157816070
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816838, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816214, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1157816102
precision: fp16
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816870, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:bn group: 8
Seed: 1157816030
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 184
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816822, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 640
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 88
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:async validation: True
Seed: 1157816494
INFO:root:MPI global rank: 856
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
precision: fp16
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1157815990
precision: fp16
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816782, start_epoch=1, synthetic=FalseINFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816894, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816006, start_epoch=1, synthetic=FalseINFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816318, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816630, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Seed: 1157816422
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816758, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816686, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
Seed: 1157816278
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 1157816590
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816134, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816302, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Seed: 1157816710
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
Seed: 1157816766
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816310, start_epoch=1, synthetic=FalseINFO:root:fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816406, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
Seed: 1157816454
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 1157816886
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816022, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 544
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 520
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816206, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 232
precision: fp16
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Seed: 1157816358
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 880
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816238, start_epoch=1, synthetic=FalseINFO:root:async validation: True
Seed: 1157816606
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816462, start_epoch=1, synthetic=FalseINFO:root:async validation: True
Seed: 1157816438
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816270, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1157816486
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816670, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816398, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1157816430
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1157816622
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Seed: 1157816502
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
Seed: 1157816862
INFO:root:bn group: 8
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816478, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 400
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816054, start_epoch=1, synthetic=FalseINFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
Seed: 1157816582
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 136
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Seed: 1157816086
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816902, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 832
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:[SSD] network: resnet34_v1
Seed: 1157816110
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Seed: 1157816558
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1157816222
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 496
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816774, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816150, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816566, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816014, start_epoch=1, synthetic=FalseINFO:root:[SSD] network: resnet34_v1
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816446, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
Seed: 1157816470
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816878, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816158, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816598, start_epoch=1, synthetic=FalseINFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816790, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
Seed: 1157816286
INFO:root:bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816334, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816910, start_epoch=1, synthetic=FalseINFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 120
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Seed: 1157816350
INFO:root:bn group: 8
Seed: 1157816326
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816638, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 144
Seed: 1157816230
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 312
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816742, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816646, start_epoch=1, synthetic=FalseINFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816142, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
Seed: 1157816958
INFO:root:async validation: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816982, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 360
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1157816246
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816942, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 1157816998
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816166, start_epoch=1, synthetic=FalseINFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1157816814
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI global rank: 72
precision: fp16
loss scaling: 128.0
INFO:root:fuse bn relu: True
Seed: 1157816174
INFO:root:[SSD] bn group: 8
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816198, start_epoch=1, synthetic=FalseINFO:root:MPI local rank: 0
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816414, start_epoch=1, synthetic=FalseINFO:root:fuse bn add relu: True
Seed: 1157816702
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
Seed: 1157816062
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:MPI size: 1024
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
Seed: 1157816894
INFO:root:MPI global rank: 528
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816918, start_epoch=1, synthetic=FalseINFO:root:MPI global rank: 888
Seed: 1157816006
INFO:root:MPI size: 1024
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816798, start_epoch=1, synthetic=FalseINFO:root:[SSD] fuse bn add relu: True
Seed: 1157816846
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 48
Seed: 1157816990
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI local rank: 0
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Namespace(async_val=True, backbone='resnet34_mlperf', batch_size=3, bn_fp16=False, bn_group=8, bulk_last_wgrad=False, coco_root='/data/coco2017', cocoapi_threads=6, dali_workers=6, data_layout='NHWC', data_shape=300, dataset='coco2017', dataset_size=117266, epochs=90, eval_batch_size=5, eval_dataset_size=5000, fp16_loss_scale=128.0, gradient_predivide_factor=64.0, horovod_num_groups=1, hw_decoder_load=0.0, input_batch_multiplier=20, input_jpg_decode='cache', log_interval=100, log_level='INFO', log_local_ranks=[0], lr=0.0035, lr_decay_epochs=[68, 85], lr_decay_factor=0.1, lr_warmup_epochs=35.0, lr_warmup_factor=0, mode='train_val', momentum=0.9, nms_overlap_thresh=0.5, nms_topk=200, nms_valid_thresh=0.05, no_fuse_bn_add_relu=False, no_fuse_bn_relu=False, post_nms=200, precision='fp16', pretrained_backbone='/pretrained/mxnet/resnet34-333f7ec4.pickle', profile_no_horovod=False, profile_start=None, profile_stop=None, results=None, resume_from='', save_interval=None, seed=1157816934, start_epoch=1, synthetic=FalseINFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1157816190
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Seed: 1157816022
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 1157816038
INFO:root:[SSD] fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:MPI global rank: 600
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI local rank: 0
Seed: 1157816254
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
precision: fp16
INFO:root:fuse bn relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1157815998
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1157816366
INFO:root:bn all reduce fp16: False
Seed: 1157816462
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
Seed: 1157816078
INFO:root:MPI size: 1024
Seed: 1157815982
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 1157816046
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 840
precision: fp16
INFO:root:MPI global rank: 192
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:async validation: True
Seed: 1157816478
INFO:root:MPI global rank: 216
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
Seed: 1157816126
INFO:root:[SSD] network: resnet34_v1
Seed: 1157816294
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
Seed: 1157816054
precision: fp16
INFO:root:fuse bn add relu: True
Seed: 1157816870
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1157816822
INFO:root:async validation: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
Seed: 1157816390
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1157816902
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Seed: 1157816374
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1157816782
INFO:root:[SSD] bn group: 8
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI global rank: 432
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI local rank: 0
Seed: 1157816726
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
Seed: 1157816318
INFO:root:fuse bn relu: True
Seed: 1157816630
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 1157816758
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 1157816686
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
Seed: 1157816302
INFO:root:fuse bn relu: True
Seed: 1157816262
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
Seed: 1157816406
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
, target_map=23, test_anchors=False, test_initialization=False, tfrecord_root='/datasets/coco2017/tfrecord/', use_tfrecord=False, val_epochs=[], val_interval=5, weight_decay=4e-05)
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
precision: fp16
INFO:root:MPI global rank: 720
precision: fp16
INFO:root:[SSD] bn group: 8
Seed: 1157816910
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 408
Seed: 1157816638
INFO:root:MPI local rank: 0
Seed: 1157816614
INFO:root:bn all reduce fp16: False
Seed: 1157816206
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:async validation: True
Seed: 1157816742
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
Seed: 1157816646
INFO:root:MPI global rank: 104
Seed: 1157816142
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI local rank: 0
Seed: 1157816982
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:async validation: True
Seed: 1157816534
precision: fp16
loss scaling: 128.0
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
Seed: 1157816270
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1157816398
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] fuse bn relu: True
Seed: 1157816166
INFO:root:MPI global rank: 824
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
Seed: 1157816838
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:MPI local rank: 0
Seed: 1157816214
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:fuse bn add relu: True
Seed: 1157816198
INFO:root:bn group: 8
Seed: 1157816414
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:bn all reduce fp16: False
loss scaling: 128.0
INFO:root:bn group: 8
Seed: 1157816734
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI global rank: 752
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
Seed: 1157816918
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
Seed: 1157816774
INFO:root:MPI global rank: 920
Seed: 1157816150
INFO:root:MPI global rank: 944
precision: fp16
INFO:root:async validation: True
Seed: 1157816566
INFO:root:MPI local rank: 0
Seed: 1157816014
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:async validation: True
Seed: 1157816878
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
Seed: 1157816158
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
Seed: 1157816550
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1157816934
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
Seed: 1157816790
INFO:root:[SSD] fuse bn relu: True
Seed: 1157816334
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI global rank: 848
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 1157816238
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
precision: fp16
INFO:root:bn group: 8
precision: fp16
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1157816942
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:MPI global rank: 512
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 80
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:async validation: True
precision: fp16
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
precision: fp16
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:MPI global rank: 560
loss scaling: 128.0
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
precision: fp16
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:fuse bn add relu: True
Seed: 1157816798
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
precision: fp16
loss scaling: 128.0
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
Seed: 1157816446
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
Seed: 1157816134
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
Seed: 1157816310
INFO:root:MPI global rank: 128
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
Seed: 1157816598
INFO:root:fuse bn add relu: True
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
precision: fp16
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 392
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
precision: fp16
INFO:root:MPI global rank: 680
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
Seed: 1157816670
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:async validation: True
precision: fp16
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:MPI global rank: 200
loss scaling: 128.0
INFO:root:bn group: 8
precision: fp16
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:async validation: True
precision: fp16
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI global rank: 8
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
precision: fp16
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:fuse bn relu: True
precision: fp16
loss scaling: 128.0
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
precision: fp16
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
precision: fp16
INFO:root:MPI global rank: 800
precision: fp16
INFO:root:MPI size: 1024
precision: fp16
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 912
precision: fp16
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
precision: fp16
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
precision: fp16
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI size: 1024
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI global rank: 936
precision: fp16
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
precision: fp16
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI global rank: 24
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:fuse bn relu: True
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
precision: fp16
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:bn group: 8
precision: fp16
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
precision: fp16
INFO:root:MPI global rank: 576
precision: fp16
INFO:root:[SSD] fuse bn relu: True
precision: fp16
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 816
loss scaling: 128.0
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:MPI global rank: 864
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:async validation: True
loss scaling: 128.0
INFO:root:fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:[SSD] network: resnet34_v1
precision: fp16
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
loss scaling: 128.0
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:MPI global rank: 240
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
loss scaling: 128.0
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:MPI global rank: 696
fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn relu: True
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI local rank: 0
fuse bn add relu: True
bn group: 8
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:async validation: True
bn group: 8
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:MPI global rank: 744
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:MPI global rank: 792
MPI size: 1024
INFO:root:async validation: True
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 416
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 64
INFO:root:async validation: True
MPI global rank: 448
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 112
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 168
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI global rank: 648
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 984
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:MPI global rank: 336
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
fuse bn relu: True
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:async validation: True
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 184
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:fuse bn add relu: True
MPI global rank: 640
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 88
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 856
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
async validation: True
INFO:root:MPI global rank: 1008
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 440
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 584
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI global rank: 776
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
bn group: 8
bn all reduce fp16: False
MPI size: 1024
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
MPI global rank: 544
INFO:root:[SSD] bn group: 8
MPI global rank: 520
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 232
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:loss scaling: 128.0
fuse bn add relu: True
INFO:root:fuse bn relu: True
async validation: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:MPI global rank: 32
MPI local rank: 0
INFO:root:loss scaling: 128.0
MPI global rank: 880
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
async validation: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 536
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 464
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:MPI global rank: 488
[SSD] fuse bn add relu: True
INFO:root:async validation: True
bn group: 8
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
MPI size: 1024
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 400
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 136
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
async validation: True
INFO:root:[SSD] bn group: 8
MPI global rank: 832
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:MPI global rank: 704
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
async validation: True
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 296
MPI global rank: 496
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
async validation: True
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI global rank: 608
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 896
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:async validation: True
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
MPI global rank: 120
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:MPI global rank: 176
bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
async validation: True
INFO:root:loss scaling: 128.0
MPI size: 1024
INFO:root:MPI local rank: 0
MPI global rank: 144
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 312
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:fuse bn add relu: True
MPI local rank: 0
INFO:root:bn group: 8
MPI size: 1024
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:bn all reduce fp16: False
MPI global rank: 360
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
MPI local rank: 0
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI size: 1024
async validation: True
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 152
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 728
fuse bn relu: True
fuse bn add relu: True
bn group: 8
INFO:root:MPI global rank: 320
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 72
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:[SSD] bn group: 8
bn all reduce fp16: False
INFO:root:MPI global rank: 280
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
bn group: 8
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
INFO:root:loss scaling: 128.0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:fuse bn relu: True
bn all reduce fp16: False
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI global rank: 528
INFO:root:fuse bn add relu: True
MPI global rank: 888
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 48
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 784
async validation: True
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 424
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] network: resnet34_v1
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:MPI global rank: 328
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:loss scaling: 128.0
[SSD] fuse bn relu: True
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
MPI global rank: 600
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:[SSD] bn group: 8
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 568
fuse bn add relu: True
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:loss scaling: 128.0
bn all reduce fp16: False
INFO:root:async validation: True
bn group: 8
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI global rank: 840
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 192
INFO:root:MPI global rank: 952
bn all reduce fp16: False
INFO:root:MPI global rank: 208
loss scaling: 128.0
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI global rank: 616
async validation: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:async validation: True
MPI global rank: 216
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:async validation: True
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
MPI global rank: 432
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 808
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
INFO:root:MPI global rank: 304
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
bn group: 8
INFO:root:loss scaling: 128.0
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
fuse bn add relu: True
bn group: 8
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:async validation: True
MPI global rank: 720
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:MPI global rank: 352
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 408
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:MPI global rank: 472
MPI local rank: 0
INFO:root:[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:async validation: True
MPI size: 1024
INFO:root:MPI local rank: 0
async validation: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:async validation: True
MPI global rank: 104
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI global rank: 928
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
MPI global rank: 824
MPI local rank: 0
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:MPI size: 1024
fuse bn add relu: True
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 904
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:MPI global rank: 40
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 872
MPI global rank: 752
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 920
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 944
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
async validation: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 368
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:async validation: True
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
MPI global rank: 848
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 344
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI local rank: 0
async validation: True
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 56
fuse bn add relu: True
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:MPI global rank: 656
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
INFO:root:async validation: True
fuse bn relu: True
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:async validation: True
MPI size: 1024
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 512
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 80
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:MPI global rank: 248
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
MPI global rank: 560
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] fuse bn relu: True
INFO:root:MPI size: 1024
async validation: True
INFO:root:MPI size: 1024
bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI global rank: 632
[SSD] fuse bn add relu: True
INFO:root:MPI global rank: 224
bn all reduce fp16: False
INFO:root:MPI size: 1024
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 968
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:async validation: True
MPI global rank: 128
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
INFO:root:async validation: True
bn group: 8
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn all reduce fp16: False
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 392
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:MPI global rank: 272
MPI global rank: 680
INFO:root:fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:async validation: True
MPI local rank: 0
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
async validation: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI global rank: 736
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 376
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI global rank: 200
INFO:root:[SSD] fuse bn add relu: True
bn group: 8
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:MPI global rank: 592
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
MPI global rank: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:async validation: True
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
INFO:root:MPI global rank: 760
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:MPI local rank: 0
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:bn group: 8
bn group: 8
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
MPI global rank: 800
INFO:root:fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] bn group: 8
INFO:root:MPI global rank: 712
MPI local rank: 0
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
MPI global rank: 912
INFO:root:bn group: 8
bn group: 8
INFO:root:MPI local rank: 0
async validation: True
INFO:root:MPI size: 1024
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 664
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:MPI global rank: 160
[SSD] network: resnet34_v1
INFO:root:async validation: True
MPI global rank: 936
INFO:root:loss scaling: 128.0
[SSD] fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:async validation: True
[SSD] fuse bn relu: True
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
MPI global rank: 24
INFO:root:[SSD] fuse bn add relu: True
fuse bn relu: True
INFO:root:MPI size: 1024
loss scaling: 128.0
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:MPI global rank: 16
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
[SSD] bn group: 8
INFO:root:fuse bn add relu: True
bn group: 8
INFO:root:async validation: True
fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
async validation: True
INFO:root:fuse bn add relu: True
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
bn all reduce fp16: False
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
bn group: 8
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 976
bn all reduce fp16: False
INFO:root:bn group: 8
bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 576
INFO:root:MPI global rank: 256
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
MPI size: 1024
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:async validation: True
MPI global rank: 816
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:async validation: True
async validation: True
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI global rank: 1000
MPI local rank: 0
INFO:root:fuse bn relu: True
MPI global rank: 864
INFO:root:[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:bn group: 8
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] network: resnet34_v1
fuse bn add relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI size: 1024
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:MPI global rank: 624
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
loss scaling: 128.0
INFO:root:bn group: 8
fuse bn add relu: True
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 240
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 552
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:MPI global rank: 672
fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:bn group: 8
async validation: True
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:MPI local rank: 0
fuse bn relu: True
INFO:root:async validation: True
bn group: 8
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:[SSD] network: resnet34_v1
MPI global rank: 696
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn add relu: True
INFO:root:MPI size: 1024
bn all reduce fp16: False
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
INFO:root:fuse bn relu: True
bn group: 8
INFO:root:MPI global rank: 264
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
async validation: True
INFO:root:MPI local rank: 0
bn all reduce fp16: False
INFO:root:fuse bn add relu: True
MPI global rank: 744
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
MPI size: 1024
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
MPI global rank: 792
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:[SSD] bn group: 8
MPI local rank: 0
INFO:root:MPI global rank: 384
loss scaling: 128.0
INFO:root:[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
async validation: True
INFO:root:[SSD] fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
INFO:root:bn group: 8
fuse bn relu: True
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn all reduce fp16: False
fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:MPI global rank: 480
[SSD] bn group: 8
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:MPI local rank: 0
loss scaling: 128.0
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:[SSD] bn group: 8
MPI size: 1024
INFO:root:async validation: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI global rank: 456
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:bn all reduce fp16: False
MPI global rank: 168
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:fuse bn relu: True
INFO:root:fuse bn add relu: True
fuse bn add relu: True
INFO:root:async validation: True
MPI local rank: 0
INFO:root:MPI global rank: 288
fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
bn group: 8
INFO:root:bn group: 8
bn group: 8
INFO:root:[SSD] network: resnet34_v1
async validation: True
INFO:root:MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
bn group: 8
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:MPI size: 1024
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:MPI global rank: 960
MPI size: 1024
INFO:root:[SSD] fuse bn relu: True
MPI size: 1024
INFO:root:[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
INFO:root:async validation: True
MPI global rank: 336
INFO:root:[SSD] bn group: 8
MPI global rank: 648
INFO:root:fuse bn add relu: True
MPI global rank: 984
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
MPI local rank: 0
INFO:root:bn group: 8
MPI local rank: 0
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
INFO:root:bn all reduce fp16: False
async validation: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
fuse bn relu: True
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:fuse bn add relu: True
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 504
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:fuse bn relu: True
fuse bn add relu: True
INFO:root:MPI local rank: 0
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:fuse bn add relu: True
[SSD] fuse bn relu: True
INFO:root:async validation: True
bn group: 8
INFO:root:fuse bn add relu: True
[SSD] fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
[SSD] fuse bn add relu: True
INFO:root:bn group: 8
bn all reduce fp16: False
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:MPI global rank: 96
[SSD] bn group: 8
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI local rank: 0
[SSD] bn group: 8
INFO:root:MPI size: 1024
MPI size: 1024
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:async validation: True
MPI global rank: 1008
INFO:root:MPI global rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn relu: True
fuse bn relu: True
INFO:root:MPI global rank: 768
fuse bn relu: True
INFO:root:MPI local rank: 0
MPI local rank: 0
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
fuse bn add relu: True
INFO:root:async validation: True
fuse bn add relu: True
INFO:root:[SSD] bn group: 8
async validation: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:[SSD] network: resnet34_v1
bn group: 8
INFO:root:MPI local rank: 0
bn group: 8
INFO:root:[SSD] fuse bn relu: True
loss scaling: 128.0
INFO:root:async validation: True
bn group: 8
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
INFO:root:[SSD] fuse bn add relu: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
bn all reduce fp16: False
INFO:root:fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] network: resnet34_v1
MPI size: 1024
INFO:root:[SSD] fuse bn add relu: True
MPI size: 1024
MPI global rank: 440
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 584
INFO:root:fuse bn add relu: True
MPI size: 1024
INFO:root:[SSD] bn group: 8
[SSD] fuse bn relu: True
INFO:root:[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn add relu: True
MPI local rank: 0
INFO:root:bn all reduce fp16: False
[SSD] fuse bn add relu: True
INFO:root:fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:loss scaling: 128.0
MPI global rank: 776
INFO:root:[SSD] bn group: 8
MPI local rank: 0
async validation: True
INFO:root:MPI size: 1024
async validation: True
INFO:root:bn group: 8
[SSD] bn group: 8
INFO:root:network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
INFO:root:MPI global rank: 1016
about to model_zoo.get_model( resnet34_v1 )
INFO:root:bn all reduce fp16: False
[SSD] network: resnet34_v1
INFO:root:fuse bn relu: True
[SSD] network: resnet34_v1
INFO:root:MPI local rank: 0
async validation: True
INFO:root:fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:bn group: 8
[SSD] network: resnet34_v1
INFO:root:MPI global rank: 992
fuse bn relu: True
INFO:root:[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
INFO:root:bn all reduce fp16: False
[SSD] fuse bn relu: True
INFO:root:MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
INFO:root:MPI size: 1024
[SSD] fuse bn add relu: True
INFO:root:async validation: True
[SSD] fuse bn add relu: True
INFO:root:[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
INFO:root:MPI global rank: 688
bn group: 8
INFO:root:[SSD] network: resnet34_v1
[SSD] bn group: 8
INFO:root:[SSD] fuse bn add relu: True
[SSD] bn group: 8
INFO:root:MPI local rank: 0
[SSD] fuse bn add relu: True
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:async validation: True
bn all reduce fp16: False
INFO:root:[SSD] fuse bn relu: True
[SSD] bn group: 8
INFO:root:[SSD] network: resnet34_v1
fuse bn relu: True
INFO:root:[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
INFO:root:[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
INFO:root:[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
INFO:root:[SSD] fuse bn add relu: True
MPI global rank: 32
INFO:root:[SSD] bn group: 8
fuse bn add relu: True
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
bn group: 8
fuse bn add relu: True
fuse bn relu: True
async validation: True
bn group: 8
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
[SSD] network: resnet34_v1
bn all reduce fp16: False
bn group: 8
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
bn all reduce fp16: False
MPI global rank: 536
[SSD] fuse bn relu: True
MPI global rank: 464
MPI size: 1024
MPI local rank: 0
[SSD] fuse bn add relu: True
async validation: True
MPI local rank: 0
MPI global rank: 488
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI local rank: 0
[SSD] network: resnet34_v1
fuse bn relu: True
async validation: True
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
MPI global rank: 704
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
MPI local rank: 0
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
bn all reduce fp16: False
async validation: True
fuse bn relu: True
fuse bn relu: True
MPI size: 1024
[SSD] network: resnet34_v1
fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 296
bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
bn all reduce fp16: False
MPI size: 1024
MPI local rank: 0
[SSD] fuse bn add relu: True
MPI size: 1024
MPI global rank: 608
[SSD] bn group: 8
async validation: True
MPI global rank: 896
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
MPI local rank: 0
[SSD] network: resnet34_v1
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
bn group: 8
[SSD] bn group: 8
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] bn group: 8
MPI size: 1024
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
MPI global rank: 176
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
async validation: True
fuse bn add relu: True
fuse bn relu: True
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
fuse bn add relu: True
bn group: 8
[SSD] network: resnet34_v1
bn all reduce fp16: False
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
bn all reduce fp16: False
MPI size: 1024
[SSD] fuse bn relu: True
MPI size: 1024
MPI size: 1024
[SSD] fuse bn add relu: True
MPI global rank: 152
MPI global rank: 728
MPI global rank: 320
[SSD] bn group: 8
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
MPI local rank: 0
async validation: True
fuse bn relu: True
async validation: True
async validation: True
[SSD] network: resnet34_v1
fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
MPI global rank: 280
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
fuse bn relu: True
fuse bn add relu: True
bn group: 8
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
bn all reduce fp16: False
MPI size: 1024
MPI global rank: 784
bn all reduce fp16: False
[SSD] fuse bn relu: True
bn group: 8
bn all reduce fp16: False
MPI size: 1024
[SSD] fuse bn add relu: True
MPI local rank: 0
MPI size: 1024
MPI global rank: 424
[SSD] bn group: 8
async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 328
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
async validation: True
loss scaling: 128.0
[SSD] network: resnet34_v1
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
async validation: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
fuse bn add relu: True
[SSD] bn group: 8
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] bn group: 8
bn all reduce fp16: False
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 568
fuse bn relu: True
fuse bn relu: True
loss scaling: 128.0
MPI local rank: 0
fuse bn add relu: True
fuse bn add relu: True
async validation: True
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
[SSD] network: resnet34_v1
bn all reduce fp16: False
bn all reduce fp16: False
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
MPI size: 1024
fuse bn add relu: True
bn group: 8
bn all reduce fp16: False
[SSD] fuse bn relu: True
MPI global rank: 952
MPI global rank: 208
MPI size: 1024
MPI global rank: 616
[SSD] fuse bn add relu: True
MPI local rank: 0
MPI local rank: 0
[SSD] bn group: 8
async validation: True
async validation: True
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
[SSD] network: resnet34_v1
async validation: True
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] fuse bn add relu: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
MPI size: 1024
fuse bn add relu: True
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
MPI global rank: 808
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
async validation: True
MPI size: 1024
MPI global rank: 304
fuse bn add relu: True
fuse bn add relu: True
MPI local rank: 0
bn group: 8
[SSD] network: resnet34_v1
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
bn all reduce fp16: False
MPI size: 1024
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
MPI global rank: 352
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
MPI global rank: 472
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI local rank: 0
[SSD] fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] network: resnet34_v1
async validation: True
[SSD] fuse bn add relu: True
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
fuse bn relu: True
fuse bn add relu: True
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
bn group: 8
[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 928
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI size: 1024
fuse bn add relu: True
fuse bn relu: True
[SSD] network: resnet34_v1
bn group: 8
fuse bn add relu: True
MPI global rank: 904
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn relu: True
MPI size: 1024
async validation: True
MPI size: 1024
[SSD] fuse bn add relu: True
MPI global rank: 40
[SSD] network: resnet34_v1
[SSD] bn group: 8
MPI local rank: 0
MPI global rank: 872
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
MPI local rank: 0
async validation: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] network: resnet34_v1
fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
bn all reduce fp16: False
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] fuse bn relu: True
MPI size: 1024
[SSD] bn group: 8
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 368
fuse bn add relu: True
[SSD] bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
fuse bn relu: True
loss scaling: 128.0
async validation: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
[SSD] network: resnet34_v1
MPI size: 1024
fuse bn relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 344
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
MPI size: 1024
bn group: 8
[SSD] fuse bn relu: True
MPI local rank: 0
MPI global rank: 56
bn all reduce fp16: False
[SSD] fuse bn add relu: True
async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] bn group: 8
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
async validation: True
MPI global rank: 656
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
fuse bn relu: True
fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
async validation: True
[SSD] fuse bn relu: True
bn group: 8
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] bn group: 8
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 248
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
[SSD] fuse bn add relu: True
MPI local rank: 0
fuse bn relu: True
[SSD] bn group: 8
async validation: True
fuse bn add relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
bn group: 8
bn group: 8
fuse bn add relu: True
bn all reduce fp16: False
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] fuse bn relu: True
MPI size: 1024
MPI size: 1024
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 632
MPI global rank: 224
MPI size: 1024
[SSD] fuse bn add relu: True
MPI local rank: 0
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
async validation: True
MPI global rank: 968
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] network: resnet34_v1
MPI local rank: 0
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
bn group: 8
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] bn group: 8
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 272
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
fuse bn relu: True
[SSD] bn group: 8
MPI local rank: 0
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
async validation: True
bn group: 8
bn group: 8
fuse bn relu: True
fuse bn add relu: True
[SSD] network: resnet34_v1
bn all reduce fp16: False
loss scaling: 128.0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
bn group: 8
[SSD] fuse bn relu: True
MPI global rank: 736
MPI global rank: 376
[SSD] fuse bn add relu: True
MPI local rank: 0
bn all reduce fp16: False
MPI local rank: 0
[SSD] bn group: 8
async validation: True
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 592
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn relu: True
[SSD] fuse bn relu: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
[SSD] bn group: 8
[SSD] fuse bn add relu: True
bn all reduce fp16: False
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] fuse bn relu: True
fuse bn relu: True
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 760
[SSD] fuse bn add relu: True
fuse bn add relu: True
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
loss scaling: 128.0
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
async validation: True
bn group: 8
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
[SSD] network: resnet34_v1
MPI size: 1024
bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
MPI global rank: 712
bn all reduce fp16: False
[SSD] fuse bn relu: True
bn group: 8
MPI local rank: 0
MPI size: 1024
[SSD] fuse bn add relu: True
bn all reduce fp16: False
async validation: True
MPI global rank: 664
[SSD] bn group: 8
MPI size: 1024
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI global rank: 160
async validation: True
MPI local rank: 0
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
async validation: True
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
[SSD] network: resnet34_v1
fuse bn add relu: True
[SSD] fuse bn relu: True
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] bn group: 8
loss scaling: 128.0
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI size: 1024
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] bn group: 8
MPI global rank: 16
fuse bn relu: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
fuse bn add relu: True
fuse bn add relu: True
async validation: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
bn group: 8
fuse bn relu: True
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn all reduce fp16: False
MPI size: 1024
fuse bn add relu: True
[SSD] fuse bn relu: True
MPI size: 1024
MPI global rank: 976
bn group: 8
[SSD] fuse bn add relu: True
MPI global rank: 256
MPI local rank: 0
bn all reduce fp16: False
[SSD] bn group: 8
MPI local rank: 0
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI size: 1024
async validation: True
[SSD] network: resnet34_v1
MPI global rank: 1000
fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI local rank: 0
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
bn group: 8
[SSD] fuse bn relu: True
async validation: True
[SSD] fuse bn relu: True
bn all reduce fp16: False
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
[SSD] bn group: 8
MPI global rank: 624
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI local rank: 0
fuse bn add relu: True
[SSD] fuse bn add relu: True
fuse bn add relu: True
async validation: True
bn group: 8
bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
bn all reduce fp16: False
bn all reduce fp16: False
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
MPI size: 1024
fuse bn relu: True
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 552
fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI global rank: 672
MPI local rank: 0
bn group: 8
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
async validation: True
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
MPI local rank: 0
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
MPI global rank: 264
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
MPI local rank: 0
fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] fuse bn add relu: True
async validation: True
bn group: 8
bn all reduce fp16: False
[SSD] fuse bn relu: True
[SSD] bn group: 8
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
MPI global rank: 384
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
MPI local rank: 0
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
async validation: True
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
bn group: 8
[SSD] bn group: 8
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
bn all reduce fp16: False
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI size: 1024
bn group: 8
fuse bn relu: True
[SSD] fuse bn relu: True
MPI global rank: 480
loss scaling: 128.0
bn all reduce fp16: False
fuse bn add relu: True
[SSD] fuse bn add relu: True
MPI local rank: 0
MPI size: 1024
bn group: 8
[SSD] bn group: 8
async validation: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 456
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn relu: True
fuse bn add relu: True
bn group: 8
async validation: True
MPI global rank: 288
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
MPI local rank: 0
bn all reduce fp16: False
[SSD] fuse bn add relu: True
async validation: True
MPI size: 1024
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 960
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI local rank: 0
loss scaling: 128.0
[SSD] fuse bn add relu: True
fuse bn relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
async validation: True
[SSD] bn group: 8
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
bn group: 8
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
bn all reduce fp16: False
fuse bn relu: True
[SSD] bn group: 8
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
[SSD] fuse bn add relu: True
fuse bn add relu: True
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
MPI global rank: 504
[SSD] bn group: 8
bn group: 8
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI local rank: 0
bn all reduce fp16: False
fuse bn add relu: True
async validation: True
fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
MPI size: 1024
bn group: 8
bn group: 8
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 96
bn all reduce fp16: False
[SSD] network: resnet34_v1
bn all reduce fp16: False
MPI local rank: 0
MPI size: 1024
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
async validation: True
MPI global rank: 0
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
MPI local rank: 0
MPI global rank: 768
[SSD] network: resnet34_v1
about to model_zoo.get_model( resnet34_v1 )
async validation: True
MPI local rank: 0
[SSD] bn group: 8
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
[SSD] network: resnet34_v1
[SSD] fuse bn relu: True
async validation: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
about to model_zoo.get_model( resnet34_v1 )
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
[SSD] fuse bn add relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] bn group: 8
[SSD] network: resnet34_v1
fuse bn relu: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
fuse bn add relu: True
fuse bn relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
bn group: 8
fuse bn add relu: True
[SSD] fuse bn add relu: True
bn all reduce fp16: False
about to model_zoo.get_model( resnet34_v1 )
loss scaling: 128.0
[SSD] bn group: 8
MPI size: 1024
bn group: 8
network name: ssd_resnet34_mlperf_NHWC_coco2017_300
about to model_zoo.get_model( resnet34_v1 )
MPI global rank: 1016
bn all reduce fp16: False
fuse bn relu: True
MPI local rank: 0
fuse bn add relu: True
MPI size: 1024
async validation: True
bn group: 8
MPI global rank: 992
[SSD] network: resnet34_v1
bn all reduce fp16: False
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
MPI size: 1024
async validation: True
[SSD] fuse bn relu: True
MPI global rank: 688
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
MPI local rank: 0
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
async validation: True
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] network: resnet34_v1
[SSD] fuse bn add relu: True
[SSD] norm layer: <class 'ssd.group_batch_norm.GroupBatchNorm'>
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
[SSD] fuse bn relu: True
[SSD] fuse bn add relu: True
[SSD] bn group: 8
about to model_zoo.get_model( resnet34_v1 )
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
COCO reader: raw images
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
/opt/mxnet/python/mxnet/gluon/block.py:1591: UserWarning: Cannot decide type for the following arguments. Consider providing them as input:
	data: None
  input_sym_arg_type = in_param.infer_type()[0]
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:32] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374573404, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 117266, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 373}}
:::MLLOG {"namespace": "", "time_ms": 1621374573404, "event_type": "POINT_IN_TIME", "key": "max_samples", "value": 1, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 374}}
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374573405, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_steps", "value": 1336, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621374573405, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_factor", "value": 0, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 32}}
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374573405, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 0.336, "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621374573405, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [68, 85], "metadata": {"file": "/workspace/ssd/lr_scheduler.py", "lineno": 35}}
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
:::MLLOG {"namespace": "", "time_ms": 1621374573414, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 5000, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 417}}
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: raw images
COCO reader: raw images
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[14:49:33] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
:::MLLOG {"namespace": "", "time_ms": 1621374575359, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 4e-05, "metadata": {"file": "/workspace/ssd/trainer.py", "lineno": 29}}
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
INFO:root:Running training dry runs ...
COCO reader: TFRecord
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
INFO:root:COCO reader: TFRecord
Running training dry runs ...
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:COCO reader: TFRecord
COCO reader: TFRecord
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
INFO:root:Running training dry runs ...
Running training dry runs ...
[luna-0021:0:3353513 - context.c:581] INFO job (ID: 17873238427163651158) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353513 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x10 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353513 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4f caps:0x16
[luna-0021:0:3353513 - comm.c:385] INFO [group#:0] group id:0 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x480a00000000) mlid:c016
[luna-0021:0:3353513 - comm.c:385] INFO [group#:1] group id:0 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3353523 - context.c:581] INFO job (ID: 17873238420412969003) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353523 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x11 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353523 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x50 caps:0x16
[luna-0021:0:3353523 - comm.c:385] INFO [group#:0] group id:1 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x490a00000001) mlid:c017
[luna-0021:0:3353523 - comm.c:385] INFO [group#:1] group id:1 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3353525 - context.c:581] INFO job (ID: 17873238106089908543) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353525 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x12 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353525 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x51 caps:0x16
[luna-0021:0:3353525 - comm.c:385] INFO [group#:0] group id:2 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x4a0a00000002) mlid:c018
[luna-0021:0:3353525 - comm.c:385] INFO [group#:1] group id:2 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3353528 - context.c:581] INFO job (ID: 17873238397959005611) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353528 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x13 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353528 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x52 caps:0x16
[luna-0021:0:3353528 - comm.c:385] INFO [group#:0] group id:3 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x4b0a00000003) mlid:c019
[luna-0021:0:3353528 - comm.c:385] INFO [group#:1] group id:3 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3353518 - context.c:581] INFO job (ID: 17873237724402833598) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353518 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x15 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353518 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x54 caps:0x16
[luna-0021:0:3353518 - comm.c:385] INFO [group#:0] group id:4 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x4c0a00000004) mlid:c01a
[luna-0021:0:3353518 - comm.c:385] INFO [group#:1] group id:4 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3353524 - context.c:581] INFO job (ID: 17873238007276014450) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353524 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x14 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353524 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x53 caps:0x16
[luna-0021:0:3353524 - comm.c:385] INFO [group#:0] group id:5 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x4d0a00000005) mlid:c01b
[luna-0021:0:3353524 - comm.c:385] INFO [group#:1] group id:5 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3353520 - context.c:581] INFO job (ID: 17873238341642442043) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353520 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1a caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353520 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x59 caps:0x16
[luna-0021:0:3353520 - comm.c:385] INFO [group#:0] group id:6 tree idx:0 tree_type:LLT rail_idx:0 group size:128 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0x4e0a00000006) mlid:c01c
[luna-0021:0:3353520 - comm.c:385] INFO [group#:1] group id:6 tree idx:1 tree_type:SAT rail_idx:0 group size:128 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238016537433982) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1b caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353526 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x5a caps:0x16
[luna-0021:0:3353526 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1946704 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4141803 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3490555 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1690069 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2965401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3472774 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3377995 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:63992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3080368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1298605 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1716300 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3078398 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1155835 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2135834 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3045827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:260984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:308587 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1055739 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:124373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1168406 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:988952 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1397415 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1122327 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1862082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:884372 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1267498 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:768665 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:323850 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:87418 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2444065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1052540 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:475495 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2023444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1082766 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1125877 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:64064 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1852150 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1327329 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2980625 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3581000 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3020619 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2318153 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1216567 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:258588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1169521 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1251878 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:584143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2161793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:826662 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3628123 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:91657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4181630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:456559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:556352 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1058677 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2094682 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3144294 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1247451 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2382474 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2011261 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1378496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:578793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1067586 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2899186 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:61614 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4136984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1180538 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:626903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1924191 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1307078 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3147467 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4081349 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:917717 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1467113 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3321680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1354161 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3224279 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1447827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1154757 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3475959 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2055361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2605992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:486267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:896088 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1069112 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3716915 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3265595 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4183630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:576558 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:819049 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1056056 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2662680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1002233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2471510 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1483875 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1466320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1442624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1653119 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:138210 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2664198 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:32223 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3789460 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1751960 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3727741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2237160 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2480196 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2571233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2716707 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1550599 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1302938 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2007559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1215650 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2356318 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1543708 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1248335 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2085663 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2590095 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1885387 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1161468 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2523909 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3562395 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2383685 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3808485 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3620437 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:46703 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:310517 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:447308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238017118912723) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1c caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353526 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x5b caps:0x16
[luna-0021:0:3353526 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1298605 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1946704 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1267498 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4141803 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1125877 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1169521 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:456559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3144294 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:61614 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2965401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:917717 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3224279 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3472774 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3716915 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1002233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3377995 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1653119 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2664198 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:63992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:32223 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3080368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2237160 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2085663 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1716300 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3078398 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1155835 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2135834 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3562395 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3045827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:260984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:308587 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1055739 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:124373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1168406 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:988952 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1397415 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1122327 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1862082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:884372 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:768665 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2383685 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:323850 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:87418 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2444065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1052540 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:475495 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2023444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1082766 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:64064 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1852150 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1327329 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2980625 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3581000 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3490555 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3020619 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2318153 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1216567 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:258588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1251878 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:584143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2161793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3808485 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:826662 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3620437 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3628123 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:91657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4181630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:556352 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1058677 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1690069 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2094682 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1247451 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2382474 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2011261 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1378496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:578793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1067586 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:46703 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2899186 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4136984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1180538 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:626903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1924191 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1307078 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3147467 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4081349 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1467113 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3321680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1354161 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1447827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1154757 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:310517 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3475959 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2055361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2605992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:486267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:896088 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1069112 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3265595 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4183630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:447308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:576558 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:819049 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1056056 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2662680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2471510 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1483875 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1466320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1442624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:138210 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3789460 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1751960 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3727741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2480196 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2571233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2716707 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1550599 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1302938 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2007559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1215650 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2356318 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1543708 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1248335 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2590095 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1885387 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1161468 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2523909 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238017399692582) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1d caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353526 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x5c caps:0x16
[luna-0021:0:3353526 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1125877 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2899186 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3224279 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3716915 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1002233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3377995 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3080368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2237160 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1298605 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1716300 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1946704 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3078398 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1155835 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2135834 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3562395 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3045827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:260984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:308587 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1055739 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:124373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1168406 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:988952 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1397415 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1122327 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1862082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:884372 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1267498 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:768665 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2383685 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4141803 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:323850 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:87418 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2444065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1052540 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:475495 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2023444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1082766 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:64064 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1852150 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1327329 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2980625 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3581000 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3490555 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3020619 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2318153 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1216567 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:258588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1169521 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1251878 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:584143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2161793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:826662 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3620437 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3628123 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:91657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4181630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:456559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:556352 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1058677 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1690069 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2094682 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3144294 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1247451 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2382474 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2011261 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1378496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1067586 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:61614 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4136984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1180538 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:626903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1924191 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1307078 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3147467 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2965401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4081349 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:917717 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1467113 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3321680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1447827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1154757 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3475959 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2055361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2605992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3472774 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:486267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:896088 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1069112 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3265595 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4183630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:447308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:576558 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:819049 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1056056 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2662680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2471510 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1483875 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1466320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1442624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1653119 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:138210 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2664198 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:63992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:32223 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3789460 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1751960 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3727741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2480196 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2571233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2716707 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1550599 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1302938 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2007559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1215650 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2356318 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1543708 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1248335 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2085663 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2590095 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1885387 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1161468 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2523909 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3808485 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:578793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:46703 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1354161 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:310517 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238016676372249) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1e caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:3353526 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x5d caps:0x16
[luna-0021:0:3353526 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1298605 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1267498 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1125877 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1002233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3377995 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3080368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2085663 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1716300 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1946704 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1155835 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2135834 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3562395 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3045827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:308587 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1055739 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:124373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1168406 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:988952 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1397415 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1862082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:884372 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:768665 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2383685 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4141803 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:87418 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2444065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1052540 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:475495 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2023444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:64064 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1852150 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1327329 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3581000 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3490555 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3020619 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2318153 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:258588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1169521 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1251878 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:584143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:826662 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3628123 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:91657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4181630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:456559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:556352 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1690069 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2094682 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3144294 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1247451 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2382474 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1378496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:578793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1067586 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:46703 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2899186 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:61614 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4136984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1180538 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:626903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1924191 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1307078 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3147467 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2965401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4081349 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:917717 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1467113 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3321680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1354161 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3224279 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1447827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1154757 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3475959 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2055361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2605992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3472774 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:486267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:896088 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1069112 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3716915 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4183630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:576558 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:819049 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1056056 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2662680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2471510 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1483875 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1442624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1653119 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:138210 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2664198 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:63992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:32223 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3789460 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1751960 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3727741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2237160 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2480196 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2571233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1550599 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1302938 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2007559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1215650 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2356318 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1543708 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1248335 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2590095 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1885387 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1161468 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2523909 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3078398 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:260984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1122327 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:323850 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1082766 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2980625 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1216567 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2161793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3808485 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3620437 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1058677 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2011261 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:310517 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3265595 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:447308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1466320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2716707 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238016297877945) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x4 caps:0x6 quota: ( osts:28 user_data_per_ost:1024 max_groups:28 max_qps:1 max_group_channels:1)
[luna-0021:0:3353526 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x43 caps:0x16
[luna-0021:0:3353526 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1298605 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1946704 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1267498 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4141803 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1125877 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:258588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:584143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3144294 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2899186 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3224279 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:310517 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3472774 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1002233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2471510 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:63992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1302938 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1716300 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3078398 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1155835 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2135834 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3562395 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3045827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:260984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:308587 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1055739 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:124373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1168406 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:988952 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1397415 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1122327 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1862082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:884372 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:768665 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2383685 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:323850 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:87418 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2444065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1052540 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:475495 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2023444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1082766 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:64064 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1852150 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1327329 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2980625 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3581000 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3490555 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3020619 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2318153 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1216567 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1169521 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1251878 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2161793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3808485 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:826662 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3620437 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3628123 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:91657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4181630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:456559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:556352 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1058677 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1690069 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2094682 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1247451 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2382474 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2011261 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1378496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:578793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1067586 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:46703 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:61614 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4136984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1180538 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:626903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1924191 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1307078 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3147467 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2965401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4081349 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:917717 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1467113 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3321680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1354161 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1447827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1154757 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3475959 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2055361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2605992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:486267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:896088 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1069112 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3716915 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3265595 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4183630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:447308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:576558 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:819049 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1056056 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2662680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1483875 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1466320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1442624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3377995 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1653119 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:138210 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2664198 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:32223 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3080368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3789460 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1751960 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3727741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2237160 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2480196 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2571233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2716707 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1550599 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2007559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1215650 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2356318 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1543708 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1248335 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2085663 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2590095 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1885387 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1161468 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2523909 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238018295402578) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x5 caps:0x6 quota: ( osts:7 user_data_per_ost:96 max_groups:7 max_qps:1 max_group_channels:1)
[luna-0021:0:3353526 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x44 caps:0x16
[luna-0021:0:3353526 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2899186 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1002233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1298605 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1716300 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1946704 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:124373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:988952 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1397415 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1267498 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4141803 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:475495 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1082766 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1852150 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1327329 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3490555 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3020619 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:258588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1169521 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:584143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4181630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:456559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1690069 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1067586 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:61614 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1924191 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1307078 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3147467 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2965401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3321680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3224279 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1447827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1154757 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3472774 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:486267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:896088 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3716915 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4183630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:576558 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:819049 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2662680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2471510 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1483875 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3377995 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1653119 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:138210 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2664198 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:63992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3080368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3789460 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3727741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2237160 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2480196 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1302938 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2007559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1215650 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1248335 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2590095 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1885387 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1161468 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2523909 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3078398 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1155835 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2135834 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3562395 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3045827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:260984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:308587 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1055739 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1168406 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1122327 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1862082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:884372 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:768665 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2383685 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:323850 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:87418 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2444065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1052540 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2023444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1125877 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:64064 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2980625 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3581000 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2318153 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1216567 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1251878 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2161793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3808485 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:826662 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3620437 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3628123 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:91657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:556352 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1058677 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2094682 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3144294 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1247451 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2382474 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2011261 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1378496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:578793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:46703 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4136984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1180538 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:626903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4081349 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:917717 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1467113 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1354161 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:310517 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3475959 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2055361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2605992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1069112 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3265595 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:447308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1056056 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1466320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1442624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:32223 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1751960 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2571233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2716707 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1550599 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2356318 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1543708 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2085663 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238017784544648) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1f caps:0x6 quota: ( osts:3 user_data_per_ost:96 max_groups:3 max_qps:1 max_group_channels:1)
[luna-0021:0:3353526 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x5e caps:0x16
[luna-0021:0:3353526 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:1946704 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:1155835 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:1267498 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0272:111:4141803 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:1852150 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0276:115:3581000 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1169521 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0261:100:826662 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0263:102:456559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:97:2899186 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:61614 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:88:1924191 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:98:3224279 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0122:53:1154757 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0280:119:3475959 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:77:2605992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0262:101:3472774 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1002233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:92:1653119 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:89:63992 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:83:32223 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3080368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0121:52:1298605 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:1716300 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0125:56:3078398 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2135834 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:80:3562395 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0268:107:3045827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:68:260984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:65:308587 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1055739 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0271:110:124373 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0119:50:1168406 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:988952 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0265:104:1397415 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:62:1122327 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:1862082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:884372 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0114:45:768665 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:2383685 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:66:323850 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:87418 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:75:2444065 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0266:105:1052540 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:475495 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2023444 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0123:54:1082766 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0120:51:1125877 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:90:64064 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0264:103:1327329 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:94:2980625 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0279:118:3490555 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0267:106:3020619 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:2318153 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:64:1216567 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:70:258588 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0118:49:1251878 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:85:584143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:2161793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:3808485 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0275:114:3620437 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0278:117:3628123 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:91657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:72:4181630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0269:108:556352 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1058677 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:93:1690069 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:87:2094682 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:99:3144294 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:1247451 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0111:42:2382474 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:81:2011261 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0284:123:1378496 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0287:126:578793 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0124:55:1067586 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:73:46703 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:67:4136984 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0127:58:1180538 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:61:626903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:1307078 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0273:112:3147467 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:76:2965401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:4081349 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:917717 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0109:40:1467113 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:91:3321680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:1354161 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0110:41:1447827 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:71:310517 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2055361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:486267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0113:44:896088 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0128:59:1069112 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0277:116:3716915 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0274:113:3265595 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:4183630 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0270:109:447308 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0115:46:576558 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0112:43:819049 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1056056 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:82:2662680 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:79:2471510 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:1483875 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0282:121:1466320 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:1442624 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0116:47:3377995 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:74:138210 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:95:2664198 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:3789460 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:1751960 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0283:122:3727741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0286:125:2237160 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:78:2480196 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:84:2571233 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:69:2716707 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:1550599 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0117:48:1302938 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:60:2007559 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0126:57:1215650 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:2356318 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0281:120:1543708 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:63:1248335 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2085663 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:96:2590095 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0288:127:1885387 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0285:124:1161468 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:86:2523909 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238016883275621) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238018271113807) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238017233691370) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238016359061813) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238017866146191) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238016240242874) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238018333569906) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238017586666514) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238017061542923) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238017175430092) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238018171050926) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238017960881571) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238017952186565) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238016568455671) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238018255094361) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238016336795752) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:3353526 - context.c:581] INFO job (ID: 17873238016923956088) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:3353526 unique id 14] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:3353526 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:3353526 - context.c:621] ERROR SHArP Job init error: No resource
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
INFO:root:Running inference dry runs ...
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Done
Done
Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Running inference dry runs ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
INFO:root:Done
Done
Done
Cleaning the dummy pipelines ...
INFO:root:Cleaning the dummy pipelines ...
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
:::MLLOG {"namespace": "", "time_ms": 1621374959365, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959366, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959366, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959366, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959366, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959366, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959366, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm1_beta"}}
INFO:root:Done
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv2_weight"}}
Done
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage1_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959367, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm3_beta"}}
INFO:root:Done
Done
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959368, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv6_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm6_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm6_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv7_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm7_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm7_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_conv8_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm8_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage2_batchnorm8_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm0_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm0_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm1_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm1_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm2_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959369, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm2_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm3_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm3_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm4_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm4_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv5_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm5_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm5_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv6_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm6_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm6_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv7_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm7_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm7_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959370, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv8_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm8_gamma"}}
INFO:root:Done
Done
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm8_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv9_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm9_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm9_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv10_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm10_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm10_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv11_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm11_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm11_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_conv12_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm12_gamma"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_resnetmlperf0_stage3_batchnorm12_beta"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959371, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv1_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv1_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv2_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv2_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv2_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv3_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv3_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv3_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_trans_conv4_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv4_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959372, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_expand_conv4_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor0_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor0_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor1_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor1_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor2_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor2_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor3_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor3_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor4_conv0_weight"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor4_conv0_bias"}}
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor5_conv0_weight"}}
INFO:root:Done
:::MLLOG {"namespace": "", "time_ms": 1621374959373, "event_type": "POINT_IN_TIME", "key": "weights_initialization", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 98, "tensor": "ssd0_convpredictor5_conv0_bias"}}
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Done
Done
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
INFO:root:Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
Loading backbones weights from /pretrained/mxnet/resnet34-333f7ec4.pickle
:::MLLOG {"namespace": "", "time_ms": 1621374960159, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 522}}
:::MLLOG {"namespace": "", "time_ms": 1621374960160, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 526}}
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621374961256, "event_type": "POINT_IN_TIME", "key": "model_bn_span", "value": 24, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 110}}
:::MLLOG {"namespace": "", "time_ms": 1621374961256, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 3072, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 111}}
:::MLLOG {"namespace": "", "time_ms": 1621374961256, "event_type": "POINT_IN_TIME", "key": "d_batch_size", "value": 3, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 112}}
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621374961256, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 115}}
INFO:root:Training from epoch: 1
Training from epoch: 1
:::MLLOG {"namespace": "", "time_ms": 1621374961256, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 1, "current_iter_num": 0}}
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:Training from epoch: 1
Training from epoch: 1
INFO:root:[Training][Epoch 1] training time: 0.453 [sec],avg speed: 257910.882 [imgs/sec],loss=19.922
[Training][Epoch 1] training time: 0.453 [sec],avg speed: 257910.882 [imgs/sec],loss=19.922
:::MLLOG {"namespace": "", "time_ms": 1621374961709, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 257910.8821090247, "lr": 0.009556886227544914, "loss": 19.92152869073968}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621374961709, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 257910.8821090247, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374961710, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621374961710, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 2, "current_iter_num": 0}}
INFO:root:[Training][Epoch 2] training time: 0.358 [sec],avg speed: 326021.941 [imgs/sec],loss=13.230
[Training][Epoch 2] training time: 0.358 [sec],avg speed: 326021.941 [imgs/sec],loss=13.230
:::MLLOG {"namespace": "", "time_ms": 1621374962068, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 326021.9412073351, "lr": 0.019365269461077805, "loss": 13.229990482330322}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621374962068, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 326021.9412073351, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374962068, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 2}}
:::MLLOG {"namespace": "", "time_ms": 1621374962068, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 3, "current_iter_num": 0}}
INFO:root:[Training][Iteration 100][Epoch 3, Batch 22/39] lr: 0.02515, training time: 9.027 [ms], speed: 340317.956 [imgs/sec], loss=9.744
[Training][Iteration 100][Epoch 3, Batch 22/39] lr: 0.02515, training time: 9.027 [ms], speed: 340317.956 [imgs/sec], loss=9.744
:::MLLOG {"namespace": "", "time_ms": 1621374962267, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 340317.95610300737, "loss": 9.743788719177246}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [3, 100]}}
:::MLLOG {"namespace": "", "time_ms": 1621374962267, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 340317.95610300737, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 3] training time: 0.337 [sec],avg speed: 346294.103 [imgs/sec],loss=9.464
[Training][Epoch 3] training time: 0.337 [sec],avg speed: 346294.103 [imgs/sec],loss=9.464
:::MLLOG {"namespace": "", "time_ms": 1621374962406, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 346294.10344556876, "lr": 0.029173652694610752, "loss": 9.463874001252023}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621374962406, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 346294.10344556876, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374962406, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 3}}
:::MLLOG {"namespace": "", "time_ms": 1621374962406, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 4, "current_iter_num": 0}}
INFO:root:[Training][Epoch 4] training time: 0.332 [sec],avg speed: 351286.742 [imgs/sec],loss=8.816
[Training][Epoch 4] training time: 0.332 [sec],avg speed: 351286.742 [imgs/sec],loss=8.816
:::MLLOG {"namespace": "", "time_ms": 1621374962738, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 351286.7423231894, "lr": 0.0389820359281437, "loss": 8.815690755844116}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621374962739, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 351286.7423231894, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374962739, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 4}}
:::MLLOG {"namespace": "", "time_ms": 1621374962739, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 5, "current_iter_num": 0}}
INFO:root:[Training][Epoch 5] training time: 0.311 [sec],avg speed: 375297.514 [imgs/sec],loss=8.705
[Training][Epoch 5] training time: 0.311 [sec],avg speed: 375297.514 [imgs/sec],loss=8.705
:::MLLOG {"namespace": "", "time_ms": 1621374963050, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 375297.51366780745, "lr": 0.048790419161676646, "loss": 8.705446393866287}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621374963050, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 375297.51366780745, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374963050, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621374963061, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 5}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 192.386 [ms], allgather: 37.710 [ms], asnumpy: 7.668 [ms], speed: 21029.161 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 192.386 [ms], allgather: 37.710 [ms], asnumpy: 7.668 [ms], speed: 21029.161 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374963302, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 6, "current_iter_num": 0}}
INFO:root:[Training][Iteration 200][Epoch 6, Batch 5/39] lr: 0.05030, training time: 8.935 [ms], speed: 343808.253 [imgs/sec], loss=8.212
[Training][Iteration 200][Epoch 6, Batch 5/39] lr: 0.05030, training time: 8.935 [ms], speed: 343808.253 [imgs/sec], loss=8.212
:::MLLOG {"namespace": "", "time_ms": 1621374963346, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 343808.2527416816, "loss": 8.211504936218262}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [6, 200]}}
:::MLLOG {"namespace": "", "time_ms": 1621374963347, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 343808.2527416816, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 6] training time: 0.317 [sec],avg speed: 368092.728 [imgs/sec],loss=8.464
[Training][Epoch 6] training time: 0.317 [sec],avg speed: 368092.728 [imgs/sec],loss=8.464
:::MLLOG {"namespace": "", "time_ms": 1621374963619, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 368092.7277350055, "lr": 0.05859880239520959, "loss": 8.46365697760331}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621374963619, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 368092.7277350055, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374963619, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 6}}
:::MLLOG {"namespace": "", "time_ms": 1621374963619, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 7, "current_iter_num": 0}}
INFO:root:[Training][Epoch 7] training time: 0.314 [sec],avg speed: 372217.656 [imgs/sec],loss=8.281
[Training][Epoch 7] training time: 0.314 [sec],avg speed: 372217.656 [imgs/sec],loss=8.281
:::MLLOG {"namespace": "", "time_ms": 1621374963933, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372217.6563891655, "lr": 0.06840718562874248, "loss": 8.280810481623599}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621374963933, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372217.6563891655, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374963933, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 7}}
:::MLLOG {"namespace": "", "time_ms": 1621374963934, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 8, "current_iter_num": 0}}
INFO:root:[Training][Iteration 300][Epoch 8, Batch 27/39] lr: 0.07545, training time: 8.885 [ms], speed: 345768.296 [imgs/sec], loss=7.305
[Training][Iteration 300][Epoch 8, Batch 27/39] lr: 0.07545, training time: 8.885 [ms], speed: 345768.296 [imgs/sec], loss=7.305
:::MLLOG {"namespace": "", "time_ms": 1621374964174, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 345768.29633163475, "loss": 7.304510593414307}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [8, 300]}}
:::MLLOG {"namespace": "", "time_ms": 1621374964174, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 345768.29633163475, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 8] training time: 0.333 [sec],avg speed: 350526.995 [imgs/sec],loss=7.813
[Training][Epoch 8] training time: 0.333 [sec],avg speed: 350526.995 [imgs/sec],loss=7.813
:::MLLOG {"namespace": "", "time_ms": 1621374964267, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 350526.9948891382, "lr": 0.07821556886227543, "loss": 7.812905324132819}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621374964267, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 350526.9948891382, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374964267, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 8}}
:::MLLOG {"namespace": "", "time_ms": 1621374964267, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 9, "current_iter_num": 0}}
INFO:root:[Training][Epoch 9] training time: 0.354 [sec],avg speed: 329433.589 [imgs/sec],loss=7.719
[Training][Epoch 9] training time: 0.354 [sec],avg speed: 329433.589 [imgs/sec],loss=7.719
:::MLLOG {"namespace": "", "time_ms": 1621374964622, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 329433.58881277725, "lr": 0.08802395209580838, "loss": 7.718663303475631}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621374964622, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 329433.58881277725, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374964622, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 9}}
:::MLLOG {"namespace": "", "time_ms": 1621374964622, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 10, "current_iter_num": 0}}
INFO:root:[Training][Epoch 10] training time: 0.309 [sec],avg speed: 377767.152 [imgs/sec],loss=7.210
[Training][Epoch 10] training time: 0.309 [sec],avg speed: 377767.152 [imgs/sec],loss=7.210
:::MLLOG {"namespace": "", "time_ms": 1621374964931, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377767.1515632209, "lr": 0.0978323353293413, "loss": 7.209737777709961}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374964931, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377767.1515632209, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374964931, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374964942, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 10}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 53.032 [ms], allgather: 34.863 [ms], asnumpy: 5.800 [ms], speed: 53363.461 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 53.032 [ms], allgather: 34.863 [ms], asnumpy: 5.800 [ms], speed: 53363.461 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374965036, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 11, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374965099, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 5}}
:::MLLOG {"namespace": "", "time_ms": 1621374965099, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.0013017295782086326, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 5}}
INFO:root:[Training][Iteration 400][Epoch 11, Batch 10/39] lr: 0.10060, training time: 10.937 [ms], speed: 280878.980 [imgs/sec], loss=6.640
[Training][Iteration 400][Epoch 11, Batch 10/39] lr: 0.10060, training time: 10.937 [ms], speed: 280878.980 [imgs/sec], loss=6.640
:::MLLOG {"namespace": "", "time_ms": 1621374965146, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 280878.97997754696, "loss": 6.639871597290039}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [11, 400]}}
:::MLLOG {"namespace": "", "time_ms": 1621374965146, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 280878.97997754696, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
loading annotations into memory...
Done (t=0.10s)
creating index...
Loading and preparing results...
DONE (t=0.38s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.90s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.00130
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.00373
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.00075
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.00266
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.00205
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.00347
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.00471
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.00471
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
INFO:root:[Training][Epoch 11] training time: 0.339 [sec],avg speed: 344808.448 [imgs/sec],loss=7.247
[Training][Epoch 11] training time: 0.339 [sec],avg speed: 344808.448 [imgs/sec],loss=7.247
:::MLLOG {"namespace": "", "time_ms": 1621374965375, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 344808.4477367878, "lr": 0.10764071856287424, "loss": 7.246674663142154}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621374965375, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 344808.4477367878, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374965375, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 11}}
:::MLLOG {"namespace": "", "time_ms": 1621374965375, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 12, "current_iter_num": 0}}
/usr/local/lib/python3.8/dist-packages/loky/process_executor.py:688: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.
  warnings.warn(
INFO:root:[Training][Epoch 12] training time: 0.389 [sec],avg speed: 300305.731 [imgs/sec],loss=6.844
[Training][Epoch 12] training time: 0.389 [sec],avg speed: 300305.731 [imgs/sec],loss=6.844
:::MLLOG {"namespace": "", "time_ms": 1621374965764, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 300305.7309831909, "lr": 0.11744910179640719, "loss": 6.8441808223724365}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621374965765, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 300305.7309831909, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374965765, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 12}}
:::MLLOG {"namespace": "", "time_ms": 1621374965765, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 13, "current_iter_num": 0}}
INFO:root:[Training][Iteration 500][Epoch 13, Batch 32/39] lr: 0.12575, training time: 8.238 [ms], speed: 372886.027 [imgs/sec], loss=7.072
[Training][Iteration 500][Epoch 13, Batch 32/39] lr: 0.12575, training time: 8.238 [ms], speed: 372886.027 [imgs/sec], loss=7.072
:::MLLOG {"namespace": "", "time_ms": 1621374966029, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372886.0274439405, "loss": 7.071966648101807}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [13, 500]}}
:::MLLOG {"namespace": "", "time_ms": 1621374966029, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372886.0274439405, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 13] training time: 0.313 [sec],avg speed: 373331.894 [imgs/sec],loss=6.919
[Training][Epoch 13] training time: 0.313 [sec],avg speed: 373331.894 [imgs/sec],loss=6.919
:::MLLOG {"namespace": "", "time_ms": 1621374966078, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373331.8935695202, "lr": 0.1272574850299401, "loss": 6.918654103028147}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621374966078, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373331.8935695202, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374966078, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 13}}
:::MLLOG {"namespace": "", "time_ms": 1621374966078, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 14, "current_iter_num": 0}}
INFO:root:[Training][Epoch 14] training time: 0.333 [sec],avg speed: 350840.957 [imgs/sec],loss=6.341
[Training][Epoch 14] training time: 0.333 [sec],avg speed: 350840.957 [imgs/sec],loss=6.341
:::MLLOG {"namespace": "", "time_ms": 1621374966411, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 350840.9568673647, "lr": 0.13706586826347306, "loss": 6.341484885466726}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621374966411, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 350840.9568673647, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374966411, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621374966412, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 15, "current_iter_num": 0}}
INFO:root:[Training][Epoch 15] training time: 0.402 [sec],avg speed: 290330.240 [imgs/sec],loss=6.305
[Training][Epoch 15] training time: 0.402 [sec],avg speed: 290330.240 [imgs/sec],loss=6.305
:::MLLOG {"namespace": "", "time_ms": 1621374966814, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 290330.23989146407, "lr": 0.14687425149700598, "loss": 6.3045904573641325}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621374966814, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 290330.23989146407, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374966814, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621374966825, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 15}}
INFO:root:[Validation] save_parameters: 0.002 [ms], inference: 48.999 [ms], allgather: 32.268 [ms], asnumpy: 6.293 [ms], speed: 57102.963 [imgs/sec]
[Validation] save_parameters: 0.002 [ms], inference: 48.999 [ms], allgather: 32.268 [ms], asnumpy: 6.293 [ms], speed: 57102.963 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374966914, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 16, "current_iter_num": 0}}
INFO:root:[Training][Iteration 600][Epoch 16, Batch 15/39] lr: 0.15090, training time: 14.422 [ms], speed: 213010.671 [imgs/sec], loss=3.969
[Training][Iteration 600][Epoch 16, Batch 15/39] lr: 0.15090, training time: 14.422 [ms], speed: 213010.671 [imgs/sec], loss=3.969
:::MLLOG {"namespace": "", "time_ms": 1621374967130, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 213010.67108102568, "loss": 3.9694979190826416}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [16, 600]}}
:::MLLOG {"namespace": "", "time_ms": 1621374967131, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 213010.67108102568, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
:::MLLOG {"namespace": "", "time_ms": 1621374967304, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 10}}
:::MLLOG {"namespace": "", "time_ms": 1621374967304, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.01231343304692486, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 10}}
INFO:root:[Training][Epoch 16] training time: 0.423 [sec],avg speed: 276082.674 [imgs/sec],loss=5.816
[Training][Epoch 16] training time: 0.423 [sec],avg speed: 276082.674 [imgs/sec],loss=5.816
:::MLLOG {"namespace": "", "time_ms": 1621374967337, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 276082.6736089614, "lr": 0.15668263473053892, "loss": 5.816204792574832}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621374967337, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 276082.6736089614, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374967337, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 16}}
:::MLLOG {"namespace": "", "time_ms": 1621374967337, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 17, "current_iter_num": 0}}
INFO:root:[Training][Epoch 17] training time: 0.342 [sec],avg speed: 341529.274 [imgs/sec],loss=6.144
[Training][Epoch 17] training time: 0.342 [sec],avg speed: 341529.274 [imgs/sec],loss=6.144
:::MLLOG {"namespace": "", "time_ms": 1621374967679, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 341529.2741315919, "lr": 0.16649101796407187, "loss": 6.143841900323567}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621374967680, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 341529.2741315919, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374967680, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 17}}
:::MLLOG {"namespace": "", "time_ms": 1621374967680, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 18, "current_iter_num": 0}}
INFO:root:[Training][Iteration 700][Epoch 18, Batch 37/39] lr: 0.17605, training time: 8.865 [ms], speed: 346519.133 [imgs/sec], loss=4.847
[Training][Iteration 700][Epoch 18, Batch 37/39] lr: 0.17605, training time: 8.865 [ms], speed: 346519.133 [imgs/sec], loss=4.847
:::MLLOG {"namespace": "", "time_ms": 1621374968008, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 346519.13311300107, "loss": 4.8472490310668945}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [18, 700]}}
:::MLLOG {"namespace": "", "time_ms": 1621374968009, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 346519.13311300107, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 18] training time: 0.338 [sec],avg speed: 345618.463 [imgs/sec],loss=6.503
[Training][Epoch 18] training time: 0.338 [sec],avg speed: 345618.463 [imgs/sec],loss=6.503
:::MLLOG {"namespace": "", "time_ms": 1621374968018, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 345618.4634384792, "lr": 0.1762994011976048, "loss": 6.502655932777806}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621374968018, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 345618.4634384792, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374968018, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 18}}
:::MLLOG {"namespace": "", "time_ms": 1621374968018, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 19, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374968345, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 15}}
:::MLLOG {"namespace": "", "time_ms": 1621374968345, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.04395417248966986, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 15}}
INFO:root:[Training][Epoch 19] training time: 0.331 [sec],avg speed: 352995.486 [imgs/sec],loss=5.659
[Training][Epoch 19] training time: 0.331 [sec],avg speed: 352995.486 [imgs/sec],loss=5.659
:::MLLOG {"namespace": "", "time_ms": 1621374968349, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352995.4859548354, "lr": 0.18610778443113773, "loss": 5.65885527510392}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621374968349, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352995.4859548354, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374968349, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 19}}
:::MLLOG {"namespace": "", "time_ms": 1621374968350, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 20, "current_iter_num": 0}}
INFO:root:[Training][Epoch 20] training time: 0.309 [sec],avg speed: 378119.568 [imgs/sec],loss=5.613
[Training][Epoch 20] training time: 0.309 [sec],avg speed: 378119.568 [imgs/sec],loss=5.613
:::MLLOG {"namespace": "", "time_ms": 1621374968659, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 378119.56752114836, "lr": 0.19591616766467065, "loss": 5.613322063496239}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621374968659, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 378119.56752114836, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374968659, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621374968669, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 20}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 49.671 [ms], allgather: 30.100 [ms], asnumpy: 4.799 [ms], speed: 59121.335 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 49.671 [ms], allgather: 30.100 [ms], asnumpy: 4.799 [ms], speed: 59121.335 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374968754, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 21, "current_iter_num": 0}}
INFO:root:[Training][Iteration 800][Epoch 21, Batch 20/39] lr: 0.20120, training time: 8.147 [ms], speed: 377058.015 [imgs/sec], loss=6.856
[Training][Iteration 800][Epoch 21, Batch 20/39] lr: 0.20120, training time: 8.147 [ms], speed: 377058.015 [imgs/sec], loss=6.856
:::MLLOG {"namespace": "", "time_ms": 1621374968917, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377058.0146434821, "loss": 6.855875492095947}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [21, 800]}}
:::MLLOG {"namespace": "", "time_ms": 1621374968918, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377058.0146434821, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 21] training time: 0.311 [sec],avg speed: 374855.606 [imgs/sec],loss=5.400
[Training][Epoch 21] training time: 0.311 [sec],avg speed: 374855.606 [imgs/sec],loss=5.400
:::MLLOG {"namespace": "", "time_ms": 1621374969066, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 374855.6062206155, "lr": 0.2057245508982036, "loss": 5.400257574884515}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621374969066, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 374855.6062206155, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374969066, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 21}}
:::MLLOG {"namespace": "", "time_ms": 1621374969066, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 22, "current_iter_num": 0}}
INFO:root:[Training][Epoch 22] training time: 0.320 [sec],avg speed: 364543.680 [imgs/sec],loss=5.633
[Training][Epoch 22] training time: 0.320 [sec],avg speed: 364543.680 [imgs/sec],loss=5.633
:::MLLOG {"namespace": "", "time_ms": 1621374969387, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364543.6797905773, "lr": 0.21553293413173652, "loss": 5.633435751262464}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621374969387, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364543.6797905773, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374969387, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 22}}
:::MLLOG {"namespace": "", "time_ms": 1621374969387, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 23, "current_iter_num": 0}}
INFO:root:[Training][Epoch 23] training time: 0.314 [sec],avg speed: 371232.730 [imgs/sec],loss=5.004
[Training][Epoch 23] training time: 0.314 [sec],avg speed: 371232.730 [imgs/sec],loss=5.004
:::MLLOG {"namespace": "", "time_ms": 1621374969702, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 371232.72961513966, "lr": 0.22534131736526947, "loss": 5.00399460918025}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621374969702, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 371232.72961513966, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374969702, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 23}}
:::MLLOG {"namespace": "", "time_ms": 1621374969703, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 24, "current_iter_num": 0}}
INFO:root:[Training][Iteration 900][Epoch 24, Batch 3/39] lr: 0.22635, training time: 8.432 [ms], speed: 364337.069 [imgs/sec], loss=3.707
[Training][Iteration 900][Epoch 24, Batch 3/39] lr: 0.22635, training time: 8.432 [ms], speed: 364337.069 [imgs/sec], loss=3.707
:::MLLOG {"namespace": "", "time_ms": 1621374969728, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364337.0689187151, "loss": 3.7065985202789307}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [24, 900]}}
:::MLLOG {"namespace": "", "time_ms": 1621374969728, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364337.0689187151, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
:::MLLOG {"namespace": "", "time_ms": 1621374969925, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 20}}
:::MLLOG {"namespace": "", "time_ms": 1621374969926, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.07612946376126932, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 20}}
INFO:root:[Training][Epoch 24] training time: 0.335 [sec],avg speed: 348608.043 [imgs/sec],loss=5.122
[Training][Epoch 24] training time: 0.335 [sec],avg speed: 348608.043 [imgs/sec],loss=5.122
:::MLLOG {"namespace": "", "time_ms": 1621374970038, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 348608.04328887205, "lr": 0.2351497005988024, "loss": 5.122472549739637}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621374970038, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 348608.04328887205, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374970038, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621374970038, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 25, "current_iter_num": 0}}
INFO:root:[Training][Epoch 25] training time: 0.356 [sec],avg speed: 327581.083 [imgs/sec],loss=5.211
[Training][Epoch 25] training time: 0.356 [sec],avg speed: 327581.083 [imgs/sec],loss=5.211
:::MLLOG {"namespace": "", "time_ms": 1621374970395, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 327581.0825010437, "lr": 0.24495808383233533, "loss": 5.211165076807926}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621374970395, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 327581.0825010437, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374970395, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621374970406, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 25}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 39.573 [ms], allgather: 28.802 [ms], asnumpy: 4.589 [ms], speed: 68525.645 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 39.573 [ms], allgather: 28.802 [ms], asnumpy: 4.589 [ms], speed: 68525.645 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374970479, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 26, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1000][Epoch 26, Batch 25/39] lr: 0.25150, training time: 8.319 [ms], speed: 369275.312 [imgs/sec], loss=5.212
[Training][Iteration 1000][Epoch 26, Batch 25/39] lr: 0.25150, training time: 8.319 [ms], speed: 369275.312 [imgs/sec], loss=5.212
:::MLLOG {"namespace": "", "time_ms": 1621374970687, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369275.3117584345, "loss": 5.211678504943848}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [26, 1000]}}
:::MLLOG {"namespace": "", "time_ms": 1621374970688, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369275.3117584345, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 26] training time: 0.316 [sec],avg speed: 369163.998 [imgs/sec],loss=5.070
[Training][Epoch 26] training time: 0.316 [sec],avg speed: 369163.998 [imgs/sec],loss=5.070
:::MLLOG {"namespace": "", "time_ms": 1621374970796, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369163.9982960256, "lr": 0.25476646706586825, "loss": 5.070338757414567}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621374970796, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369163.9982960256, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374970796, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 26}}
:::MLLOG {"namespace": "", "time_ms": 1621374970796, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 27, "current_iter_num": 0}}
INFO:root:[Training][Epoch 27] training time: 0.324 [sec],avg speed: 360745.849 [imgs/sec],loss=4.677
[Training][Epoch 27] training time: 0.324 [sec],avg speed: 360745.849 [imgs/sec],loss=4.677
:::MLLOG {"namespace": "", "time_ms": 1621374971120, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 360745.8489885144, "lr": 0.2645748502994012, "loss": 4.6767457096200244}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621374971120, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 360745.8489885144, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374971120, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 27}}
:::MLLOG {"namespace": "", "time_ms": 1621374971120, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 28, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374971407, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 25}}
:::MLLOG {"namespace": "", "time_ms": 1621374971407, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.09765680685806535, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 25}}
INFO:root:[Training][Epoch 28] training time: 0.316 [sec],avg speed: 369677.412 [imgs/sec],loss=4.673
[Training][Epoch 28] training time: 0.316 [sec],avg speed: 369677.412 [imgs/sec],loss=4.673
:::MLLOG {"namespace": "", "time_ms": 1621374971436, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369677.4116600691, "lr": 0.27438323353293415, "loss": 4.672940429888274}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621374971436, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369677.4116600691, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374971437, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621374971437, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 29, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1100][Epoch 29, Batch 8/39] lr: 0.27665, training time: 9.229 [ms], speed: 332876.540 [imgs/sec], loss=6.837
[Training][Iteration 1100][Epoch 29, Batch 8/39] lr: 0.27665, training time: 9.229 [ms], speed: 332876.540 [imgs/sec], loss=6.837
:::MLLOG {"namespace": "", "time_ms": 1621374971511, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 332876.53991771676, "loss": 6.837118625640869}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [29, 1100]}}
:::MLLOG {"namespace": "", "time_ms": 1621374971511, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 332876.53991771676, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 29] training time: 0.322 [sec],avg speed: 362661.144 [imgs/sec],loss=4.883
[Training][Epoch 29] training time: 0.322 [sec],avg speed: 362661.144 [imgs/sec],loss=4.883
:::MLLOG {"namespace": "", "time_ms": 1621374971759, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 362661.1438945317, "lr": 0.2841916167664671, "loss": 4.883241691087422}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621374971759, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 362661.1438945317, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374971759, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 29}}
:::MLLOG {"namespace": "", "time_ms": 1621374971759, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 30, "current_iter_num": 0}}
INFO:root:[Training][Epoch 30] training time: 0.332 [sec],avg speed: 351613.430 [imgs/sec],loss=4.745
[Training][Epoch 30] training time: 0.332 [sec],avg speed: 351613.430 [imgs/sec],loss=4.745
:::MLLOG {"namespace": "", "time_ms": 1621374972091, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 351613.4296369226, "lr": 0.29400000000000004, "loss": 4.745326286868045}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621374972091, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 351613.4296369226, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374972092, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621374972103, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 30}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.676 [ms], allgather: 46.283 [ms], asnumpy: 3.435 [ms], speed: 55312.956 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.676 [ms], allgather: 46.283 [ms], asnumpy: 3.435 [ms], speed: 55312.956 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374972195, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 31, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1200][Epoch 31, Batch 30/39] lr: 0.30180, training time: 11.831 [ms], speed: 259657.064 [imgs/sec], loss=5.650
[Training][Iteration 1200][Epoch 31, Batch 30/39] lr: 0.30180, training time: 11.831 [ms], speed: 259657.064 [imgs/sec], loss=5.650
:::MLLOG {"namespace": "", "time_ms": 1621374972550, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 259657.06375366682, "loss": 5.650405406951904}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [31, 1200]}}
:::MLLOG {"namespace": "", "time_ms": 1621374972550, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 259657.06375366682, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 31] training time: 0.421 [sec],avg speed: 277611.553 [imgs/sec],loss=4.650
[Training][Epoch 31] training time: 0.421 [sec],avg speed: 277611.553 [imgs/sec],loss=4.650
:::MLLOG {"namespace": "", "time_ms": 1621374972615, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 277611.5527745491, "lr": 0.30380838323353293, "loss": 4.650429731921146}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621374972615, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 277611.5527745491, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374972615, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621374972616, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 32, "current_iter_num": 0}}
INFO:root:[Training][Epoch 32] training time: 0.359 [sec],avg speed: 325209.038 [imgs/sec],loss=4.910
[Training][Epoch 32] training time: 0.359 [sec],avg speed: 325209.038 [imgs/sec],loss=4.910
:::MLLOG {"namespace": "", "time_ms": 1621374972975, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 325209.0377118627, "lr": 0.3136167664670659, "loss": 4.909992795241506}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621374972975, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 325209.0377118627, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374972975, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 32}}
:::MLLOG {"namespace": "", "time_ms": 1621374972975, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 33, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374973026, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621374973026, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.11460609224181068, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 30}}
INFO:root:[Training][Epoch 33] training time: 0.312 [sec],avg speed: 373873.817 [imgs/sec],loss=4.785
[Training][Epoch 33] training time: 0.312 [sec],avg speed: 373873.817 [imgs/sec],loss=4.785
:::MLLOG {"namespace": "", "time_ms": 1621374973288, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373873.816526077, "lr": 0.3234251497005988, "loss": 4.785101162759881}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621374973288, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373873.816526077, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374973288, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 33}}
:::MLLOG {"namespace": "", "time_ms": 1621374973288, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 34, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1300][Epoch 34, Batch 13/39] lr: 0.32695, training time: 8.431 [ms], speed: 364383.302 [imgs/sec], loss=5.370
[Training][Iteration 1300][Epoch 34, Batch 13/39] lr: 0.32695, training time: 8.431 [ms], speed: 364383.302 [imgs/sec], loss=5.370
:::MLLOG {"namespace": "", "time_ms": 1621374973398, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364383.3021399157, "loss": 5.370368957519531}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [34, 1300]}}
:::MLLOG {"namespace": "", "time_ms": 1621374973398, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364383.3021399157, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 34] training time: 0.333 [sec],avg speed: 350225.619 [imgs/sec],loss=4.849
[Training][Epoch 34] training time: 0.333 [sec],avg speed: 350225.619 [imgs/sec],loss=4.849
:::MLLOG {"namespace": "", "time_ms": 1621374973621, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 350225.6185621063, "lr": 0.33323353293413177, "loss": 4.848678846108286}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621374973622, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 350225.6185621063, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374973622, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 34}}
:::MLLOG {"namespace": "", "time_ms": 1621374973622, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 35, "current_iter_num": 0}}
INFO:root:[Training][Epoch 35] training time: 0.310 [sec],avg speed: 376140.535 [imgs/sec],loss=4.397
[Training][Epoch 35] training time: 0.310 [sec],avg speed: 376140.535 [imgs/sec],loss=4.397
:::MLLOG {"namespace": "", "time_ms": 1621374973932, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 376140.53483760986, "lr": 0.336, "loss": 4.396549569933038}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621374973932, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 376140.53483760986, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374973933, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621374973943, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 35}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 39.623 [ms], allgather: 32.325 [ms], asnumpy: 4.363 [ms], speed: 65520.439 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 39.623 [ms], allgather: 32.325 [ms], asnumpy: 4.363 [ms], speed: 65520.439 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374974021, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 36, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1400][Epoch 36, Batch 35/39] lr: 0.33600, training time: 8.676 [ms], speed: 354065.030 [imgs/sec], loss=3.699
[Training][Iteration 1400][Epoch 36, Batch 35/39] lr: 0.33600, training time: 8.676 [ms], speed: 354065.030 [imgs/sec], loss=3.699
:::MLLOG {"namespace": "", "time_ms": 1621374974325, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 354065.02965776005, "loss": 3.699183225631714}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [36, 1400]}}
:::MLLOG {"namespace": "", "time_ms": 1621374974325, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 354065.02965776005, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 36] training time: 0.345 [sec],avg speed: 338452.432 [imgs/sec],loss=4.736
[Training][Epoch 36] training time: 0.345 [sec],avg speed: 338452.432 [imgs/sec],loss=4.736
:::MLLOG {"namespace": "", "time_ms": 1621374974366, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 338452.4316972451, "lr": 0.336, "loss": 4.736220221770437}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621374974366, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 338452.4316972451, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374974366, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 36}}
:::MLLOG {"namespace": "", "time_ms": 1621374974366, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 37, "current_iter_num": 0}}
INFO:root:[Training][Epoch 37] training time: 0.313 [sec],avg speed: 373067.064 [imgs/sec],loss=4.259
[Training][Epoch 37] training time: 0.313 [sec],avg speed: 373067.064 [imgs/sec],loss=4.259
:::MLLOG {"namespace": "", "time_ms": 1621374974679, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373067.0636976307, "lr": 0.336, "loss": 4.2594173927056165}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621374974680, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373067.0636976307, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374974680, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 37}}
:::MLLOG {"namespace": "", "time_ms": 1621374974680, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 38, "current_iter_num": 0}}
INFO:root:[Training][Epoch 38] training time: 0.326 [sec],avg speed: 358132.538 [imgs/sec],loss=4.405
[Training][Epoch 38] training time: 0.326 [sec],avg speed: 358132.538 [imgs/sec],loss=4.405
:::MLLOG {"namespace": "", "time_ms": 1621374975006, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358132.53831395623, "lr": 0.336, "loss": 4.404795998021176}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621374975006, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358132.53831395623, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374975006, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 38}}
:::MLLOG {"namespace": "", "time_ms": 1621374975007, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 39, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374975035, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 35}}
:::MLLOG {"namespace": "", "time_ms": 1621374975035, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.12888341438288803, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 35}}
INFO:root:[Training][Iteration 1500][Epoch 39, Batch 18/39] lr: 0.33600, training time: 8.987 [ms], speed: 341843.096 [imgs/sec], loss=4.888
[Training][Iteration 1500][Epoch 39, Batch 18/39] lr: 0.33600, training time: 8.987 [ms], speed: 341843.096 [imgs/sec], loss=4.888
:::MLLOG {"namespace": "", "time_ms": 1621374975169, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 341843.0955570229, "loss": 4.888054370880127}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [39, 1500]}}
:::MLLOG {"namespace": "", "time_ms": 1621374975169, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 341843.0955570229, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 39] training time: 0.346 [sec],avg speed: 337644.184 [imgs/sec],loss=4.330
[Training][Epoch 39] training time: 0.346 [sec],avg speed: 337644.184 [imgs/sec],loss=4.330
:::MLLOG {"namespace": "", "time_ms": 1621374975352, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 337644.1836007241, "lr": 0.336, "loss": 4.329946003462139}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621374975353, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 337644.1836007241, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374975353, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 39}}
:::MLLOG {"namespace": "", "time_ms": 1621374975353, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 40, "current_iter_num": 0}}
INFO:root:[Training][Epoch 40] training time: 0.330 [sec],avg speed: 353250.416 [imgs/sec],loss=4.244
[Training][Epoch 40] training time: 0.330 [sec],avg speed: 353250.416 [imgs/sec],loss=4.244
:::MLLOG {"namespace": "", "time_ms": 1621374975684, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 353250.416103199, "lr": 0.336, "loss": 4.244055911114342}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621374975684, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 353250.416103199, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374975684, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621374975694, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 40}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 41.373 [ms], allgather: 28.356 [ms], asnumpy: 4.498 [ms], speed: 67359.549 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 41.373 [ms], allgather: 28.356 [ms], asnumpy: 4.498 [ms], speed: 67359.549 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374975769, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 41, "current_iter_num": 0}}
INFO:root:[Training][Epoch 41] training time: 0.327 [sec],avg speed: 356594.697 [imgs/sec],loss=4.387
[Training][Epoch 41] training time: 0.327 [sec],avg speed: 356594.697 [imgs/sec],loss=4.387
:::MLLOG {"namespace": "", "time_ms": 1621374976097, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 356594.6973543055, "lr": 0.336, "loss": 4.386939836175818}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 41}}
:::MLLOG {"namespace": "", "time_ms": 1621374976097, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 356594.6973543055, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374976097, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 41}}
:::MLLOG {"namespace": "", "time_ms": 1621374976097, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 42, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1600][Epoch 42, Batch 1/39] lr: 0.33600, training time: 9.545 [ms], speed: 321832.898 [imgs/sec], loss=4.266
[Training][Iteration 1600][Epoch 42, Batch 1/39] lr: 0.33600, training time: 9.545 [ms], speed: 321832.898 [imgs/sec], loss=4.266
:::MLLOG {"namespace": "", "time_ms": 1621374976107, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 321832.897592167, "loss": 4.265941143035889}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [42, 1600]}}
:::MLLOG {"namespace": "", "time_ms": 1621374976107, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 321832.897592167, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 42] training time: 0.334 [sec],avg speed: 349353.005 [imgs/sec],loss=4.262
[Training][Epoch 42] training time: 0.334 [sec],avg speed: 349353.005 [imgs/sec],loss=4.262
:::MLLOG {"namespace": "", "time_ms": 1621374976431, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 349353.0050837553, "lr": 0.336, "loss": 4.262303597048709}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621374976432, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 349353.0050837553, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374976432, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621374976432, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 43, "current_iter_num": 0}}
INFO:root:[Training][Epoch 43] training time: 0.314 [sec],avg speed: 371580.103 [imgs/sec],loss=4.376
[Training][Epoch 43] training time: 0.314 [sec],avg speed: 371580.103 [imgs/sec],loss=4.376
:::MLLOG {"namespace": "", "time_ms": 1621374976746, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 371580.1034266863, "lr": 0.336, "loss": 4.375544786453247}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 43}}
:::MLLOG {"namespace": "", "time_ms": 1621374976746, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 371580.1034266863, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374976747, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 43}}
:::MLLOG {"namespace": "", "time_ms": 1621374976747, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 44, "current_iter_num": 0}}
loading annotations into memory...
Done (t=0.12s)
creating index...
Loading and preparing results...
DONE (t=0.38s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.88s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.01231
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.02870
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.00873
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.02830
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.02436
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.03599
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.03873
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.03873
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.26s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.69s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.04395
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.08985
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.03952
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.10127
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.07676
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.10737
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.11130
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.11130
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.35s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.79s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.07613
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.15589
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.06778
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.14553
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.10396
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.15023
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.15662
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.15662
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.26s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.65s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.09766
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.19900
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.08457
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.17807
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.12813
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.18616
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.19419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.19419
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.21s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.60s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.11461
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.22266
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.11093
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.19254
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.14193
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.19871
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.20668
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.20668
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.29s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.70s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.12888
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.25820
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.11512
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.21608
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.15310
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.22111
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.22996
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.22996
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.29s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.69s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.14355
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.27133
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.13750
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.22557
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.16483
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.23631
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.24551
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24551
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000:::MLLOG {"namespace": "", "time_ms": 1621374976777, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 40}}
:::MLLOG {"namespace": "", "time_ms": 1621374976777, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.14355406791756217, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 40}}
INFO:root:[Training][Iteration 1700][Epoch 44, Batch 23/39] lr: 0.33600, training time: 8.774 [ms], speed: 350121.207 [imgs/sec], loss=3.525
[Training][Iteration 1700][Epoch 44, Batch 23/39] lr: 0.33600, training time: 8.774 [ms], speed: 350121.207 [imgs/sec], loss=3.525
:::MLLOG {"namespace": "", "time_ms": 1621374976949, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 350121.2073593887, "loss": 3.5253851413726807}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [44, 1700]}}
:::MLLOG {"namespace": "", "time_ms": 1621374976949, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 350121.2073593887, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 44] training time: 0.334 [sec],avg speed: 349840.252 [imgs/sec],loss=4.436
[Training][Epoch 44] training time: 0.334 [sec],avg speed: 349840.252 [imgs/sec],loss=4.436
:::MLLOG {"namespace": "", "time_ms": 1621374977080, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 349840.2522944531, "lr": 0.336, "loss": 4.435612095029731}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 44}}
:::MLLOG {"namespace": "", "time_ms": 1621374977081, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 349840.2522944531, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374977081, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 44}}
:::MLLOG {"namespace": "", "time_ms": 1621374977081, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 45, "current_iter_num": 0}}
INFO:root:[Training][Epoch 45] training time: 0.362 [sec],avg speed: 322909.001 [imgs/sec],loss=3.887
[Training][Epoch 45] training time: 0.362 [sec],avg speed: 322909.001 [imgs/sec],loss=3.887
:::MLLOG {"namespace": "", "time_ms": 1621374977443, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 322909.00056848984, "lr": 0.336, "loss": 3.8872612495171395}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621374977443, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 322909.00056848984, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374977443, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621374977453, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 45}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 52.996 [ms], allgather: 28.063 [ms], asnumpy: 3.776 [ms], speed: 58936.908 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 52.996 [ms], allgather: 28.063 [ms], asnumpy: 3.776 [ms], speed: 58936.908 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374977539, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 46, "current_iter_num": 0}}
INFO:root:[Training][Epoch 46] training time: 0.386 [sec],avg speed: 302306.552 [imgs/sec],loss=4.382
[Training][Epoch 46] training time: 0.386 [sec],avg speed: 302306.552 [imgs/sec],loss=4.382
:::MLLOG {"namespace": "", "time_ms": 1621374977925, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 302306.5516267554, "lr": 0.336, "loss": 4.382042887963746}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 46}}
:::MLLOG {"namespace": "", "time_ms": 1621374977925, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 302306.5516267554, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374977925, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 46}}
:::MLLOG {"namespace": "", "time_ms": 1621374977925, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 47, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1800][Epoch 47, Batch 6/39] lr: 0.33600, training time: 9.592 [ms], speed: 320251.743 [imgs/sec], loss=4.768
[Training][Iteration 1800][Epoch 47, Batch 6/39] lr: 0.33600, training time: 9.592 [ms], speed: 320251.743 [imgs/sec], loss=4.768
:::MLLOG {"namespace": "", "time_ms": 1621374977983, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 320251.7432664187, "loss": 4.768126487731934}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [47, 1800]}}
:::MLLOG {"namespace": "", "time_ms": 1621374977983, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 320251.7432664187, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 47] training time: 0.407 [sec],avg speed: 286723.008 [imgs/sec],loss=3.830
[Training][Epoch 47] training time: 0.407 [sec],avg speed: 286723.008 [imgs/sec],loss=3.830
:::MLLOG {"namespace": "", "time_ms": 1621374978333, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 286723.00784405356, "lr": 0.336, "loss": 3.8301996494594372}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 47}}
:::MLLOG {"namespace": "", "time_ms": 1621374978333, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 286723.00784405356, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374978333, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 47}}
:::MLLOG {"namespace": "", "time_ms": 1621374978333, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 48, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374978429, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 45}}
:::MLLOG {"namespace": "", "time_ms": 1621374978429, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1600218271688007, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 45}}
INFO:root:[Training][Epoch 48] training time: 0.340 [sec],avg speed: 343300.579 [imgs/sec],loss=3.814
[Training][Epoch 48] training time: 0.340 [sec],avg speed: 343300.579 [imgs/sec],loss=3.814
:::MLLOG {"namespace": "", "time_ms": 1621374978673, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 343300.57924937876, "lr": 0.336, "loss": 3.8135929452745536}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 48}}
:::MLLOG {"namespace": "", "time_ms": 1621374978674, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 343300.57924937876, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374978674, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 48}}
:::MLLOG {"namespace": "", "time_ms": 1621374978674, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 49, "current_iter_num": 0}}
INFO:root:[Training][Iteration 1900][Epoch 49, Batch 28/39] lr: 0.33600, training time: 8.222 [ms], speed: 373622.004 [imgs/sec], loss=4.066
[Training][Iteration 1900][Epoch 49, Batch 28/39] lr: 0.33600, training time: 8.222 [ms], speed: 373622.004 [imgs/sec], loss=4.066
:::MLLOG {"namespace": "", "time_ms": 1621374978904, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373622.00373024197, "loss": 4.066150665283203}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [49, 1900]}}
:::MLLOG {"namespace": "", "time_ms": 1621374978904, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373622.00373024197, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 49] training time: 0.316 [sec],avg speed: 369348.908 [imgs/sec],loss=3.982
[Training][Epoch 49] training time: 0.316 [sec],avg speed: 369348.908 [imgs/sec],loss=3.982
:::MLLOG {"namespace": "", "time_ms": 1621374978990, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 369348.9079249604, "lr": 0.336, "loss": 3.981724588494552}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 49}}
:::MLLOG {"namespace": "", "time_ms": 1621374978990, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 369348.9079249604, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374978990, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 49}}
:::MLLOG {"namespace": "", "time_ms": 1621374978990, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 50, "current_iter_num": 0}}
INFO:root:[Training][Epoch 50] training time: 0.347 [sec],avg speed: 336350.852 [imgs/sec],loss=3.960
[Training][Epoch 50] training time: 0.347 [sec],avg speed: 336350.852 [imgs/sec],loss=3.960
:::MLLOG {"namespace": "", "time_ms": 1621374979338, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 336350.8520939396, "lr": 0.336, "loss": 3.9602165347651432}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621374979338, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 336350.8520939396, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374979338, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621374979348, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 50}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 39.450 [ms], allgather: 43.322 [ms], asnumpy: 3.889 [ms], speed: 57695.378 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 39.450 [ms], allgather: 43.322 [ms], asnumpy: 3.889 [ms], speed: 57695.378 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374979437, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 51, "current_iter_num": 0}}
INFO:root:[Training][Epoch 51] training time: 0.362 [sec],avg speed: 322226.211 [imgs/sec],loss=4.246
[Training][Epoch 51] training time: 0.362 [sec],avg speed: 322226.211 [imgs/sec],loss=4.246
:::MLLOG {"namespace": "", "time_ms": 1621374979800, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 322226.2107638576, "lr": 0.336, "loss": 4.245900191758809}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 51}}
:::MLLOG {"namespace": "", "time_ms": 1621374979800, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 322226.2107638576, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374979800, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 51}}
:::MLLOG {"namespace": "", "time_ms": 1621374979800, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 52, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2000][Epoch 52, Batch 11/39] lr: 0.33600, training time: 9.116 [ms], speed: 337008.360 [imgs/sec], loss=5.269
[Training][Iteration 2000][Epoch 52, Batch 11/39] lr: 0.33600, training time: 9.116 [ms], speed: 337008.360 [imgs/sec], loss=5.269
:::MLLOG {"namespace": "", "time_ms": 1621374979900, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 337008.35963049706, "loss": 5.26928186416626}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [52, 2000]}}
:::MLLOG {"namespace": "", "time_ms": 1621374979901, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 337008.35963049706, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 52] training time: 0.320 [sec],avg speed: 365353.478 [imgs/sec],loss=4.105
[Training][Epoch 52] training time: 0.320 [sec],avg speed: 365353.478 [imgs/sec],loss=4.105
:::MLLOG {"namespace": "", "time_ms": 1621374980120, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 365353.4782411442, "lr": 0.336, "loss": 4.104599588795712}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 52}}
:::MLLOG {"namespace": "", "time_ms": 1621374980120, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 365353.4782411442, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374980120, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 52}}
:::MLLOG {"namespace": "", "time_ms": 1621374980120, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 53, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374980393, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 50}}
:::MLLOG {"namespace": "", "time_ms": 1621374980393, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.16156666087713428, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 50}}
INFO:root:[Training][Epoch 53] training time: 0.312 [sec],avg speed: 374621.857 [imgs/sec],loss=4.232
[Training][Epoch 53] training time: 0.312 [sec],avg speed: 374621.857 [imgs/sec],loss=4.232
:::MLLOG {"namespace": "", "time_ms": 1621374980432, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 374621.8570820849, "lr": 0.336, "loss": 4.23179576898876}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 53}}
:::MLLOG {"namespace": "", "time_ms": 1621374980432, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 374621.8570820849, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374980432, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 53}}
:::MLLOG {"namespace": "", "time_ms": 1621374980432, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 54, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2100][Epoch 54, Batch 33/39] lr: 0.33600, training time: 9.081 [ms], speed: 338274.380 [imgs/sec], loss=5.067
[Training][Iteration 2100][Epoch 54, Batch 33/39] lr: 0.33600, training time: 9.081 [ms], speed: 338274.380 [imgs/sec], loss=5.067
:::MLLOG {"namespace": "", "time_ms": 1621374980732, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 338274.38004157605, "loss": 5.067302703857422}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [54, 2100]}}
:::MLLOG {"namespace": "", "time_ms": 1621374980732, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 338274.38004157605, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 54] training time: 0.341 [sec],avg speed: 342146.443 [imgs/sec],loss=3.952
[Training][Epoch 54] training time: 0.341 [sec],avg speed: 342146.443 [imgs/sec],loss=3.952
:::MLLOG {"namespace": "", "time_ms": 1621374980774, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 342146.4426603533, "lr": 0.336, "loss": 3.95151550518839}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 54}}
:::MLLOG {"namespace": "", "time_ms": 1621374980774, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 342146.4426603533, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374980774, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 54}}
:::MLLOG {"namespace": "", "time_ms": 1621374980774, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 55, "current_iter_num": 0}}
INFO:root:[Training][Epoch 55] training time: 0.345 [sec],avg speed: 338241.069 [imgs/sec],loss=4.100
[Training][Epoch 55] training time: 0.345 [sec],avg speed: 338241.069 [imgs/sec],loss=4.100
:::MLLOG {"namespace": "", "time_ms": 1621374981119, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 338241.06931497424, "lr": 0.336, "loss": 4.100418799801877}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621374981119, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 338241.06931497424, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374981120, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621374981130, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 55}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 51.523 [ms], allgather: 29.067 [ms], asnumpy: 4.063 [ms], speed: 59063.391 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 51.523 [ms], allgather: 29.067 [ms], asnumpy: 4.063 [ms], speed: 59063.391 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374981215, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 56, "current_iter_num": 0}}
INFO:root:[Training][Epoch 56] training time: 0.401 [sec],avg speed: 290959.796 [imgs/sec],loss=3.983
[Training][Epoch 56] training time: 0.401 [sec],avg speed: 290959.796 [imgs/sec],loss=3.983
:::MLLOG {"namespace": "", "time_ms": 1621374981616, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 290959.795949244, "lr": 0.336, "loss": 3.9830315865968404}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621374981617, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 290959.795949244, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374981617, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621374981617, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 57, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2200][Epoch 57, Batch 16/39] lr: 0.33600, training time: 10.392 [ms], speed: 295618.925 [imgs/sec], loss=2.375
[Training][Iteration 2200][Epoch 57, Batch 16/39] lr: 0.33600, training time: 10.392 [ms], speed: 295618.925 [imgs/sec], loss=2.375
:::MLLOG {"namespace": "", "time_ms": 1621374981783, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 295618.9248715548, "loss": 2.3754255771636963}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [57, 2200]}}
:::MLLOG {"namespace": "", "time_ms": 1621374981784, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 295618.9248715548, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 57] training time: 0.357 [sec],avg speed: 327361.625 [imgs/sec],loss=3.705
[Training][Epoch 57] training time: 0.357 [sec],avg speed: 327361.625 [imgs/sec],loss=3.705
:::MLLOG {"namespace": "", "time_ms": 1621374981974, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 327361.625423722, "lr": 0.336, "loss": 3.704895035216683}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621374981974, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 327361.625423722, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374981974, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621374981974, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 58, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374982169, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 55}}
:::MLLOG {"namespace": "", "time_ms": 1621374982169, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1813313976505898, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 55}}
INFO:root:[Training][Epoch 58] training time: 0.347 [sec],avg speed: 336009.004 [imgs/sec],loss=3.976
[Training][Epoch 58] training time: 0.347 [sec],avg speed: 336009.004 [imgs/sec],loss=3.976
:::MLLOG {"namespace": "", "time_ms": 1621374982322, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 336009.00350402354, "lr": 0.336, "loss": 3.9755712747573853}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 58}}
:::MLLOG {"namespace": "", "time_ms": 1621374982322, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 336009.00350402354, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374982322, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 58}}
:::MLLOG {"namespace": "", "time_ms": 1621374982322, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 59, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2300][Epoch 59, Batch 38/39] lr: 0.33600, training time: 8.989 [ms], speed: 341758.364 [imgs/sec], loss=6.332
[Training][Iteration 2300][Epoch 59, Batch 38/39] lr: 0.33600, training time: 8.989 [ms], speed: 341758.364 [imgs/sec], loss=6.332
:::MLLOG {"namespace": "", "time_ms": 1621374982664, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 341758.36393637606, "loss": 6.332172870635986}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [59, 2300]}}
:::MLLOG {"namespace": "", "time_ms": 1621374982664, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 341758.36393637606, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 59] training time: 0.342 [sec],avg speed: 341289.786 [imgs/sec],loss=3.623
[Training][Epoch 59] training time: 0.342 [sec],avg speed: 341289.786 [imgs/sec],loss=3.623
:::MLLOG {"namespace": "", "time_ms": 1621374982664, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 341289.785725289, "lr": 0.336, "loss": 3.62307649223428}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 59}}
:::MLLOG {"namespace": "", "time_ms": 1621374982665, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 341289.785725289, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374982665, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 59}}
:::MLLOG {"namespace": "", "time_ms": 1621374982665, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 60, "current_iter_num": 0}}
INFO:root:[Training][Epoch 60] training time: 0.314 [sec],avg speed: 371786.920 [imgs/sec],loss=3.972
[Training][Epoch 60] training time: 0.314 [sec],avg speed: 371786.920 [imgs/sec],loss=3.972
:::MLLOG {"namespace": "", "time_ms": 1621374982979, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 371786.92022956006, "lr": 0.336, "loss": 3.972404947406367}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621374982979, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 371786.92022956006, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374982979, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621374982990, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 60}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 45.507 [ms], allgather: 45.079 [ms], asnumpy: 3.181 [ms], speed: 53323.027 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 45.507 [ms], allgather: 45.079 [ms], asnumpy: 3.181 [ms], speed: 53323.027 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374983085, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 61, "current_iter_num": 0}}
INFO:root:[Training][Epoch 61] training time: 0.395 [sec],avg speed: 295528.662 [imgs/sec],loss=3.941
[Training][Epoch 61] training time: 0.395 [sec],avg speed: 295528.662 [imgs/sec],loss=3.941
:::MLLOG {"namespace": "", "time_ms": 1621374983480, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 295528.6617507081, "lr": 0.336, "loss": 3.94050941028093}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 61}}
:::MLLOG {"namespace": "", "time_ms": 1621374983480, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 295528.6617507081, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374983480, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 61}}
:::MLLOG {"namespace": "", "time_ms": 1621374983480, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 62, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2400][Epoch 62, Batch 21/39] lr: 0.33600, training time: 8.723 [ms], speed: 352169.296 [imgs/sec], loss=2.687
[Training][Iteration 2400][Epoch 62, Batch 21/39] lr: 0.33600, training time: 8.723 [ms], speed: 352169.296 [imgs/sec], loss=2.687
:::MLLOG {"namespace": "", "time_ms": 1621374983664, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352169.2961480193, "loss": 2.6867504119873047}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [62, 2400]}}
:::MLLOG {"namespace": "", "time_ms": 1621374983664, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352169.2961480193, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 62] training time: 0.323 [sec],avg speed: 361077.860 [imgs/sec],loss=3.757
[Training][Epoch 62] training time: 0.323 [sec],avg speed: 361077.860 [imgs/sec],loss=3.757
:::MLLOG {"namespace": "", "time_ms": 1621374983804, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 361077.85968423606, "lr": 0.336, "loss": 3.756753268994783}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621374983804, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 361077.85968423606, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374983804, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621374983804, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 63, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374983892, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 60}}
:::MLLOG {"namespace": "", "time_ms": 1621374983892, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.1678709437434237, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 60}}
INFO:root:[Training][Epoch 63] training time: 0.326 [sec],avg speed: 358016.007 [imgs/sec],loss=3.890
[Training][Epoch 63] training time: 0.326 [sec],avg speed: 358016.007 [imgs/sec],loss=3.890
:::MLLOG {"namespace": "", "time_ms": 1621374984130, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358016.00730032683, "lr": 0.336, "loss": 3.890010482386539}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621374984131, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358016.00730032683, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374984131, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621374984131, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 64, "current_iter_num": 0}}
INFO:root:[Training][Epoch 64] training time: 0.326 [sec],avg speed: 358523.536 [imgs/sec],loss=3.672
[Training][Epoch 64] training time: 0.326 [sec],avg speed: 358523.536 [imgs/sec],loss=3.672
:::MLLOG {"namespace": "", "time_ms": 1621374984457, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 358523.53617627634, "lr": 0.336, "loss": 3.6718354256529557}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 64}}
:::MLLOG {"namespace": "", "time_ms": 1621374984457, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 358523.53617627634, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374984457, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 64}}
:::MLLOG {"namespace": "", "time_ms": 1621374984457, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 65, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2500][Epoch 65, Batch 4/39] lr: 0.33600, training time: 8.229 [ms], speed: 373315.811 [imgs/sec], loss=3.058
[Training][Iteration 2500][Epoch 65, Batch 4/39] lr: 0.33600, training time: 8.229 [ms], speed: 373315.811 [imgs/sec], loss=3.058
:::MLLOG {"namespace": "", "time_ms": 1621374984490, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373315.811008337, "loss": 3.058295965194702}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [65, 2500]}}
:::MLLOG {"namespace": "", "time_ms": 1621374984490, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373315.811008337, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 65] training time: 0.334 [sec],avg speed: 349977.285 [imgs/sec],loss=4.055
[Training][Epoch 65] training time: 0.334 [sec],avg speed: 349977.285 [imgs/sec],loss=4.055
:::MLLOG {"namespace": "", "time_ms": 1621374984791, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 349977.2853941644, "lr": 0.336, "loss": 4.055347800254822}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621374984791, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 349977.2853941644, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374984791, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621374984801, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 65}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 39.217 [ms], allgather: 33.627 [ms], asnumpy: 3.870 [ms], speed: 65176.308 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 39.217 [ms], allgather: 33.627 [ms], asnumpy: 3.870 [ms], speed: 65176.308 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374984879, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 66, "current_iter_num": 0}}
INFO:root:[Training][Epoch 66] training time: 0.332 [sec],avg speed: 351123.249 [imgs/sec],loss=3.782
[Training][Epoch 66] training time: 0.332 [sec],avg speed: 351123.249 [imgs/sec],loss=3.782
:::MLLOG {"namespace": "", "time_ms": 1621374985211, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 351123.2485074836, "lr": 0.336, "loss": 3.7819599540610063}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 66}}
:::MLLOG {"namespace": "", "time_ms": 1621374985212, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 351123.2485074836, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374985212, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 66}}
:::MLLOG {"namespace": "", "time_ms": 1621374985212, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 67, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2600][Epoch 67, Batch 26/39] lr: 0.33600, training time: 8.128 [ms], speed: 377949.292 [imgs/sec], loss=3.369
[Training][Iteration 2600][Epoch 67, Batch 26/39] lr: 0.33600, training time: 8.128 [ms], speed: 377949.292 [imgs/sec], loss=3.369
:::MLLOG {"namespace": "", "time_ms": 1621374985423, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377949.2917139563, "loss": 3.369170904159546}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [67, 2600]}}
:::MLLOG {"namespace": "", "time_ms": 1621374985424, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377949.2917139563, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 67] training time: 0.311 [sec],avg speed: 374913.587 [imgs/sec],loss=3.637
[Training][Epoch 67] training time: 0.311 [sec],avg speed: 374913.587 [imgs/sec],loss=3.637
:::MLLOG {"namespace": "", "time_ms": 1621374985523, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 374913.5867059835, "lr": 0.336, "loss": 3.6371637645520662}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 67}}
:::MLLOG {"namespace": "", "time_ms": 1621374985524, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 374913.5867059835, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374985524, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 67}}
:::MLLOG {"namespace": "", "time_ms": 1621374985524, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 68, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374985804, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 65}}
:::MLLOG {"namespace": "", "time_ms": 1621374985804, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.18126050902808286, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 65}}
INFO:root:[Training][Epoch 68] training time: 0.342 [sec],avg speed: 340920.262 [imgs/sec],loss=3.951
[Training][Epoch 68] training time: 0.342 [sec],avg speed: 340920.262 [imgs/sec],loss=3.951
:::MLLOG {"namespace": "", "time_ms": 1621374985866, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 340920.262461095, "lr": 0.336, "loss": 3.951222178183104}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 68}}
:::MLLOG {"namespace": "", "time_ms": 1621374985866, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 340920.262461095, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374985866, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 68}}
:::MLLOG {"namespace": "", "time_ms": 1621374985867, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 69, "current_iter_num": 0}}
INFO:root:[Training][Epoch 69] training time: 0.352 [sec],avg speed: 331730.735 [imgs/sec],loss=3.488
[Training][Epoch 69] training time: 0.352 [sec],avg speed: 331730.735 [imgs/sec],loss=3.488
:::MLLOG {"namespace": "", "time_ms": 1621374986219, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 331730.73510323686, "lr": 0.033600000000000005, "loss": 3.4883383230159155}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 69}}
:::MLLOG {"namespace": "", "time_ms": 1621374986219, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 331730.73510323686, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374986219, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 69}}
:::MLLOG {"namespace": "", "time_ms": 1621374986219, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 70, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2700][Epoch 70, Batch 9/39] lr: 0.03360, training time: 9.219 [ms], speed: 333235.009 [imgs/sec], loss=4.594
[Training][Iteration 2700][Epoch 70, Batch 9/39] lr: 0.03360, training time: 9.219 [ms], speed: 333235.009 [imgs/sec], loss=4.594
:::MLLOG {"namespace": "", "time_ms": 1621374986302, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 333235.00910070544, "loss": 4.594082832336426}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [70, 2700]}}
:::MLLOG {"namespace": "", "time_ms": 1621374986302, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 333235.00910070544, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 70] training time: 0.333 [sec],avg speed: 350449.219 [imgs/sec],loss=3.539
[Training][Epoch 70] training time: 0.333 [sec],avg speed: 350449.219 [imgs/sec],loss=3.539
:::MLLOG {"namespace": "", "time_ms": 1621374986552, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 350449.2192573538, "lr": 0.033600000000000005, "loss": 3.5389113677175423}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621374986553, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 350449.2192573538, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374986553, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621374986563, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 70}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 40.032 [ms], allgather: 29.214 [ms], asnumpy: 3.891 [ms], speed: 68363.916 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 40.032 [ms], allgather: 29.214 [ms], asnumpy: 3.891 [ms], speed: 68363.916 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374986638, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 71, "current_iter_num": 0}}
INFO:root:[Training][Epoch 71] training time: 0.309 [sec],avg speed: 377333.370 [imgs/sec],loss=3.493
[Training][Epoch 71] training time: 0.309 [sec],avg speed: 377333.370 [imgs/sec],loss=3.493
:::MLLOG {"namespace": "", "time_ms": 1621374986948, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 377333.37012752815, "lr": 0.033600000000000005, "loss": 3.492964258319453}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 71}}
:::MLLOG {"namespace": "", "time_ms": 1621374986948, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 377333.37012752815, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374986948, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 71}}
:::MLLOG {"namespace": "", "time_ms": 1621374986948, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 72, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2800][Epoch 72, Batch 31/39] lr: 0.03360, training time: 9.139 [ms], speed: 336150.883 [imgs/sec], loss=5.688
[Training][Iteration 2800][Epoch 72, Batch 31/39] lr: 0.03360, training time: 9.139 [ms], speed: 336150.883 [imgs/sec], loss=5.688
:::MLLOG {"namespace": "", "time_ms": 1621374987232, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 336150.8825804627, "loss": 5.687785625457764}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [72, 2800]}}
:::MLLOG {"namespace": "", "time_ms": 1621374987232, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 336150.8825804627, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 72] training time: 0.341 [sec],avg speed: 342179.918 [imgs/sec],loss=3.375
[Training][Epoch 72] training time: 0.341 [sec],avg speed: 342179.918 [imgs/sec],loss=3.375
:::MLLOG {"namespace": "", "time_ms": 1621374987290, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 342179.9183760185, "lr": 0.033600000000000005, "loss": 3.3752967746634233}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 72}}
:::MLLOG {"namespace": "", "time_ms": 1621374987290, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 342179.9183760185, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374987290, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 72}}
:::MLLOG {"namespace": "", "time_ms": 1621374987290, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 73, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374987552, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621374987552, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.22349129283246005, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 70}}
INFO:root:[Training][Epoch 73] training time: 0.313 [sec],avg speed: 372754.361 [imgs/sec],loss=3.241
[Training][Epoch 73] training time: 0.313 [sec],avg speed: 372754.361 [imgs/sec],loss=3.241
:::MLLOG {"namespace": "", "time_ms": 1621374987604, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 372754.3605534983, "lr": 0.033600000000000005, "loss": 3.2414810735928383}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621374987604, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 372754.3605534983, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374987604, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 73}}
:::MLLOG {"namespace": "", "time_ms": 1621374987604, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 74, "current_iter_num": 0}}
INFO:root:[Training][Epoch 74] training time: 0.336 [sec],avg speed: 347715.062 [imgs/sec],loss=3.258
[Training][Epoch 74] training time: 0.336 [sec],avg speed: 347715.062 [imgs/sec],loss=3.258
:::MLLOG {"namespace": "", "time_ms": 1621374987940, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 347715.0620463382, "lr": 0.033600000000000005, "loss": 3.2581368120093095}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 74}}
:::MLLOG {"namespace": "", "time_ms": 1621374987940, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 347715.0620463382, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374987940, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 74}}
:::MLLOG {"namespace": "", "time_ms": 1621374987940, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 75, "current_iter_num": 0}}
INFO:root:[Training][Iteration 2900][Epoch 75, Batch 14/39] lr: 0.03360, training time: 8.419 [ms], speed: 364881.439 [imgs/sec], loss=3.452
[Training][Iteration 2900][Epoch 75, Batch 14/39] lr: 0.03360, training time: 8.419 [ms], speed: 364881.439 [imgs/sec], loss=3.452
:::MLLOG {"namespace": "", "time_ms": 1621374988058, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 364881.4392931696, "loss": 3.452129364013672}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [75, 2900]}}
:::MLLOG {"namespace": "", "time_ms": 1621374988059, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 364881.4392931696, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 75] training time: 0.360 [sec],avg speed: 324713.849 [imgs/sec],loss=3.280
[Training][Epoch 75] training time: 0.360 [sec],avg speed: 324713.849 [imgs/sec],loss=3.280
:::MLLOG {"namespace": "", "time_ms": 1621374988300, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 324713.84916736855, "lr": 0.033600000000000005, "loss": 3.280480560503508}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621374988300, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 324713.84916736855, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374988300, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621374988311, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 75}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 39.527 [ms], allgather: 29.371 [ms], asnumpy: 3.884 [ms], speed: 68697.817 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 39.527 [ms], allgather: 29.371 [ms], asnumpy: 3.884 [ms], speed: 68697.817 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374988386, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 76, "current_iter_num": 0}}
INFO:root:[Training][Epoch 76] training time: 0.340 [sec],avg speed: 343334.040 [imgs/sec],loss=3.290
[Training][Epoch 76] training time: 0.340 [sec],avg speed: 343334.040 [imgs/sec],loss=3.290
:::MLLOG {"namespace": "", "time_ms": 1621374988726, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 343334.0404475725, "lr": 0.033600000000000005, "loss": 3.2903233421476266}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 76}}
:::MLLOG {"namespace": "", "time_ms": 1621374988726, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 343334.0404475725, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374988726, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 76}}
:::MLLOG {"namespace": "", "time_ms": 1621374988726, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 77, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3000][Epoch 77, Batch 36/39] lr: 0.03360, training time: 10.678 [ms], speed: 287689.688 [imgs/sec], loss=4.228
[Training][Iteration 3000][Epoch 77, Batch 36/39] lr: 0.03360, training time: 10.678 [ms], speed: 287689.688 [imgs/sec], loss=4.228
:::MLLOG {"namespace": "", "time_ms": 1621374989111, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 287689.6877030421, "loss": 4.228097438812256}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [77, 3000]}}
:::MLLOG {"namespace": "", "time_ms": 1621374989111, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 287689.6877030421, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 77] training time: 0.402 [sec],avg speed: 290239.370 [imgs/sec],loss=3.446
[Training][Epoch 77] training time: 0.402 [sec],avg speed: 290239.370 [imgs/sec],loss=3.446
:::MLLOG {"namespace": "", "time_ms": 1621374989129, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 290239.37046095554, "lr": 0.033600000000000005, "loss": 3.4460033711634184}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 77}}
:::MLLOG {"namespace": "", "time_ms": 1621374989129, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 290239.37046095554, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374989129, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 77}}
:::MLLOG {"namespace": "", "time_ms": 1621374989129, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 78, "current_iter_num": 0}}
:::MLLOG {"namespace": "", "time_ms": 1621374989271, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 75}}
:::MLLOG {"namespace": "", "time_ms": 1621374989271, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.22692739508028736, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 75}}
INFO:root:[Training][Epoch 78] training time: 0.331 [sec],avg speed: 352880.748 [imgs/sec],loss=3.215
[Training][Epoch 78] training time: 0.331 [sec],avg speed: 352880.748 [imgs/sec],loss=3.215
:::MLLOG {"namespace": "", "time_ms": 1621374989460, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 352880.747513535, "lr": 0.033600000000000005, "loss": 3.215476936415622}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621374989460, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 352880.747513535, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374989461, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 78}}
:::MLLOG {"namespace": "", "time_ms": 1621374989461, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 79, "current_iter_num": 0}}
INFO:root:[Training][Epoch 79] training time: 0.312 [sec],avg speed: 373970.336 [imgs/sec],loss=3.414
[Training][Epoch 79] training time: 0.312 [sec],avg speed: 373970.336 [imgs/sec],loss=3.414
:::MLLOG {"namespace": "", "time_ms": 1621374989773, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373970.3358327, "lr": 0.033600000000000005, "loss": 3.413873233293232}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 79}}
:::MLLOG {"namespace": "", "time_ms": 1621374989773, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373970.3358327, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374989773, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 79}}
:::MLLOG {"namespace": "", "time_ms": 1621374989774, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 80, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3100][Epoch 80, Batch 19/39] lr: 0.03360, training time: 8.229 [ms], speed: 373302.291 [imgs/sec], loss=2.498
[Training][Iteration 3100][Epoch 80, Batch 19/39] lr: 0.03360, training time: 8.229 [ms], speed: 373302.291 [imgs/sec], loss=2.498
:::MLLOG {"namespace": "", "time_ms": 1621374989930, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 373302.2913431452, "loss": 2.4976866245269775}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [80, 3100]}}
:::MLLOG {"namespace": "", "time_ms": 1621374989930, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 373302.2913431452, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
INFO:root:[Training][Epoch 80] training time: 0.320 [sec],avg speed: 365167.917 [imgs/sec],loss=3.384
[Training][Epoch 80] training time: 0.320 [sec],avg speed: 365167.917 [imgs/sec],loss=3.384
:::MLLOG {"namespace": "", "time_ms": 1621374990093, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 365167.91657673445, "lr": 0.033600000000000005, "loss": 3.383530682639072}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 80}}
:::MLLOG {"namespace": "", "time_ms": 1621374990093, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 365167.91657673445, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374990094, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 80}}
:::MLLOG {"namespace": "", "time_ms": 1621374990105, "event_type": "INTERVAL_START", "key": "eval_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 275, "epoch_num": 80}}
INFO:root:[Validation] save_parameters: 0.001 [ms], inference: 39.503 [ms], allgather: 28.536 [ms], asnumpy: 3.865 [ms], speed: 69537.445 [imgs/sec]
[Validation] save_parameters: 0.001 [ms], inference: 39.503 [ms], allgather: 28.536 [ms], asnumpy: 3.865 [ms], speed: 69537.445 [imgs/sec]
:::MLLOG {"namespace": "", "time_ms": 1621374990177, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 81, "current_iter_num": 0}}

Loading and preparing results...
DONE (t=0.23s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.63s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16002
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.29278
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.15948
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24159
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.17447
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.24744
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.25564
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25564
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.25s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.68s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16157
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.30190
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.15706
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.24786
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.17646
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.25320
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.26182
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26182
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.26s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.67s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18133
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32428
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.18465
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26527
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.19128
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.27184
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.28031
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.28031
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.20s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.59s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.16787
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.30950
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.16752
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.25235
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18056
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.25920
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.26939
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26939
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.25s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.65s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.18126
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.32534
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.18465
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.26280
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.18709
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.26787
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.27749
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.27749
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.65s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.22349
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.38014
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.22805
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.30354
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.21689
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.30989
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32073
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32073
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
Running per image evaluation...
Evaluate annotation type *bbox*
DONE (t=0.62s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.22693
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.38516
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23272
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.30738
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22003
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31365
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32417
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32417
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
Loading and preparing results...
DONE (t=0.24s)
INFO:root:[Training][Epoch 81] training time: 0.336 [sec],avg speed: 347139.670 [imgs/sec],loss=3.356
Running per image evaluation...[Training][Epoch 81] training time: 0.336 [sec],avg speed: 347139.670 [imgs/sec],loss=3.356
:::MLLOG {"namespace": "", "time_ms": 1621374990514, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 347139.66995424894, "lr": 0.033600000000000005, "loss": 3.3562364860584863}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 81}}
:::MLLOG {"namespace": "", "time_ms": 1621374990514, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 347139.66995424894, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374990514, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 81}}
:::MLLOG {"namespace": "", "time_ms": 1621374990514, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 82, "current_iter_num": 0}}
INFO:root:[Training][Epoch 82] training time: 0.321 [sec],avg speed: 363438.580 [imgs/sec],loss=3.247
[Training][Epoch 82] training time: 0.321 [sec],avg speed: 363438.580 [imgs/sec],loss=3.247
:::MLLOG {"namespace": "", "time_ms": 1621374990836, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 363438.5796846063, "lr": 0.033600000000000005, "loss": 3.2471114930353666}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 82}}
:::MLLOG {"namespace": "", "time_ms": 1621374990836, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 363438.5796846063, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374990836, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 82}}
:::MLLOG {"namespace": "", "time_ms": 1621374990836, "event_type": "INTERVAL_START", "key": "epoch_start", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 169, "epoch_num": 83, "current_iter_num": 0}}
INFO:root:[Training][Iteration 3200][Epoch 83, Batch 2/39] lr: 0.03360, training time: 8.677 [ms], speed: 354034.315 [imgs/sec], loss=2.567
[Training][Iteration 3200][Epoch 83, Batch 2/39] lr: 0.03360, training time: 8.677 [ms], speed: 354034.315 [imgs/sec], loss=2.567
:::MLLOG {"namespace": "", "time_ms": 1621374990854, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 354034.31529489346, "loss": 2.5671942234039307}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 210, "step": [83, 3200]}}
:::MLLOG {"namespace": "", "time_ms": 1621374990854, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 354034.31529489346, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 214}}
:::MLLOG {"namespace": "", "time_ms": 1621374991081, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 324, "epoch_num": 80}}
:::MLLOG {"namespace": "", "time_ms": 1621374991081, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.23057630063804577, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 326, "epoch_num": 80}}
INFO:root:[Training][Epoch 83] training time: 0.329 [sec],avg speed: 355257.818 [imgs/sec],loss=3.233
[Training][Epoch 83] training time: 0.329 [sec],avg speed: 355257.818 [imgs/sec],loss=3.233
:::MLLOG {"namespace": "", "time_ms": 1621374991165, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 355257.81782404653, "lr": 0.033600000000000005, "loss": 3.2332058203847787}, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 236, "step": 83}}
:::MLLOG {"namespace": "", "time_ms": 1621374991165, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 355257.81782404653, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 241}}
:::MLLOG {"namespace": "", "time_ms": 1621374991165, "event_type": "INTERVAL_END", "key": "epoch_stop", "value": null, "metadata": {"file": "/workspace/ssd/model.py", "lineno": 244, "epoch_num": 83}}
:::MLLOG {"namespace": "", "time_ms": 1621374991165, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/ssd/ssd_main.py", "lineno": 547, "status": "success"}}
INFO:root:Rank 0 done. map=23.057630063804577 @ epoch=80
Rank 0 done. map=23.057630063804577 @ epoch=80

Evaluate annotation type *bbox*
DONE (t=0.64s).
Accumulating evaluation results...
DONE (t=0.00s).
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.23058
 Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=100 ] = 0.39140
 Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=100 ] = 0.23622
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.31196
 Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.22289
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.31766
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.32874
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=100 ] = 0.32874
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=100 ] = 0.00000
 Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=100 ] = 0.00000
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:22 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:43 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,440,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:44 PM
RESULT,SINGLE_STAGE_DETECTOR,,441,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:22 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:22 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:22 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:22 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:22 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,443,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
ENDING TIMING RUN AT 2021-05-18 02:56:45 PM
RESULT,SINGLE_STAGE_DETECTOR,,442,nvidia,2021-05-18 02:49:23 PM
