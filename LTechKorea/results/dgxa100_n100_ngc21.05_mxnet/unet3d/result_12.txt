+ echo 'Beginning trial 10 of 10'
Beginning trial 10 of 10
+ '[' 1 -eq 1 ']'
+ srun --ntasks=100 bash -c 'echo -n '\''Clearing cache on '\'' && hostname && sync && sudo /sbin/sysctl vm.drop_caches=3'
Clearing cache on luna-0209
Clearing cache on luna-0086
Clearing cache on luna-0216
Clearing cache on luna-0267
Clearing cache on luna-0186
Clearing cache on luna-0095
Clearing cache on luna-0077
Clearing cache on luna-0035
Clearing cache on luna-0032
Clearing cache on luna-0038
Clearing cache on luna-0180
Clearing cache on luna-0273
Clearing cache on luna-0092
Clearing cache on luna-0026
Clearing cache on luna-0083
Clearing cache on luna-0024
Clearing cache on luna-0036
Clearing cache on luna-0184
Clearing cache on luna-0084
Clearing cache on luna-0093
Clearing cache on luna-0087
Clearing cache on luna-0027
Clearing cache on luna-0081
Clearing cache on luna-0078
Clearing cache on luna-0187
Clearing cache on luna-0039
Clearing cache on luna-0211
Clearing cache on luna-0178
Clearing cache on luna-0034
Clearing cache on luna-0206
Clearing cache on luna-0088
Clearing cache on luna-0082
Clearing cache on luna-0215
Clearing cache on luna-0188
Clearing cache on luna-0263
Clearing cache on luna-0028
Clearing cache on luna-0040
Clearing cache on luna-0212
Clearing cache on luna-0079
Clearing cache on luna-0091
Clearing cache on luna-0089
Clearing cache on luna-0208
Clearing cache on luna-0033
Clearing cache on luna-0182
Clearing cache on luna-0173
Clearing cache on luna-0025
Clearing cache on luna-0090
Clearing cache on luna-0205
Clearing cache on luna-0030
Clearing cache on luna-0021
Clearing cache on luna-0217
Clearing cache on luna-0175
Clearing cache on luna-0214
Clearing cache on luna-0190
Clearing cache on luna-0096
Clearing cache on luna-0223
Clearing cache on luna-0265
Clearing cache on luna-0262
Clearing cache on luna-0220
Clearing cache on luna-0181
Clearing cache on luna-0213
Clearing cache on luna-0080
Clearing cache on luna-0174
Clearing cache on luna-0207
Clearing cache on luna-0183
Clearing cache on luna-0189
Clearing cache on luna-0029
Clearing cache on luna-0210
Clearing cache on luna-0023
Clearing cache on luna-0177
Clearing cache on luna-0192
Clearing cache on luna-0261
Clearing cache on luna-0276
Clearing cache on luna-0270
Clearing cache on luna-0222
Clearing cache on luna-0094
Clearing cache on luna-0037
Clearing cache on luna-0176
Clearing cache on luna-0185
Clearing cache on luna-0191
Clearing cache on luna-0031
Clearing cache on luna-0179
Clearing cache on luna-0269
Clearing cache on luna-0085
Clearing cache on luna-0022
Clearing cache on luna-0272
Clearing cache on luna-0224
Clearing cache on luna-0278
Clearing cache on luna-0275
Clearing cache on luna-0221
Clearing cache on luna-0219
Clearing cache on luna-0264
Clearing cache on luna-0279
Clearing cache on luna-0271
Clearing cache on luna-0277
Clearing cache on luna-0268
Clearing cache on luna-0280
Clearing cache on luna-0274
Clearing cache on luna-0266
Clearing cache on luna-0218
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
vm.drop_caches = 3
+ srun --mpi=pmix --ntasks=800 --ntasks-per-node=8 --container-name=image_segmentation --container-mounts=/lustre/fsw/mlperf/mlperft-unet3d/dataset/:/data,/lustre/fsw/mlperf-ci/23360856/results:/results,/lustre/fsw/mlperf/mlperft-unet3d/rachitg/logs/single_node:/profile_dir ./run_and_time.sh
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR=1.5
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ '[' -n 1 ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' -n 5 ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 4 ']'
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ SEED=-1
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ LR=1.5
+ OPTIMIZER=nag
+ LR=1.5
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ SEED=-1
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ TARGET_DIR=
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ cluster=
+ declare -a CMD
+ LR=1.5
+ '[' -n 2 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 6 ']'
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' -n 3 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ cluster=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ declare -a CMD
+ EVALUATE_EVERY=14
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ TARGET_DIR=
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=selene
running benchmark
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ SEED=-1
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ OPTIMIZER=nag
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
+ '[' -n 6 ']'
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
running benchmark
+ cluster=
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
running benchmark
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ '[' -n 7 ']'
+ QUALITY_THRESHOLD=0.908
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ SEED=-1
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 6 ']'
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR=1.5
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
running benchmark
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
running benchmark
+ TARGET_DIR=
running benchmark
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ '[' -n 3 ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ SEED=-1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
running benchmark
+ START_EVAL_AT=700
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ VAL_BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
+ declare -a CMD
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ '[' -n 4 ']'
+ declare -a CMD
+ BATCH_SIZE=1
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ VAL_BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ TARGET_DIR=
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ DATASET_DIR=/data
running benchmark
+ echo 'running benchmark'
+ echo 'running benchmark'
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
running benchmark
+ DATASET_DIR=/data
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 4 ']'
running benchmark
+ SEED=-1
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ cluster=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
running benchmark
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ TARGET_DIR=
+ '[' -n 4 ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 5 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 1 ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ EVALUATE_EVERY=14
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ '[' -n 1 ']'
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 0 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ declare -a CMD
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 1 ']'
+ '[' -n 1 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ DATASET_DIR=/data
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ LR=1.5
+ SEED=-1
+ OPTIMIZER=nag
+ MAX_EPOCHS=7000
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ DATASET_DIR=/data
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ START_EVAL_AT=700
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ SEED=-1
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ LR=1.5
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ SEED=-1
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR=1.5
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ declare -a CMD
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ MAX_EPOCHS=7000
+ '[' -n 2 ']'
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' -n 7 ']'
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
running benchmark
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
running benchmark
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ DATASET_DIR=/data
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ SEED=-1
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ declare -a CMD
+ SEED=-1
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 5 ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' -n 0 ']'
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 3 ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 7 ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
running benchmark
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
running benchmark
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
running benchmark
+ PROFILING_PREFIX=
+ declare -a CMD
+ DATASET_DIR=/data
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ TARGET_DIR=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ SEED=-1
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 3 ']'
+ TARGET_DIR=
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ declare -a CMD
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 0 ']'
+ cluster=
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 4 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 6 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ BATCH_SIZE=1
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 5 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ cluster=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ declare -a CMD
+ SEED=-1
+ '[' -n 4 ']'
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ BATCH_SIZE=1
+ cluster=
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 7 ']'
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ cluster=
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
running benchmark
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
+ DATASET_DIR=/data
+ QUALITY_THRESHOLD=0.908
+ SEED=-1
+ OPTIMIZER=nag
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
running benchmark
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ cluster=
+ PROFILING_PREFIX=
+ '[' -n 5 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
running benchmark
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' -n 1 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ SEED=-1
+ VAL_BATCH_SIZE=1
+ OPTIMIZER=nag
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ LR=1.5
running benchmark
+ declare -a CMD
+ MAX_EPOCHS=7000
running benchmark
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ TARGET_DIR=
running benchmark
+ DATASET_DIR=/data
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ SEED=-1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ TARGET_DIR=
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ VAL_BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ PROFILING_PREFIX=
+ '[' -n 4 ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ QUALITY_THRESHOLD=0.908
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR=1.5
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ '[' -n 6 ']'
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' 800 -gt 100 ']'
+ cluster=
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ DATASET_DIR=/data
+ SEED=-1
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ BATCH_SIZE=1
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' -n 7 ']'
+ TARGET_DIR=
+ START_EVAL_AT=700
+ '[' -n 6 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
running benchmark
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ declare -a CMD
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 2 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ cluster=
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ PROFILING_PREFIX=
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' -n 5 ']'
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ MAX_EPOCHS=7000
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ declare -a CMD
+ EVALUATE_EVERY=14
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ '[' -n 7 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ DATASET_DIR=/data
+ SEED=-1
running benchmark
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ LR=1.5
running benchmark
+ '[' -n 7 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ cluster=
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ SEED=-1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
running benchmark
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ '[' -n 7 ']'
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ declare -a CMD
+ MAX_EPOCHS=7000
running benchmark
+ PROFILING_PREFIX=
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ '[' 800 -gt 100 ']'
running benchmark
+ QUALITY_THRESHOLD=0.908
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ TARGET_DIR=
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 1 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ BATCH_SIZE=1
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
running benchmark
+ cluster=
+ declare -a CMD
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ '[' 800 -gt 100 ']'
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ START_EVAL_AT=700
+ SEED=-1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ OPTIMIZER=nag
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ LR=1.5
+ MAX_EPOCHS=7000
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR=1.5
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ declare -a CMD
+ TARGET_DIR=
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ DATASET_DIR=/data
+ PROFILING_PREFIX=
+ SEED=-1
running benchmark
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 2 ']'
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ '[' -n 1 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 2 ']'
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
running benchmark
+ DATASET_DIR=/data
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
running benchmark
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ TARGET_DIR=
running benchmark
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ declare -a CMD
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ '[' -n 3 ']'
running benchmark
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ TARGET_DIR=
+ '[' -n 3 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ TARGET_DIR=
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 0 ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ DATASET_DIR=/data
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ PROFILING_PREFIX=
running benchmark
+ VAL_BATCH_SIZE=1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ VAL_BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
+ '[' -n 4 ']'
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR=1.5
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
running benchmark
+ START_EVAL_AT=700
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ cluster=selene
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ '[' -n 4 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ TARGET_DIR=
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 4 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ DATASET_DIR=/data
+ '[' -n 7 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ cluster=
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR=1.5
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ DATASET_DIR=/data
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ SEED=-1
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ '[' -n 5 ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ cluster=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' -n 5 ']'
running benchmark
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ DATASET_DIR=/data
+ SEED=-1
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ SEED=-1
+ BATCH_SIZE=1
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ LR=1.5
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ declare -a CMD
+ EVALUATE_EVERY=14
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
running benchmark
+ EVALUATE_EVERY=14
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ START_EVAL_AT=700
+ '[' -n 2 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 7 ']'
running benchmark
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
running benchmark
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
running benchmark
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ declare -a CMD
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 4 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 0 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
running benchmark
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
running benchmark
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=selene
running benchmark
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
running benchmark
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
running benchmark
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
running benchmark
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
running benchmark
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
running benchmark
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ QUALITY_THRESHOLD=0.908
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
running benchmark
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
running benchmark
+ TARGET_DIR=
running benchmark
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
running benchmark
+ '[' 800 -gt 100 ']'
running benchmark
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ declare -a CMD
+ cluster=
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 4 ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ '[' 800 -gt 100 ']'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
running benchmark
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 2 ']'
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 3 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ declare -a CMD
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ START_EVAL_AT=700
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
running benchmark
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR=1.5
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ declare -a CMD
running benchmark
+ EVALUATE_EVERY=14
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 2 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ BATCH_SIZE=1
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ '[' -n 6 ']'
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
running benchmark
+ DATASET_DIR=/data
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ MAX_EPOCHS=7000
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ LR=1.5
+ MAX_EPOCHS=7000
running benchmark
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ LR_WARMUP_EPOCHS=1000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
running benchmark
+ BATCH_SIZE=1
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 7 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ LR=1.5
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
running benchmark
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
running benchmark
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ '[' -n 0 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ SEED=-1
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ cluster=
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ MAX_EPOCHS=7000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ declare -a CMD
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
running benchmark
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ DATASET_DIR=/data
running benchmark
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ cluster=
+ SEED=-1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ OPTIMIZER=nag
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ LR=1.5
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
running benchmark
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ '[' -n 1 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ '[' -n 0 ']'
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 2 ']'
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ LR=1.5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ cluster=
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ declare -a CMD
running benchmark
+ '[' -n 5 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ cluster=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ declare -a CMD
+ '[' -n 6 ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ '[' -n 4 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 5 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
running benchmark
+ START_EVAL_AT=700
+ declare -a CMD
running benchmark
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 7 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ TARGET_DIR=
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ PROFILING_PREFIX=
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' -n 1 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ PROFILING_PREFIX=
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 6 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' 800 -gt 100 ']'
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ '[' -n 2 ']'
+ DATASET_DIR=/data
+ '[' 800 -gt 100 ']'
+ START_EVAL_AT=700
+ cluster=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 4 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ DATASET_DIR=/data
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
running benchmark
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ OPTIMIZER=nag
+ TARGET_DIR=
+ BATCH_SIZE=1
running benchmark
+ echo 'running benchmark'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ DATASET_DIR=/data
+ declare -a CMD
+ START_EVAL_AT=700
+ SEED=-1
+ '[' -n 3 ']'
+ EVALUATE_EVERY=14
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ TARGET_DIR=
+ BATCH_SIZE=1
+ cluster=
+ '[' -n 5 ']'
+ '[' -n 5 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ LR_WARMUP_EPOCHS=1000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ OPTIMIZER=nag
running benchmark
+ DATASET_DIR=/data
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
+ BATCH_SIZE=1
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ OPTIMIZER=nag
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ declare -a CMD
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 5 ']'
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ cluster=
+ PROFILING_PREFIX=
running benchmark
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ '[' -n 2 ']'
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ LR=1.5
running benchmark
+ DATASET_DIR=/data
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 1 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ BATCH_SIZE=1
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 3 ']'
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 6 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ cluster=
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
running benchmark
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ MAX_EPOCHS=7000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 7 ']'
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ cluster=
+ OPTIMIZER=nag
running benchmark
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ VAL_BATCH_SIZE=1
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ declare -a CMD
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ declare -a CMD
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ DATASET_DIR=/data
+ '[' -n 2 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ cluster=
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ '[' -n 7 ']'
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
running benchmark
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 5 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ TARGET_DIR=
+ START_EVAL_AT=700
+ DATASET_DIR=/data
+ '[' 800 -gt 100 ']'
+ cluster=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ '[' -n 4 ']'
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ cluster=
+ declare -a CMD
+ BATCH_SIZE=1
running benchmark
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ SEED=-1
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ declare -a CMD
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ declare -a CMD
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 1 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ '[' -n 0 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ TARGET_DIR=
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 0 ']'
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ cluster=
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ SEED=-1
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ LR=1.5
running benchmark
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ declare -a CMD
running benchmark
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 6 ']'
+ MAX_EPOCHS=7000
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ declare -a CMD
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ PROFILING_PREFIX=
+ SEED=-1
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' -n 3 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' -n 3 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ LR=1.5
+ cluster=
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ '[' -n 2 ']'
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ LR=1.5
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ START_EVAL_AT=700
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ cluster=
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ cluster=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ declare -a CMD
running benchmark
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ TARGET_DIR=
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ cluster=selene
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ declare -a CMD
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ LR_WARMUP_EPOCHS=1000
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 1 ']'
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ cluster=
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ '[' -n 4 ']'
+ declare -a CMD
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ DATASET_DIR=/data
+ SEED=-1
+ cluster=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ DATASET_DIR=/data
+ '[' -n 0 ']'
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ TARGET_DIR=
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ OPTIMIZER=nag
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 6 ']'
+ LR=1.5
+ cluster=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ cluster=
+ MAX_EPOCHS=7000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' -n 3 ']'
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ declare -a CMD
+ LR=1.5
+ LR=1.5
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 4 ']'
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ DATASET_DIR=/data
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ DATASET_DIR=/data
+ DATASET_DIR=/data
+ SEED=-1
+ cluster=
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ DATASET_DIR=/data
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ TARGET_DIR=
+ SEED=-1
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ OPTIMIZER=nag
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ TARGET_DIR=
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ '[' -n 6 ']'
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ cluster=
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ declare -a CMD
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
+ DATASET_DIR=/data
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ SEED=-1
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ MAX_EPOCHS=7000
+ '[' -n 2 ']'
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ LR=1.5
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ TARGET_DIR=
+ START_EVAL_AT=700
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ START_EVAL_AT=700
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ declare -a CMD
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ DATASET_DIR=/data
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ '[' -n 5 ']'
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ DATASET_DIR=/data
+ OPTIMIZER=nag
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ PROFILING_PREFIX=
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
+ '[' -n 5 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ TARGET_DIR=
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ LR=1.5
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ MAX_EPOCHS=7000
+ '[' -n 2 ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ declare -a CMD
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
running benchmark
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ DATASET_DIR=/data
+ TARGET_DIR=
+ declare -a CMD
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ cluster=
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 2 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ MAX_EPOCHS=7000
running benchmark
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ cluster=
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' -n 1 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ cluster=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR=1.5
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 3 ']'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ '[' -n 4 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ declare -a CMD
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ '[' -n 1 ']'
+ '[' -n 0 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ QUALITY_THRESHOLD=0.908
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ DATASET_DIR=/data
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ SEED=-1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ LR=1.5
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ '[' -n 3 ']'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ SEED=-1
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ cluster=
+ OPTIMIZER=nag
+ declare -a CMD
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ cluster=
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=selene
+ LR=1.5
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ EVALUATE_EVERY=14
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ PROFILING_PREFIX=
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
running benchmark
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 3 ']'
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ SEED=-1
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ BATCH_SIZE=1
running benchmark
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' -n 3 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ SEED=-1
running benchmark
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ '[' -n 3 ']'
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ DATASET_DIR=/data
+ START_EVAL_AT=700
+ SEED=-1
+ echo 'running benchmark'
+ EVALUATE_EVERY=14
+ OPTIMIZER=nag
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ BATCH_SIZE=1
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ PROFILING_PREFIX=
running benchmark
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ '[' -n 2 ']'
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
running benchmark
+ LR=1.5
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ MAX_EPOCHS=7000
+ cluster=
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 4 ']'
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 2 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ '[' -n 7 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ DATASET_DIR=/data
+ SEED=-1
+ echo 'running benchmark'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ declare -a CMD
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ LR=1.5
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ '[' -n 1 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ SEED=-1
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ OPTIMIZER=nag
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ declare -a CMD
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ '[' -n 6 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' 800 -gt 100 ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ MAX_EPOCHS=7000
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
running benchmark
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
running benchmark
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ TARGET_DIR=
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ cluster=
+ DATASET_DIR=/data
+ SEED=-1
+ declare -a CMD
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 3 ']'
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
running benchmark
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 0 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ echo 'running benchmark'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ DATASET_DIR=/data
+ SEED=-1
+ DATASET_DIR=/data
+ OPTIMIZER=nag
+ '[' -n 6 ']'
+ BATCH_SIZE=1
+ SEED=-1
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR=1.5
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ BATCH_SIZE=1
+ LR=1.5
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 4 ']'
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ PROFILING_PREFIX=
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ QUALITY_THRESHOLD=0.908
+ '[' -n 5 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
running benchmark
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ TARGET_DIR=
+ '[' -n 4 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
running benchmark
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ SEED=-1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ declare -a CMD
+ EVALUATE_EVERY=14
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
running benchmark
+ declare -a CMD
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ cluster=selene
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ echo 'running benchmark'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ DATASET_DIR=/data
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ SEED=-1
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ DATASET_DIR=/data
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
+ declare -a CMD
+ SEED=-1
+ '[' -n 1 ']'
running benchmark
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' -n 6 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ declare -a CMD
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ EVALUATE_EVERY=14
+ '[' -n 7 ']'
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
running benchmark
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ DATASET_DIR=/data
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ cluster=
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ BATCH_SIZE=1
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ SEED=-1
+ echo 'running benchmark'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ DATASET_DIR=/data
+ '[' 800 -gt 100 ']'
+ cluster=
+ SEED=-1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ PROFILING_PREFIX=
+ declare -a CMD
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ '[' -n 3 ']'
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' -n 5 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
running benchmark
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ TARGET_DIR=
+ DATASET_DIR=/data
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ SEED=-1
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ declare -a CMD
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ '[' -n 1 ']'
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ DATASET_DIR=/data
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ SEED=-1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ SEED=-1
+ echo 'running benchmark'
+ MAX_EPOCHS=7000
+ OPTIMIZER=nag
+ LR_WARMUP_EPOCHS=1000
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ declare -a CMD
+ LR=1.5
+ '[' -n 7 ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ SEED=-1
+ OPTIMIZER=nag
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ '[' -n 6 ']'
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ cluster=
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ PROFILING_PREFIX=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 0 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 1 ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ declare -a CMD
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ '[' -n 4 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ TARGET_DIR=
+ '[' -n 2 ']'
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
running benchmark
+ '[' -n 2 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
running benchmark
+ declare -a CMD
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ '[' -n 6 ']'
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ PROFILING_PREFIX=
+ cluster=selene
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ echo 'running benchmark'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ DATASET_DIR=/data
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ SEED=-1
+ cluster=
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ '[' -n 7 ']'
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ DATASET_DIR=/data
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ MAX_EPOCHS=7000
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
running benchmark
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ LR=1.5
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ declare -a CMD
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 1 ']'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ declare -a CMD
running benchmark
+ cluster=
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ TARGET_DIR=
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 2 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data
+ SEED=-1
+ DATASET_DIR=/data
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ '[' -n 5 ']'
+ SEED=-1
running benchmark
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ OPTIMIZER=nag
+ MAX_EPOCHS=7000
+ cluster=
+ BATCH_SIZE=1
+ BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ LR=1.5
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ declare -a CMD
+ PROFILING_PREFIX=
+ '[' -n 6 ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ PROFILING_PREFIX=
+ LR=1.5
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 3 ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 1 ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ cluster=
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 3 ']'
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 7 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ PROFILING_PREFIX=
+ declare -a CMD
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' -n 5 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ '[' -n 4 ']'
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ '[' -n 2 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ DATASET_DIR=/data
running benchmark
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ VAL_BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ DATASET_DIR=/data
+ cluster=
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 3 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ cluster=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ '[' -n 0 ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ cluster=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ declare -a CMD
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 7 ']'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 6 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ SEED=-1
+ DATASET_DIR=/data
+ EVALUATE_EVERY=14
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ OPTIMIZER=nag
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 4 ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' -n 6 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ DATASET_DIR=/data
+ SEED=-1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ '[' -n 0 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
running benchmark
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ declare -a CMD
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 4 ']'
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ DATASET_DIR=/data
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 4 ']'
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 1 ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ LR=1.5
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ QUALITY_THRESHOLD=0.908
running benchmark
+ cluster=selene
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ DATASET_DIR=/data
running benchmark
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ SEED=-1
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ LR=1.5
+ '[' -n 7 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
running benchmark
+ declare -a CMD
+ START_EVAL_AT=700
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
running benchmark
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ TARGET_DIR=
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ '[' -n 3 ']'
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ cluster=
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ SEED=-1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 4 ']'
running benchmark
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
running benchmark
+ declare -a CMD
+ cluster=
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ TARGET_DIR=
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ declare -a CMD
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ LR=1.5
running benchmark
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ MAX_EPOCHS=7000
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
running benchmark
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ '[' -n 6 ']'
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ cluster=
+ '[' -n 0 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' -n 0 ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 7 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ VAL_BATCH_SIZE=1
+ SEED=-1
+ '[' '' = apiLog.sh ']'
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ LR=1.5
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ LR=1.5
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
running benchmark
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' -n 1 ']'
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ SEED=-1
+ PROFILING_PREFIX=
+ declare -a CMD
+ OPTIMIZER=nag
+ '[' -n 6 ']'
+ '[' -n 4 ']'
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ VAL_BATCH_SIZE=1
+ cluster=
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ DATASET_DIR=/data
+ cluster=
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ TARGET_DIR=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 2 ']'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ SEED=-1
+ OPTIMIZER=nag
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ SEED=-1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ DATASET_DIR=/data
+ SEED=-1
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ OPTIMIZER=nag
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ '[' -n 6 ']'
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ START_EVAL_AT=700
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ cluster=
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 5 ']'
running benchmark
+ DATASET_DIR=/data
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ SEED=-1
+ OPTIMIZER=nag
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ SEED=-1
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
running benchmark
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ DATASET_DIR=/data
+ BATCH_SIZE=1
+ SEED=-1
+ '[' -n 7 ']'
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ START_EVAL_AT=700
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ TARGET_DIR=
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ LR=1.5
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ declare -a CMD
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ DATASET_DIR=/data
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' -n 3 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 3 ']'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
+ SEED=-1
running benchmark
+ LR=1.5
+ declare -a CMD
+ MAX_EPOCHS=7000
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ OPTIMIZER=nag
+ BATCH_SIZE=1
running benchmark
+ VAL_BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ declare -a CMD
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 4 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ PROFILING_PREFIX=
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 3 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ DATASET_DIR=/data
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
running benchmark
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ '[' -n 2 ']'
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ TARGET_DIR=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' -n 6 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ declare -a CMD
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 7 ']'
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ MAX_EPOCHS=7000
running benchmark
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' -n 5 ']'
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ cluster=
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' 800 -gt 100 ']'
+ SEED=-1
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ '[' -n 3 ']'
+ DATASET_DIR=/data
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ SEED=-1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ START_EVAL_AT=700
+ LR=1.5
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
+ LR=1.5
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ declare -a CMD
+ DATASET_DIR=/data
+ '[' -n 7 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
+ echo 'running benchmark'
running benchmark
+ declare -a CMD
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ DATASET_DIR=/data
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ LR=1.5
+ SEED=-1
+ MAX_EPOCHS=7000
+ OPTIMIZER=nag
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ VAL_BATCH_SIZE=1
+ START_EVAL_AT=700
+ LR=1.5
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ TARGET_DIR=
+ cluster=
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ DATASET_DIR=/data
+ TARGET_DIR=
+ '[' -n 0 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
+ '[' -n 4 ']'
+ OPTIMIZER=nag
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ BATCH_SIZE=1
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ DATASET_DIR=/data
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' -n 6 ']'
+ TARGET_DIR=
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ cluster=
+ START_EVAL_AT=700
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ '[' -n 4 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ '[' 800 -gt 100 ']'
+ LR=1.5
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
running benchmark
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ '[' -n 3 ']'
+ cluster=
running benchmark
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ MAX_EPOCHS=7000
running benchmark
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ '[' -n 2 ']'
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ START_EVAL_AT=700
+ cluster=
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ cluster=
+ SEED=-1
+ OPTIMIZER=nag
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ QUALITY_THRESHOLD=0.908
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ DATASET_DIR=/data
+ SEED=-1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ LR=1.5
+ OPTIMIZER=nag
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ declare -a CMD
+ MAX_EPOCHS=7000
+ '[' -n 4 ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 0 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ cluster=
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' -n 5 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ '[' -n 3 ']'
running benchmark
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ EVALUATE_EVERY=14
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 1 ']'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 7 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ declare -a CMD
running benchmark
+ TARGET_DIR=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ cluster=
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
running benchmark
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
running benchmark
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ LR=1.5
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' -n 2 ']'
+ declare -a CMD
+ PROFILING_PREFIX=
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
running benchmark
+ START_EVAL_AT=700
+ cluster=selene
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ '[' -n 2 ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 4 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ DATASET_DIR=/data
running benchmark
+ EVALUATE_EVERY=14
+ SEED=-1
+ TARGET_DIR=
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ BATCH_SIZE=1
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ LR=1.5
+ '[' -n 1 ']'
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ DATASET_DIR=/data
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ SEED=-1
running benchmark
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
+ MAX_EPOCHS=7000
running benchmark
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ cluster=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ START_EVAL_AT=700
+ SEED=-1
+ EVALUATE_EVERY=14
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ PROFILING_PREFIX=
+ declare -a CMD
+ PROFILING_PREFIX=
+ declare -a CMD
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 2 ']'
+ DATASET_DIR=/data
+ '[' -n 4 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ MAX_EPOCHS=7000
running benchmark
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ DATASET_DIR=/data
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ cluster=
running benchmark
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' -n 0 ']'
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 5 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ '[' -n 6 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ LR=1.5
+ START_EVAL_AT=700
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ DATASET_DIR=/data
+ START_EVAL_AT=700
+ SEED=-1
+ EVALUATE_EVERY=14
running benchmark
+ OPTIMIZER=nag
+ TARGET_DIR=
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ '[' -n 3 ']'
+ declare -a CMD
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ PROFILING_PREFIX=
+ '[' -n 0 ']'
+ declare -a CMD
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ DATASET_DIR=/data
+ SEED=-1
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ OPTIMIZER=nag
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' -n 3 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ cluster=
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
+ LR=1.5
running benchmark
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ declare -a CMD
+ DATASET_DIR=/data
+ SEED=-1
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ START_EVAL_AT=700
running benchmark
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' -n 3 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 6 ']'
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ cluster=
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ declare -a CMD
+ PROFILING_PREFIX=
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ '[' -n 0 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ '[' 800 -gt 100 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 0 ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATASET_DIR=/data
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ cluster=
+ SEED=-1
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ OPTIMIZER=nag
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ LR=1.5
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ '[' -n 5 ']'
+ START_EVAL_AT=700
+ '[' -n 0 ']'
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 4 ']'
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ LR=1.5
+ MAX_EPOCHS=7000
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ SEED=-1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ LR=1.5
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ declare -a CMD
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 4 ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ '[' -n 4 ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
running benchmark
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ OPTIMIZER=nag
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 4 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ declare -a CMD
running benchmark
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ QUALITY_THRESHOLD=0.908
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' -n 1 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ cluster=
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' -n 5 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ DATASET_DIR=/data
+ SEED=-1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR=1.5
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ '[' -n 2 ']'
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 7 ']'
+ TARGET_DIR=
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ cluster=selene
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ SEED=-1
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ OPTIMIZER=nag
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ cluster=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ declare -a CMD
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' -n 3 ']'
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
running benchmark
+ DATASET_DIR=/data
+ START_EVAL_AT=700
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ SEED=-1
+ EVALUATE_EVERY=14
+ OPTIMIZER=nag
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 4 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ DATASET_DIR=/data
+ SEED=-1
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ OPTIMIZER=nag
+ '[' -n 4 ']'
+ TARGET_DIR=
+ cluster=selene
+ BATCH_SIZE=1
+ '[' -n 2 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ cluster=
+ PROFILING_PREFIX=
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ '[' -n 1 ']'
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
running benchmark
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ DATASET_DIR=/data
+ SEED=-1
+ START_EVAL_AT=700
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
running benchmark
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ cluster=
running benchmark
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 0 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 3 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ TARGET_DIR=
+ '[' -n 6 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
running benchmark
+ '[' -n 7 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ SEED=-1
+ DATASET_DIR=/data
+ OPTIMIZER=nag
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR=1.5
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ '[' -n 6 ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 0 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
running benchmark
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data
+ SEED=-1
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ OPTIMIZER=nag
+ DATASET_DIR=/data
+ BATCH_SIZE=1
+ SEED=-1
+ VAL_BATCH_SIZE=1
+ OPTIMIZER=nag
+ LR=1.5
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ declare -a CMD
+ SEED=-1
+ declare -a CMD
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ '[' -n 5 ']'
+ TARGET_DIR=
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' -n 2 ']'
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ '[' -n 4 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ PROFILING_PREFIX=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ SEED=-1
+ OPTIMIZER=nag
+ declare -a CMD
+ '[' -n 7 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ cluster=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ SEED=-1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ LR=1.5
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 3 ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ PROFILING_PREFIX=
+ declare -a CMD
+ PROFILING_PREFIX=
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ cluster=
+ '[' -n 4 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' 800 -gt 100 ']'
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ '[' -n 0 ']'
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ '[' -n 5 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ cluster=selene
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ SEED=-1
+ OPTIMIZER=nag
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ TARGET_DIR=
+ '[' -n 0 ']'
+ LR=1.5
+ '[' -n 4 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ cluster=
+ PROFILING_PREFIX=
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ LR=1.5
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ BATCH_SIZE=1
+ LR=1.5
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' -n 3 ']'
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ EVALUATE_EVERY=14
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ TARGET_DIR=
+ '[' -n 6 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' -n 3 ']'
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ cluster=
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 1 ']'
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ '[' -n 4 ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ '[' -n 0 ']'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' -n 1 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ TARGET_DIR=
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ DATASET_DIR=/data
+ '[' -n 7 ']'
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ cluster=
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 7 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ SEED=-1
+ PROFILING_PREFIX=
+ declare -a CMD
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
running benchmark
+ '[' '' = apiLog.sh ']'
running benchmark
+ '[' -n 6 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ cluster=
+ VAL_BATCH_SIZE=1
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ LR=1.5
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ START_EVAL_AT=700
+ SEED=-1
+ EVALUATE_EVERY=14
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ TARGET_DIR=
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ cluster=
+ '[' -n 6 ']'
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=selene
+ PROFILING_PREFIX=
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
running benchmark
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 1 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ LR=1.5
+ MAX_EPOCHS=7000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ '[' '' = apiLog.sh ']'
running benchmark
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
running benchmark
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
running benchmark
+ PROFILING_PREFIX=
+ declare -a CMD
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ declare -a CMD
+ START_EVAL_AT=700
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ cluster=
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ '[' -n 0 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ OPTIMIZER=nag
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
running benchmark
+ EVALUATE_EVERY=14
+ cluster=
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' -n 6 ']'
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ cluster=selene
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 6 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ VAL_BATCH_SIZE=1
+ cluster=
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ LR_WARMUP_EPOCHS=1000
+ cluster=selene
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ declare -a CMD
+ '[' -n 2 ']'
+ DATASET_DIR=/data
+ '[' 800 -gt 100 ']'
+ SEED=-1
+ cluster=
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ VAL_BATCH_SIZE=1
+ cluster=selene
+ LR=1.5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ TARGET_DIR=
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ LR=1.5
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 2 ']'
+ echo 'running benchmark'
+ '[' 800 -gt 100 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ SEED=-1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 5 ']'
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ START_EVAL_AT=700
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ SEED=-1
+ '[' -n 5 ']'
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ BATCH_SIZE=1
+ cluster=
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' -n 4 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 1 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' 800 -gt 100 ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ '[' -n 5 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ PROFILING_PREFIX=
+ LR=1.5
+ MAX_EPOCHS=7000
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 0 ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ cluster=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' -n 7 ']'
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 7 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 0 ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ declare -a CMD
+ TARGET_DIR=
+ echo 'running benchmark'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ DATASET_DIR=/data
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ SEED=-1
+ declare -a CMD
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' -n 1 ']'
+ BATCH_SIZE=1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
+ '[' -n 4 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ cluster=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
running benchmark
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ OPTIMIZER=nag
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ BATCH_SIZE=1
+ '[' -n 7 ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ echo 'running benchmark'
+ MAX_EPOCHS=7000
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ START_EVAL_AT=700
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ DATASET_DIR=/data
+ '[' -n 1 ']'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ cluster=
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ declare -a CMD
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 4 ']'
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR=1.5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 5 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ cluster=
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 3 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' -n 0 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ SEED=-1
+ OPTIMIZER=nag
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ LR=1.5
+ declare -a CMD
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ '[' -n 1 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ cluster=
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ SEED=-1
+ cluster=selene
+ OPTIMIZER=nag
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ SEED=-1
+ START_EVAL_AT=700
+ OPTIMIZER=nag
+ declare -a CMD
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ TARGET_DIR=
+ LR=1.5
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ '[' -n 0 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 0 ']'
+ '[' -n 3 ']'
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ declare -a CMD
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 4 ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ cluster=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ DATASET_DIR=/data
+ SEED=-1
running benchmark
+ LR=1.5
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
running benchmark
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ SEED=-1
+ OPTIMIZER=nag
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 1 ']'
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
running benchmark
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 7 ']'
+ PROFILING_PREFIX=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ declare -a CMD
running benchmark
+ cluster=
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ '[' -n 0 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ MAX_EPOCHS=7000
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
running benchmark
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 3 ']'
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
running benchmark
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' -n 4 ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
running benchmark
+ LR=1.5
+ cluster=
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
running benchmark
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 2 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ OPTIMIZER=nag
+ MAX_EPOCHS=7000
+ BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ LR=1.5
+ START_EVAL_AT=700
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' -n 2 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ declare -a CMD
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 5 ']'
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 7 ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 2 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ SEED=-1
+ OPTIMIZER=nag
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ declare -a CMD
+ '[' -n 3 ']'
+ DATASET_DIR=/data
+ '[' -n 0 ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ '[' -n 4 ']'
+ cluster=
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ cluster=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ '[' -n 4 ']'
+ declare -a CMD
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ cluster=
+ '[' -n 7 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ cluster=
+ '[' -n 5 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ EVALUATE_EVERY=14
+ SEED=-1
+ OPTIMIZER=nag
+ TARGET_DIR=
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ PROFILING_PREFIX=
+ LR=1.5
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 1 ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ DATASET_DIR=/data
+ '[' -n 0 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ declare -a CMD
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ cluster=
+ '[' -n 2 ']'
+ VAL_BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ LR=1.5
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ cluster=
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ '[' -n 5 ']'
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ declare -a CMD
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ SEED=-1
+ cluster=selene
+ OPTIMIZER=nag
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' -n 5 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ EVALUATE_EVERY=14
running benchmark
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ LR_WARMUP_EPOCHS=1000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ declare -a CMD
+ TARGET_DIR=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 6 ']'
+ declare -a CMD
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ '[' -n 2 ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ cluster=
+ '[' 800 -gt 100 ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 4 ']'
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ cluster=
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 7 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ '[' -n 7 ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ cluster=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 3 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' -n 0 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ START_EVAL_AT=700
+ declare -a CMD
+ QUALITY_THRESHOLD=0.908
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ TARGET_DIR=
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ PROFILING_PREFIX=
+ cluster=
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ '[' -n 5 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ DATASET_DIR=/data
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ SEED=-1
+ OPTIMIZER=nag
+ cluster=
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ LR=1.5
+ cluster=selene
+ MAX_EPOCHS=7000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ declare -a CMD
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 1 ']'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ declare -a CMD
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
running benchmark
+ TARGET_DIR=
+ START_EVAL_AT=700
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ EVALUATE_EVERY=14
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 7 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
running benchmark
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
running benchmark
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ declare -a CMD
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' -n 6 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 1 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ SEED=-1
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ OPTIMIZER=nag
+ TARGET_DIR=
+ BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ PROFILING_PREFIX=
+ LR=1.5
+ MAX_EPOCHS=7000
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' -n 0 ']'
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ cluster=
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ PROFILING_PREFIX=
+ START_EVAL_AT=700
+ DATASET_DIR=/data
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR=1.5
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ '[' -n 3 ']'
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ '[' '' = apiLog.sh ']'
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
+ SEED=-1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ BATCH_SIZE=1
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ PROFILING_PREFIX=
+ MAX_EPOCHS=7000
+ declare -a CMD
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
+ '[' -n 1 ']'
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ EVALUATE_EVERY=14
+ DATASET_DIR=/data
+ cluster=
+ TARGET_DIR=
+ SEED=-1
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ LR=1.5
+ '[' -n 1 ']'
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ LR_WARMUP_EPOCHS=1000
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ declare -a CMD
+ DATASET_DIR=/data
+ SEED=-1
+ DATASET_DIR=/data
+ '[' -n 6 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ MAX_EPOCHS=7000
+ SEED=-1
+ OPTIMIZER=nag
+ VAL_BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ LR=1.5
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 0 ']'
+ MAX_EPOCHS=7000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ cluster=
+ echo 'running benchmark'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ START_EVAL_AT=700
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ declare -a CMD
+ EVALUATE_EVERY=14
+ DATASET_DIR=/data
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ declare -a CMD
+ echo 'running benchmark'
+ declare -a CMD
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ SEED=-1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ echo 'running benchmark'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ DATASET_DIR=/data
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ MAX_EPOCHS=7000
+ SEED=-1
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ '[' -n 5 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ START_EVAL_AT=700
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ echo 'running benchmark'
+ LR=1.5
+ DATASET_DIR=/data
+ MAX_EPOCHS=7000
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ LR_WARMUP_EPOCHS=1000
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ QUALITY_THRESHOLD=0.908
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ TARGET_DIR=
+ PROFILING_PREFIX=
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 4 ']'
+ '[' -n 6 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ PROFILING_PREFIX=
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ '[' -n 5 ']'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ cluster=
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ DATASET_DIR=/data
+ SEED=-1
+ MAX_EPOCHS=7000
+ OPTIMIZER=nag
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 1 ']'
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' '' = apiLog.sh ']'
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' -n 7 ']'
+ SEED=-1
+ OPTIMIZER=nag
+ '[' 800 -gt 100 ']'
+ BATCH_SIZE=1
+ cluster=
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ '[' '' = apiLog.sh ']'
+ QUALITY_THRESHOLD=0.908
+ '[' -n 2 ']'
+ START_EVAL_AT=700
+ '[' 800 -gt 100 ']'
+ cluster=
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ PROFILING_PREFIX=
+ declare -a CMD
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ LR=1.5
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 1 ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ QUALITY_THRESHOLD=0.908
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ declare -a CMD
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' -n 1 ']'
+ LR=1.5
+ echo 'running benchmark'
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ cluster=
+ START_EVAL_AT=700
+ DATASET_DIR=/data
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ PROFILING_PREFIX=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR=1.5
+ echo 'running benchmark'
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR=1.5
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ declare -a CMD
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ declare -a CMD
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ '[' -n 6 ']'
+ '[' -n 6 ']'
+ '[' -n 5 ']'
+ EVALUATE_EVERY=14
+ '[' 800 -gt 100 ']'
+ '[' 800 -gt 100 ']'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ PROFILING_PREFIX=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ declare -a CMD
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ LR=1.5
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ DATASET_DIR=/data
+ SEED=-1
+ START_EVAL_AT=700
+ OPTIMIZER=nag
+ LR=1.5
+ BATCH_SIZE=1
+ EVALUATE_EVERY=14
+ VAL_BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ LR=1.5
+ TARGET_DIR=
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ '[' -n 4 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ BATCH_SIZE=1
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ VAL_BATCH_SIZE=1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ cluster=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ PROFILING_PREFIX=
+ declare -a CMD
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ MAX_EPOCHS=7000
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ SEED=-1
+ '[' -n 0 ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ '[' '' = apiLog.sh ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ echo 'running benchmark'
+ LR=1.5
+ MAX_EPOCHS=7000
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ PROFILING_PREFIX=
+ declare -a CMD
+ DATASET_DIR=/data
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 2 ']'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ cluster=
+ MAX_EPOCHS=7000
+ START_EVAL_AT=700
+ LR_WARMUP_EPOCHS=1000
+ EVALUATE_EVERY=14
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ TARGET_DIR=
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ cluster=
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ DATASET_DIR=/data
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ SEED=-1
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' -n 6 ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' 800 -gt 100 ']'
+ '[' -n 5 ']'
+ cluster=
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' '' = apiLog.sh ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ '[' -n 1 ']'
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' -n 3 ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 1 ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' -n 0 ']'
+ LR_WARMUP_EPOCHS=1000
+ '[' 800 -gt 100 ']'
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ echo 'running benchmark'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ SEED=-1
+ OPTIMIZER=nag
+ LR_WARMUP_EPOCHS=1000
+ BATCH_SIZE=1
+ QUALITY_THRESHOLD=0.908
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ PROFILING_PREFIX=
+ declare -a CMD
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ echo 'running benchmark'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ DATASET_DIR=/data
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ SEED=-1
+ QUALITY_THRESHOLD=0.908
+ OPTIMIZER=nag
+ START_EVAL_AT=700
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ '[' -n 5 ']'
+ OPTIMIZER=nag
+ '[' -n 4 ']'
+ BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ VAL_BATCH_SIZE=1
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ cluster=
+ LR=1.5
+ MAX_EPOCHS=7000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ EVALUATE_EVERY=14
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ TARGET_DIR=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 0 ']'
+ PROFILING_PREFIX=
+ '[' 800 -gt 100 ']'
+ declare -a CMD
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ '[' -n 7 ']'
+ cluster=selene
+ '[' 800 -gt 100 ']'
+ cluster=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ MAX_EPOCHS=7000
running benchmark
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ echo 'running benchmark'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ DATASET_DIR=/data
+ MAX_EPOCHS=7000
+ SEED=-1
+ LR_WARMUP_EPOCHS=1000
+ OPTIMIZER=nag
+ QUALITY_THRESHOLD=0.908
+ BATCH_SIZE=1
+ START_EVAL_AT=700
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ MAX_EPOCHS=7000
running benchmark
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ declare -a CMD
+ '[' -n 3 ']'
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' 800 -gt 100 ']'
+ PROFILING_PREFIX=
+ cluster=
+ declare -a CMD
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 1 ']'
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
running benchmark
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ EVALUATE_EVERY=14
+ TARGET_DIR=
running benchmark
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
running benchmark
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ echo 'running benchmark'
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ DATASET_DIR=/data
+ SEED=-1
+ PROFILING_PREFIX=
+ declare -a CMD
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 3 ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ QUALITY_THRESHOLD=0.908
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ START_EVAL_AT=700
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ '[' -n 5 ']'
+ SEED=-1
+ '[' 800 -gt 100 ']'
+ OPTIMIZER=nag
+ cluster=
+ BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ VAL_BATCH_SIZE=1
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ '[' '' = apiLog.sh ']'
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ OPTIMIZER=nag
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ BATCH_SIZE=1
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ VAL_BATCH_SIZE=1
+ PROFILING_PREFIX=
+ LR=1.5
+ declare -a CMD
+ MAX_EPOCHS=7000
+ '[' -n 2 ']'
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ '[' 800 -gt 100 ']'
+ '[' '' = apiLog.sh ']'
+ cluster=
+ START_EVAL_AT=700
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ TARGET_DIR=
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' '' = apiLog.sh ']'
+ PROFILING_PREFIX=
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ declare -a CMD
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 6 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ PROFILING_PREFIX=
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ declare -a CMD
+ EVALUATE_EVERY=14
+ TARGET_DIR=
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ '[' -n 4 ']'
+ LR=1.5
+ MAX_EPOCHS=7000
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' -n 5 ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ TARGET_DIR=
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 7 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ PROFILING_PREFIX=
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ declare -a CMD
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 4 ']'
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ '[' '' = apiLog.sh ']'
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
running benchmark
+ echo 'running benchmark'
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ DATASET_DIR=/data
+ SEED=-1
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ '[' -n 6 ']'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ '[' '' = apiLog.sh ']'
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ '[' '' = apiLog.sh ']'
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 3 ']'
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:58 AM
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ LR_WARMUP_EPOCHS=1000
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ PROFILING_PREFIX=
+ declare -a CMD
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ '[' -n 7 ']'
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:59 AM
running benchmark
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 1 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
STARTING TIMING RUN AT 2021-05-19 10:33:59 AM
+ echo 'running benchmark'
running benchmark
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
STARTING TIMING RUN AT 2021-05-19 10:33:59 AM
+ MAX_EPOCHS=7000
STARTING TIMING RUN AT 2021-05-19 10:33:59 AM
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
running benchmark
+ DATASET_DIR=/data
+ TARGET_DIR=
+ SEED=-1
+ SEED=-1
+ OPTIMIZER=nag
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ PROFILING_PREFIX=
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ declare -a CMD
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ LR=1.5
+ MAX_EPOCHS=7000
+ MAX_EPOCHS=7000
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ LR_WARMUP_EPOCHS=1000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ PROFILING_PREFIX=
+ declare -a CMD
+ declare -a CMD
+ '[' -n 2 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' -n 6 ']'
+ '[' -n 4 ']'
+ '[' 800 -gt 100 ']'
STARTING TIMING RUN AT 2021-05-19 10:33:59 AM
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
running benchmark
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ echo 'running benchmark'
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ '[' '' = apiLog.sh ']'
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ declare -a CMD
+ '[' '' = apiLog.sh ']'
+ '[' '' = apiLog.sh ']'
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ '[' -n 0 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
STARTING TIMING RUN AT 2021-05-19 10:33:59 AM
+ '[' '' = apiLog.sh ']'
running benchmark
+ echo 'running benchmark'
+ DATASET_DIR=/data
+ SEED=-1
+ OPTIMIZER=nag
+ BATCH_SIZE=1
+ VAL_BATCH_SIZE=1
+ LR=1.5
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ MAX_EPOCHS=7000
+ LR_WARMUP_EPOCHS=1000
+ QUALITY_THRESHOLD=0.908
+ START_EVAL_AT=700
+ EVALUATE_EVERY=14
+ TARGET_DIR=
+ ASYNC_PARAMS=' --nodes_for_eval 20 -sgs 8 -ucl'
+ PROFILING_PREFIX=
+ declare -a CMD
+ '[' -n 5 ']'
+ '[' 800 -gt 100 ']'
+ cluster=
+ [[ DGXA100_static_100x8x1 == DGX2* ]]
+ [[ DGXA100_static_100x8x1 == DGXA100* ]]
+ cluster=selene
+ CMD=('./bind.sh' "--cluster=${cluster}" '--ib=single' '--cpu=exclusive' '--' ${PROFILING_PREFIX} 'python' '-u')
+ '[' '' = apiLog.sh ']'
+ ./bind.sh --cluster=selene --ib=single --cpu=exclusive -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=48-63,176-191 --membind=3 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=112-127,240-255 --membind=7 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=0-15,128-143 --membind=0 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=80-95,208-223 --membind=5 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=16-31,144-159 --membind=1 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
num_sockets = 2 num_nodes=8 cores_per_socket=64
+ exec numactl --physcpubind=64-79,192-207 --membind=4 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=96-111,224-239 --membind=6 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
+ exec numactl --physcpubind=32-47,160-175 --membind=2 -- python -u main.py --data_dir /data --epochs 7000 --quality_threshold 0.908 --batch_size 1 --evaluate_every 14 --start_eval_at 700 --lr_warmup_epochs 1000 --optimizer nag --learning_rate 1.5 --static_cast -sls 1024 -gpf 256 --loss_scale_inc_cycles 70 -ced --warmup --val_batch_size 1 --nodes_for_eval 20 -sgs 8 -ucl --num_workers 4 --input_batch_multiplier 4
:::MLLOG {"namespace": "", "time_ms": 1621445640782, "event_type": "POINT_IN_TIME", "key": "cache_clear", "value": true, "metadata": {"file": "main.py", "lineno": 30}}
:::MLLOG {"namespace": "", "time_ms": 1621445640824, "event_type": "INTERVAL_START", "key": "init_start", "value": null, "metadata": {"file": "main.py", "lineno": 31}}
:::MLLOG {"namespace": "", "time_ms": 1621445640825, "event_type": "POINT_IN_TIME", "key": "submission_benchmark", "value": "unet3d", "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 101}}
:::MLLOG {"namespace": "", "time_ms": 1621445640825, "event_type": "POINT_IN_TIME", "key": "submission_org", "value": "nvidia", "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 106}}
:::MLLOG {"namespace": "", "time_ms": 1621445640825, "event_type": "POINT_IN_TIME", "key": "submission_division", "value": "closed", "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 110}}
:::MLLOG {"namespace": "", "time_ms": 1621445640825, "event_type": "POINT_IN_TIME", "key": "submission_status", "value": "onprem", "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 114}}
:::MLLOG {"namespace": "", "time_ms": 1621445640825, "event_type": "POINT_IN_TIME", "key": "submission_platform", "value": "100xNVIDIA DGX A100", "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 118}}
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:05] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[10:34:06] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for GPU
[luna-0021:0:4071407 - context.c:581] INFO job (ID: 17873238248619054487) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071407 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x6 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071407 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x45 caps:0x16
[luna-0021:0:4071407 - comm.c:385] INFO [group#:0] group id:1 tree idx:0 tree_type:LLT rail_idx:0 group size:80 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0xb81600000001) mlid:c010
[luna-0021:0:4071407 - comm.c:385] INFO [group#:1] group id:1 tree idx:1 tree_type:SAT rail_idx:0 group size:80 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:4071406 - context.c:581] INFO job (ID: 17873238426781070915) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071406 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x8 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071406 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x47 caps:0x16
[luna-0021:0:4071406 - comm.c:385] INFO [group#:0] group id:2 tree idx:0 tree_type:LLT rail_idx:0 group size:80 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0xb91600000002) mlid:c011
[luna-0021:0:4071406 - comm.c:385] INFO [group#:1] group id:2 tree idx:1 tree_type:SAT rail_idx:0 group size:80 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:4071409 - context.c:581] INFO job (ID: 17873237867220643331) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071409 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xa caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071409 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x49 caps:0x16
[luna-0021:0:4071409 - comm.c:385] INFO [group#:0] group id:3 tree idx:0 tree_type:LLT rail_idx:0 group size:80 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0xba1600000003) mlid:c012
[luna-0021:0:4071409 - comm.c:385] INFO [group#:1] group id:3 tree idx:1 tree_type:SAT rail_idx:0 group size:80 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:4071402 - context.c:581] INFO job (ID: 17873238591623139215) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071402 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xb caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071402 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4a caps:0x16
[luna-0021:0:4071402 - comm.c:385] INFO [group#:0] group id:4 tree idx:0 tree_type:LLT rail_idx:0 group size:80 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0xbb1600000004) mlid:c013
[luna-0021:0:4071402 - comm.c:385] INFO [group#:1] group id:4 tree idx:1 tree_type:SAT rail_idx:0 group size:80 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:4071412 - context.c:581] INFO job (ID: 17873237945251224717) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071412 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xc caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071412 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4b caps:0x16
[luna-0021:0:4071412 - comm.c:385] INFO [group#:0] group id:5 tree idx:0 tree_type:LLT rail_idx:0 group size:80 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0xbc1600000005) mlid:c014
[luna-0021:0:4071412 - comm.c:385] INFO [group#:1] group id:5 tree idx:1 tree_type:SAT rail_idx:0 group size:80 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:4071415 - context.c:581] INFO job (ID: 17873238309964648627) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071415 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0xd caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071415 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4c caps:0x16
[luna-0021:0:4071415 - comm.c:385] INFO [group#:0] group id:6 tree idx:0 tree_type:LLT rail_idx:0 group size:80 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0xbd1600000006) mlid:c015
[luna-0021:0:4071415 - comm.c:385] INFO [group#:1] group id:6 tree idx:1 tree_type:SAT rail_idx:0 group size:80 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:4071405 - context.c:581] INFO job (ID: 17873237798813514854) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071405 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x10 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071405 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x4f caps:0x16
[luna-0021:0:4071405 - comm.c:385] INFO [group#:0] group id:7 tree idx:0 tree_type:LLT rail_idx:0 group size:80 quota: (osts:8 user_data_per_ost:1024) mgid: (subnet prefix:0xff12a01bfe800000 interface id:0xbe1600000007) mlid:c016
[luna-0021:0:4071405 - comm.c:385] INFO [group#:1] group id:7 tree idx:1 tree_type:SAT rail_idx:0 group size:80 quota: (osts:64 user_data_per_ost:0) mgid: (subnet prefix:0x0 interface id:0x0) mlid:0
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695288965836) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x16 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071400 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x55 caps:0x16
[luna-0021:0:4071400 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:69:753267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:66:3210501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:3246812 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:64:3258176 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:67:2782968 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1998967 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:52:734057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1814611 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:49:3570424 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:61:2698361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1792529 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:1562741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:55:3184401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:46:1135733 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:2501796 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:40:2878255 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:3019613 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:1333847 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:2509035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:3196840 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:2127089 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:54:877009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:60:24987 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:45:1120442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:1030110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:2324447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:42:1935240 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:48:1119522 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:1532009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:3311143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:2106478 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:1341317 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:53:790514 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2969179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:1634102 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:47:758192 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:2442199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:62:3350580 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:65:1271131 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:932557 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:44:2027852 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:548225 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3947062 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:41:1440918 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:324748 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:43:2084394 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:747865 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:2291247 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:2148897 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:1002504 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:70:755945 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:58:3311386 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:73:2393601 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:2372070 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:59:3300734 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2914368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:71:4012541 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:2534971 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:2592657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:2180628 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:50:1049082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1867429 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:1031820 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:72:2344297 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:57:3438459 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1849894 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2882228 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:51:1056170 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:78:3910903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:63:720242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:75:3352442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:76:3277194 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:77:3585316 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:68:2635447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:74:3679166 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:56:3793950 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:79:3831276 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2735074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:2016351 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696886155644) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x17 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071400 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x56 caps:0x16
[luna-0021:0:4071400 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1814611 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:55:3184401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:3019613 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:1333847 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:48:1119522 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:3311143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:1634102 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:62:3350580 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:65:1271131 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:932557 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:324748 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:1002504 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:73:2393601 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2914368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:2592657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:50:1049082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1867429 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:51:1056170 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:68:2635447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:79:3831276 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:69:753267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:66:3210501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:3246812 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:64:3258176 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:67:2782968 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1998967 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:52:734057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:49:3570424 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:61:2698361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1792529 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:1562741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:46:1135733 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:2501796 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:40:2878255 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:2509035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2735074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:3196840 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:2127089 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:54:877009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:60:24987 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:45:1120442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:1030110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:2324447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:42:1935240 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:1532009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:2106478 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:1341317 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:53:790514 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2969179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:47:758192 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:2016351 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:2442199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:44:2027852 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:548225 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3947062 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:41:1440918 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:43:2084394 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:747865 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:2291247 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:2148897 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:70:755945 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:58:3311386 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:2372070 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:59:3300734 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:71:4012541 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:2534971 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:2180628 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:1031820 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:72:2344297 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:57:3438459 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1849894 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2882228 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:78:3910903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:63:720242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:75:3352442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:76:3277194 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:77:3585316 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:74:3679166 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:56:3793950 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696202295728) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x1c caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071400 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x5b caps:0x16
[luna-0021:0:4071400 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1814611 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:62:3350580 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:324748 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:1002504 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2914368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:50:1049082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1867429 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1849894 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:69:753267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:3246812 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:64:3258176 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:52:734057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:49:3570424 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:61:2698361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1792529 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:55:3184401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:46:1135733 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:2501796 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:40:2878255 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:3019613 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:1333847 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:2509035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:3196840 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:54:877009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:1030110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:2324447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:42:1935240 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:48:1119522 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:1532009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:3311143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:2106478 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:1341317 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:53:790514 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:1634102 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:47:758192 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:2442199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:65:1271131 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:932557 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:44:2027852 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:548225 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:41:1440918 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:43:2084394 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:2291247 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:2148897 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:58:3311386 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:73:2393601 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:2372070 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:59:3300734 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:71:4012541 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:72:2344297 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:57:3438459 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2882228 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:51:1056170 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:78:3910903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:63:720242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:75:3352442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:76:3277194 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:68:2635447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:56:3793950 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:79:3831276 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:66:3210501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:67:2782968 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1998967 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:1562741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2735074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:2127089 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:60:24987 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:45:1120442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2969179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:2016351 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3947062 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:747865 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:70:755945 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:2534971 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:2592657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:2180628 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:1031820 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:77:3585316 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:74:3679166 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695167281900) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x28 caps:0x6 quota: ( osts:33 user_data_per_ost:1024 max_groups:33 max_qps:1 max_group_channels:1)
[luna-0021:0:4071400 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x67 caps:0x16
[luna-0021:0:4071400 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:1562741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:3196840 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:48:1119522 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:52:734057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1792529 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:55:3184401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:1333847 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:54:877009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:2106478 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:1634102 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:47:758192 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:62:3350580 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:65:1271131 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:932557 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:43:2084394 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:1002504 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:58:3311386 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2914368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:2180628 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:50:1049082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1867429 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:51:1056170 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:78:3910903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:63:720242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:68:2635447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:79:3831276 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:69:753267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:3246812 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:64:3258176 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:67:2782968 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1998967 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1814611 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:49:3570424 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:61:2698361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:46:1135733 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:2501796 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:40:2878255 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:3019613 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:2509035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2735074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:2127089 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:60:24987 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:45:1120442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:1030110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:2324447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:42:1935240 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:1532009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:3311143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:1341317 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:53:790514 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2969179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:2016351 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:2442199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:44:2027852 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:548225 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3947062 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:41:1440918 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:324748 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:747865 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:2291247 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:2148897 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:70:755945 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:73:2393601 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:2372070 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:59:3300734 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:71:4012541 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:2534971 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:2592657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:1031820 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:72:2344297 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:57:3438459 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1849894 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2882228 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:75:3352442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:76:3277194 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:77:3585316 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:74:3679166 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:56:3793950 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:66:3210501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696402665713) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x29 caps:0x6 quota: ( osts:28 user_data_per_ost:1024 max_groups:28 max_qps:1 max_group_channels:1)
[luna-0021:0:4071400 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x68 caps:0x16
[luna-0021:0:4071400 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:3246812 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1814611 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:1562741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:55:3184401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:3019613 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:42:1935240 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:48:1119522 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:3311143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:53:790514 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2969179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:47:758192 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:62:3350580 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:65:1271131 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:43:2084394 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:1002504 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:59:3300734 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2914368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:50:1049082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1867429 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1849894 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:51:1056170 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:78:3910903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:68:2635447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:74:3679166 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:79:3831276 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:69:753267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:66:3210501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:64:3258176 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:67:2782968 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1998967 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:52:734057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:49:3570424 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:61:2698361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1792529 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:46:1135733 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:2501796 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:40:2878255 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:1333847 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:2509035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2735074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:3196840 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:2127089 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:54:877009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:60:24987 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:45:1120442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:1030110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:2324447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:1532009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:2106478 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:1341317 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:1634102 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:2016351 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:2442199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:932557 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:44:2027852 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:548225 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3947062 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:41:1440918 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:324748 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:747865 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:2291247 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:2148897 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:70:755945 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:58:3311386 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:73:2393601 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:2372070 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:71:4012541 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:2534971 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:2592657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:2180628 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:1031820 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:72:2344297 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:57:3438459 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2882228 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:63:720242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:75:3352442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:76:3277194 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:77:3585316 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:56:3793950 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695450001735) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 - context.c:750] INFO tree_info: type:LLT tree idx:0 treeID:0x2d caps:0x6 quota: ( osts:10 user_data_per_ost:96 max_groups:10 max_qps:1 max_group_channels:1)
[luna-0021:0:4071400 - context.c:761] INFO tree_info: type:SAT tree idx:1 treeID:0x6c caps:0x16
[luna-0021:0:4071400 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0214:69:753267 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0040:19:1562741 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0188:55:3184401 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0081:24:1333847 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0181:48:1119522 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0078:21:2106478 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0180:47:758192 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0210:65:1271131 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0025:4:1002504 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0083:26:2914368 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0089:32:2534971 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0224:79:3831276 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0031:10:3246812 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0209:64:3258176 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0212:67:2782968 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0028:7:1998967 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0185:52:734057 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0182:49:3570424 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0206:61:2698361 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0088:31:1792529 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0179:46:1135733 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0034:13:2501796 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0173:40:2878255 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0082:25:3019613 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0036:15:2509035 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0093:36:3196840 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0096:39:2127089 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0187:54:877009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0205:60:24987 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0178:45:1120442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0027:6:1030110 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0090:33:2324447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0175:42:1935240 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0039:18:1532009 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0030:9:3311143 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0095:38:1341317 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0186:53:790514 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0032:11:2969179 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0038:17:1634102 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0029:8:2442199 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0207:62:3350580 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0026:5:932557 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0177:44:2027852 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0077:20:3947062 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0174:41:1440918 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0022:1:324748 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0176:43:2084394 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0079:22:747865 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0094:37:2148897 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0215:70:755945 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0191:58:3311386 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0085:28:2372070 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0192:59:3300734 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0216:71:4012541 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0035:14:2592657 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0092:35:2180628 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0183:50:1049082 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0086:29:1867429 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0024:3:1031820 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0217:72:2344297 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0190:57:3438459 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0087:30:1849894 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0084:27:2882228 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0184:51:1056170 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0223:78:3910903 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0208:63:720242 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0220:75:3352442 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0221:76:3277194 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0222:77:3585316 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0213:68:2635447 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0219:74:3679166 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0189:56:3793950 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0211:66:3210501 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0037:16:1814611 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0033:12:2735074 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0080:23:2016351 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0023:2:548225 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0091:34:2291247 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0218:73:2393601 - comm.c:364] ERROR Failed to lock SAT tree. ret:0x4
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695715304225) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696127725117) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695599368531) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695647161100) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695591518785) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695414346079) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695721764535) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696542925271) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696511720874) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696072212354) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695877526893) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696685024270) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696841209963) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695203020775) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696901934372) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696496498895) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238696570347723) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[luna-0021:0:4071400 - context.c:581] INFO job (ID: 17873238695114103520) resource request quota: ( osts:0 user_data_per_ost:0 max_groups:0 max_qps:1 max_group_channels:1, num_trees:1)
[luna-0021:0:4071400 unique id 13] ERROR Job error in sharp_get_job_data_len.

[luna-0021:0:4071400 - context.c:610] ERROR sharp_get_job_data_len failed: Job error(-35)
[luna-0021:0:4071400 - context.c:621] ERROR SHArP Job init error: No resource
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
Using random master seed: 1116265411. Worker seeds 640: [2593090257, 2342075910, 1643931392, 1247955987, 61224214, 218324616, 4144440313, 1009816668, 852809986, 1634983473, 1973969849, 3100256423, 368611164, 3004620886, 88481648, 3486591525, 4109827098, 4030973762, 4041164638, 1781329659, 2294161947, 3910027806, 3593196415, 850602746, 1665385373, 4070985154, 3646813853, 1541212436, 3050925283, 3089096167, 1712144476, 4277346615, 3646825900, 2425209127, 4070706358, 2380513140, 4141359660, 1409647356, 280932563, 3768860400, 654667459, 3097591064, 1058976856, 1176270959, 3402321042, 2868381309, 3099633254, 3081036666, 4168916943, 2599309362, 134939510, 588098511, 2373662656, 275521079, 91247687, 549459261, 1844457027, 3932499254, 2180322313, 2471070378, 2651282586, 2905177096, 3707812457, 767753632, 2885829151, 826364336, 3343398287, 3748429995, 2437123465, 781171228, 3072193016, 2604851647, 2462081458, 3786945023, 1994176274, 785548141, 1441308079, 1709404056, 3658644007, 3956719460, 1364678799, 83515621, 24997[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
78886, 2538026927, 3547196058, 642323644, 3946843137, 3203150263, 1592113236, 651529148, 3463425896, 3714515968, 1023539545, 2675612412, 2640200433, 2769694287, 3713527920, 3104644350, 3843197627, 4027920923, 2937121795, 1758779833, 1863008378, 4058421844, 2473320177, 1675928042, 1667706804, 3034439781, 1711636783, 2328079422, 2962312402, 999754975, 732473923, 3132287342, 3998631963, 1560601256, 4225514686, 3964040066, 4252089424, 997141010, 2395170802, 1860187502, 135399885, 2616284760, 860727555, 3788662507, 509733311, 949587384, 4145549980, 3977261986, 843782770, 3964994669, 1447659665, 3593336661, 4137867964, 205191724, 34369131, 3388588908, 2140725870, 2626552675, 3766696555, 1954626768, 3104157726, 2760853035, 1755298443, 886342929, 2956354266, 1293136399, 3687771249, 551971144, 1625712535, 1037696652, 1607285414, 3558138846, 1952008012, 2430246695, 1776330421, 1552110769, 1048378270, 2833058419, 139777306, 1541596150, 364494326, 4133066213, 1900827833, 4147732762, 2217142942, 246236769, 696650538, 1478[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
522080, 577213680, 2225307382, 2036862502, 1860522590, 3335177948, 1403822449, 19339024, 1962178386, 822697498, 145254134, 785869824, 767594404, 3730771925, 1328731451, 1505122035, 1517139280, 2649947633, 2829099111, 2270148138, 1933314943, 1618935723, 1498587667, 1774441268, 3503382342, 3900742681, 3978703414, 2157150305, 2376897011, 2890711127, 1100330565, 679012738, 1906681270, 3854508439, 3341042456, 1366864337, 3507360832, 1625030884, 2029733829, 3370516347, 133073910, 593979035, 154648619, 3006803242, 3046338134, 877185293, 3888205559, 606616775, 2359253535, 2522529049, 2031412081, 1846129229, 2048364360, 4125239681, 3543413872, 1632913735, 2425654852, 3117326337, 27217372, 3595011748, 1751982085, 984484541, 3072950609, 191752310, 3877462620, 1489600019, 3912362634, 1756717185, 1648675677, 3229630077, 3117108785, 2517058844, 2550968384, 907877114, 1609283950, 1708941606, 2601154480, 3143820849, 716695266, 2332879606, 3267196637, 2801763372, 1712240545, 844369930, 3748365640, 3454254058, 96351173, 383928[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
8813, 3501019900, 1940615868, 2960733020, 2206709587, 2353335605, 1315516088, 1091709993, 2275900985, 2735413564, 1176566551, 2560764410, 1437279600, 2356006654, 2204407844, 3843527741, 982533387, 1326065687, 723673381, 3751295253, 1800559852, 3039479185, 1976376098, 3695993766, 447964063, 2451048236, 2403945543, 1386113025, 1822524066, 2804163324, 2703198778, 2751622311, 124687837, 3860758816, 1061624117, 2432535321, 1251819102, 822279986, 1299912168, 3077745567, 3268408839, 1088820650, 1856912109, 3690308999, 317011948, 875317271, 1497326634, 1176916020, 334287437, 1861968389, 292616417, 1532956864, 2292739461, 3840522936, 4005510787, 1811327224, 1728422630, 3733399742, 1092208521, 271521373, 2234835571, 1558524654, 3625324479, 205277091, 1255381035, 3833013299, 3311911446, 1267079095, 2644742371, 3209037090, 4222219239, 1311771155, 4230305816, 2885298244, 1482077262, 2680014797, 1209107814, 2418236272, 2099123039, 2622627397, 2062666128, 2542180275, 401277389, 3708060708, 1516352256, 3247600774, 1798714370[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
, 2332388656, 3898380523, 2374501705, 3812348725, 3898148280, 2840550339, 2952750602, 1687358175, 3517097274, 1229650933, 3766400658, 1398415460, 1416484707, 4148378426, 2587409422, 1590377900, 2353587505, 1453496821, 1617367594, 1444277947, 4094205687, 873837401, 4149365611, 1754608431, 1438235960, 1027660985, 193783689, 599671524, 4172257105, 2169368861, 47024749, 1851783195, 3337966510, 181025068, 1144556822, 66171737, 2542816355, 3085866779, 3173559146, 4071361915, 3419234924, 3439600572, 1987823438, 59963199, 1510331694, 3449920276, 2864081004, 1071884329, 1591905115, 98632834, 3180087199, 3563585070, 3007326075, 294772745, 2580303174, 3669157688, 867065868, 1751943989, 2070050018, 1527715645, 2587306737, 3008474279, 3346125379, 3434546416, 1286608310, 2647128486, 3180919497, 2576508264, 2128417687, 1092480351, 1769494017, 2777892102, 2781908966, 146603988, 3741759952, 3248994285, 32367360, 1640087012, 623828030, 2247503420, 4191141981, 984063850, 624944470, 2327741887, 234138652, 3105362858, 2881881687,[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
 3848430839, 2836919006, 2896249799, 1471235290, 179136611, 3639070315, 93941640, 4272343778, 1659917556, 172850007, 2904161899, 632076227, 3535478681, 2943219988, 4228429733, 1474179317, 1292492047, 2105813388, 2672544551, 3421095057, 1180814477, 2003515216, 1183638683, 1056512490, 2161768231, 1094810501, 3513022594, 4225234113, 1153677608, 949578337, 3739479933, 746521600, 4111905474, 4090077246, 2460404667, 2853716675, 3067261338, 2064509576, 4111807365, 3407795097, 2749972539, 111725800, 2929890055, 2550254686, 1194829073, 2132163972, 2395213765, 220886828, 2200868399, 15449889, 1592521969, 2631577470, 3521736620, 752855307, 2640558494, 2483811269, 3966451359, 3125447642, 2441800518, 465781910, 3555291641, 1735114164, 4226152516, 1144094417, 3275083439, 3087766867, 3662004126, 265783575, 1682520887, 1167541230, 2035971973, 2556423953, 33199242, 1037714361, 1824325134, 813547281, 451879949, 3599892184, 4251292674, 4019772476, 2817476304, 3372764005, 100084314, 1980739489, 3715340678, 362368920, 1839342760,[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
 1896103170, 1852958769, 1719829459, 3227604995, 2712422742, 3533941999, 2499556805, 493432586, 2966076979, 3666045096, 4217954637, 2106631638, 2940366249, 1628239371, 1718401966, 3381481697, 4118899607, 4086162372, 1084028689, 2215721627, 132689170, 2141740286, 1748110684, 3397934704, 2202258789, 930269312, 1876728232, 157095504, 3470497392, 21828923, 1582105527, 3223477039, 1546082875, 2051496484, 1038951381, 2142528501, 3883738717, 761287587, 3048916076, 2686591303, 3842970768, 2962343692, 2257877944, 2189943230, 708274118, 2529375484, 3456817664, 1513958186, 379757829, 3760797234, 193599908, 2820367812, 1019313612, 561119901, 2231903314, 3655920002, 4133484881, 560175563, 1640367971, 2071042544, 2282729472, 4181942597, 1707967182, 4161096032, 3353797457, 2638221467, 648433581, 3832693162, 3721001869, 2893200116, 129083572, 522937438, 365479782, 1372029031, 3123394838, 2955891842, 4071360664, 624951121, 3494603319, 932579703, 1290773847, 1150696735, 1158029539, 1798286885, 976237818, 642093556, 1324748377,[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
 4108217584, 696032284, 1322361369, 2494880280, 1653693788, 2814725655, 198551949, 2530710538, 1617475482, 3724238577, 3634708414, 1402580742, 1781049259, 800553849, 3631499476, 3447526129, 3817498982, 3140678850, 524230800, 4201978241, 2921854674, 1148316208, 2305079209, 637842048, 4163115650, 2918841418, 118815047, 2579227059, 2574783464, 1631754461, 569160263, 313223673, 3347744696, 1475467406, 436349462, 1031892266]
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 9. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 14. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 11. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 12. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 13. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 8. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 10. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 15. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 18. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 20. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 16. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 23. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 21. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 22. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 19. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 17. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 29. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 24. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 25. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 26. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 30. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 27. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 28. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 31. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 32. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 36. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 37. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 34. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 35. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 33. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 38. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 39. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 42. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 40. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 44. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 43. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 41. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 45. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 47. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 48. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 51. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 49. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 50. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 53. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 54. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 55. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 52. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 60. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 62. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 56. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 61. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 58. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 59. SEED 2593090257
[10:39:29] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
RANK 63. SEED 2593090257
RANK 57. SEED 2593090257
RANK 66. SEED 2593090257
RANK 64. SEED 2593090257
RANK 69. SEED 2593090257
RANK 70. SEED 2593090257
RANK 71. SEED 2593090257
RANK 67. SEED 2593090257
RANK 65. SEED 2593090257
RANK 68. SEED 2593090257
RANK 72. SEED 2593090257
RANK 73. SEED 2593090257
RANK 77. SEED 2593090257
RANK 74. SEED 2593090257
RANK 76. SEED 2593090257
RANK 78. SEED 2593090257
RANK 79. SEED 2593090257
RANK 75. SEED 2593090257
RANK 85. SEED 2593090257
RANK 82. SEED 2593090257
RANK 84. SEED 2593090257
RANK 81. SEED 2593090257
RANK 86. SEED 2593090257
RANK 80. SEED 2593090257
RANK 83. SEED 2593090257
RANK 87. SEED 2593090257
RANK 92. SEED 2593090257
RANK 93. SEED 2593090257
RANK 90. SEED 2593090257
RANK 94. SEED 2593090257
RANK 91. SEED 2593090257
RANK 89. SEED 2593090257
RANK 95. SEED 2593090257
RANK 88. SEED 2593090257
RANK 100. SEED 2593090257
RANK 102. SEED 2593090257
RANK 103. SEED 2593090257
RANK 97. SEED 2593090257
RANK 98. SEED 2593090257
RANK 99. SEED 2593090257
RANK 96. SEED 2593090257
RANK 101. SEED 2593090257
RANK 109. SEED 2593090257
RANK 105. SEED 2593090257
RANK 106. SEED 2593090257
RANK 107. SEED 2593090257
RANK 108. SEED 2593090257
RANK 104. SEED 2593090257
RANK 110. SEED 2593090257
RANK 111. SEED 2593090257
RANK 118. SEED 2593090257
RANK 114. SEED 2593090257
RANK 117. SEED 2593090257
RANK 119. SEED 2593090257
RANK 116. SEED 2593090257
RANK 113. SEED 2593090257
RANK 112. SEED 2593090257
RANK 115. SEED 2593090257
RANK 122. SEED 2593090257
RANK 124. SEED 2593090257
RANK 121. SEED 2593090257
RANK 120. SEED 2593090257
RANK 127. SEED 2593090257
RANK 125. SEED 2593090257
RANK 126. SEED 2593090257
RANK 123. SEED 2593090257
RANK 135. SEED 2593090257
RANK 129. SEED 2593090257
RANK 130. SEED 2593090257
RANK 133. SEED 2593090257
RANK 128. SEED 2593090257
RANK 132. SEED 2593090257
RANK 134. SEED 2593090257
RANK 131. SEED 2593090257
RANK 136. SEED 2593090257
RANK 140. SEED 2593090257
RANK 142. SEED 2593090257
RANK 138. SEED 2593090257
RANK 143. SEED 2593090257
RANK 141. SEED 2593090257
RANK 137. SEED 2593090257
RANK 139. SEED 2593090257
RANK 148. SEED 2593090257
RANK 150. SEED 2593090257
RANK 147. SEED 2593090257
RANK 144. SEED 2593090257
RANK 145. SEED 2593090257
RANK 146. SEED 2593090257
RANK 149. SEED 2593090257
RANK 151. SEED 2593090257
RANK 154. SEED 2593090257
RANK 152. SEED 2593090257
RANK 157. SEED 2593090257
RANK 153. SEED 2593090257
RANK 155. SEED 2593090257
RANK 159. SEED 2593090257
RANK 156. SEED 2593090257
RANK 158. SEED 2593090257
RANK 164. SEED 2593090257
RANK 46. SEED 2593090257
RANK 165. SEED 2593090257
RANK 166. SEED 2593090257
RANK 160. SEED 2593090257
RANK 163. SEED 2593090257
RANK 161. SEED 2593090257
RANK 162. SEED 2593090257
RANK 167. SEED 2593090257
RANK 169. SEED 2593090257
RANK 170. SEED 2593090257
RANK 172. SEED 2593090257
RANK 173. SEED 2593090257
RANK 174. SEED 2593090257
RANK 175. SEED 2593090257
RANK 171. SEED 2593090257
RANK 168. SEED 2593090257
RANK 178. SEED 2593090257
RANK 176. SEED 2593090257
RANK 180. SEED 2593090257
RANK 181. SEED 2593090257
RANK 182. SEED 2593090257
RANK 183. SEED 2593090257
RANK 177. SEED 2593090257
RANK 179. SEED 2593090257
RANK 185. SEED 2593090257
RANK 186. SEED 2593090257
RANK 188. SEED 2593090257
RANK 189. SEED 2593090257
RANK 187. SEED 2593090257
RANK 190. SEED 2593090257
RANK 191. SEED 2593090257
RANK 184. SEED 2593090257
RANK 193. SEED 2593090257
RANK 194. SEED 2593090257
RANK 197. SEED 2593090257
RANK 199. SEED 2593090257
RANK 192. SEED 2593090257
RANK 195. SEED 2593090257
RANK 198. SEED 2593090257
RANK 196. SEED 2593090257
RANK 204. SEED 2593090257
RANK 206. SEED 2593090257
RANK 200. SEED 2593090257
RANK 201. SEED 2593090257
RANK 202. SEED 2593090257
RANK 205. SEED 2593090257
RANK 207. SEED 2593090257
RANK 203. SEED 2593090257
RANK 209. SEED 2593090257
RANK 210. SEED 2593090257
RANK 211. SEED 2593090257
RANK 208. SEED 2593090257
RANK 213. SEED 2593090257
RANK 212. SEED 2593090257
RANK 214. SEED 2593090257
RANK 215. SEED 2593090257
RANK 221. SEED 2593090257
RANK 216. SEED 2593090257
RANK 220. SEED 2593090257
RANK 223. SEED 2593090257
RANK 217. SEED 2593090257
RANK 218. SEED 2593090257
RANK 222. SEED 2593090257
RANK 219. SEED 2593090257
RANK 226. SEED 2593090257
RANK 225. SEED 2593090257
RANK 227. SEED 2593090257
RANK 229. SEED 2593090257
RANK 230. SEED 2593090257
RANK 224. SEED 2593090257
RANK 231. SEED 2593090257
RANK 228. SEED 2593090257
RANK 237. SEED 2593090257
RANK 234. SEED 2593090257
RANK 235. SEED 2593090257
RANK 238. SEED 2593090257
RANK 233. SEED 2593090257
RANK 239. SEED 2593090257
RANK 236. SEED 2593090257
RANK 232. SEED 2593090257
RANK 242. SEED 2593090257
RANK 240. SEED 2593090257
RANK 241. SEED 2593090257
RANK 243. SEED 2593090257
RANK 244. SEED 2593090257
RANK 246. SEED 2593090257
RANK 247. SEED 2593090257
RANK 245. SEED 2593090257
RANK 250. SEED 2593090257
RANK 253. SEED 2593090257
RANK 252. SEED 2593090257
RANK 249. SEED 2593090257
RANK 254. SEED 2593090257
RANK 255. SEED 2593090257
RANK 248. SEED 2593090257
RANK 251. SEED 2593090257
RANK 3. SEED 2593090257
RANK 4. SEED 2593090257
RANK 2. SEED 2593090257
RANK 6. SEED 2593090257
RANK 1. SEED 2593090257
RANK 5. SEED 2593090257
RANK 7. SEED 2593090257
RANK 0. SEED 2593090257
:::MLLOG {"namespace": "", "time_ms": 1621445969939, "event_type": "POINT_IN_TIME", "key": "seed", "value": 2593090257, "metadata": {"file": "main.py", "lineno": 57}}
:::MLLOG {"namespace": "", "time_ms": 1621445969939, "event_type": "POINT_IN_TIME", "key": "opt_name", "value": "nag", "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 124}}
:::MLLOG {"namespace": "", "time_ms": 1621445969939, "event_type": "POINT_IN_TIME", "key": "opt_base_learning_rate", "value": 1.5, "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 125}}
:::MLLOG {"namespace": "", "time_ms": 1621445969939, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_warmup_epochs", "value": 1000, "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 126}}
RANK 260. SEED 2593090257
:::MLLOG {"namespace": "", "time_ms": 1621445969939, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_boundary_epochs", "value": [], "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 128}}
:::MLLOG {"namespace": "", "time_ms": 1621445969939, "event_type": "POINT_IN_TIME", "key": "opt_learning_rate_decay_factor", "value": 1.0, "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 129}}
:::MLLOG {"namespace": "", "time_ms": 1621445969939, "event_type": "POINT_IN_TIME", "key": "opt_weight_decay", "value": 0.0, "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 130}}
:::MLLOG {"namespace": "", "time_ms": 1621445969940, "event_type": "POINT_IN_TIME", "key": "opt_momentum", "value": 0.9, "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 131}}
:::MLLOG {"namespace": "", "time_ms": 1621445969940, "event_type": "POINT_IN_TIME", "key": "oversampling", "value": 0.4, "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 132}}
:::MLLOG {"namespace": "", "time_ms": 1621445969940, "event_type": "POINT_IN_TIME", "key": "training_input_shape", "value": [128, 128, 128], "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 133}}
RANK 263. SEED 2593090257
:::MLLOG {"namespace": "", "time_ms": 1621445969940, "event_type": "POINT_IN_TIME", "key": "validation_input_shape", "value": [128, 128, 128], "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 134}}
RANK 256. SEED 2593090257
:::MLLOG {"namespace": "", "time_ms": 1621445969940, "event_type": "POINT_IN_TIME", "key": "validation_overlap", "value": 0.5, "metadata": {"file": "/workspace/unet3d/mlperf_logger.py", "lineno": 135}}
RANK 262. SEED 2593090257
RANK 258. SEED 2593090257
RANK 257. SEED 2593090257
RANK 259. SEED 2593090257
RANK 261. SEED 2593090257
RANK 268. SEED 2593090257
RANK 270. SEED 2593090257
RANK 264. SEED 2593090257
RANK 267. SEED 2593090257
RANK 265. SEED 2593090257
RANK 269. SEED 2593090257
RANK 271. SEED 2593090257
RANK 266. SEED 2593090257
RANK 276. SEED 2593090257
RANK 274. SEED 2593090257
RANK 278. SEED 2593090257
RANK 275. SEED 2593090257
RANK 277. SEED 2593090257
RANK 279. SEED 2593090257
RANK 272. SEED 2593090257
RANK 273. SEED 2593090257
RANK 280. SEED 2593090257
RANK 281. SEED 2593090257
RANK 285. SEED 2593090257
RANK 287. SEED 2593090257
RANK 284. SEED 2593090257
RANK 283. SEED 2593090257
RANK 286. SEED 2593090257
RANK 282. SEED 2593090257
RANK 292. SEED 2593090257
RANK 293. SEED 2593090257
RANK 290. SEED 2593090257
RANK 289. SEED 2593090257
RANK 291. SEED 2593090257
RANK 294. SEED 2593090257
RANK 295. SEED 2593090257
RANK 288. SEED 2593090257
RANK 298. SEED 2593090257
RANK 300. SEED 2593090257
RANK 301. SEED 2593090257
RANK 299. SEED 2593090257
RANK 302. SEED 2593090257
RANK 303. SEED 2593090257
RANK 296. SEED 2593090257
RANK 297. SEED 2593090257
RANK 305. SEED 2593090257
RANK 306. SEED 2593090257
RANK 304. SEED 2593090257
RANK 307. SEED 2593090257
RANK 311. SEED 2593090257
RANK 310. SEED 2593090257
RANK 308. SEED 2593090257
RANK 309. SEED 2593090257
RANK 312. SEED 2593090257
RANK 316. SEED 2593090257
RANK 315. SEED 2593090257
RANK 317. SEED 2593090257
RANK 318. SEED 2593090257
RANK 319. SEED 2593090257
RANK 314. SEED 2593090257
RANK 313. SEED 2593090257
RANK 326. SEED 2593090257
RANK 325. SEED 2593090257
RANK 320. SEED 2593090257
RANK 324. SEED 2593090257
RANK 327. SEED 2593090257
RANK 322. SEED 2593090257
RANK 323. SEED 2593090257
RANK 321. SEED 2593090257
RANK 334. SEED 2593090257
RANK 333. SEED 2593090257
RANK 329. SEED 2593090257
RANK 331. SEED 2593090257
RANK 335. SEED 2593090257
RANK 332. SEED 2593090257
RANK 328. SEED 2593090257
RANK 330. SEED 2593090257
RANK 340. SEED 2593090257
RANK 336. SEED 2593090257
RANK 337. SEED 2593090257
RANK 338. SEED 2593090257
RANK 341. SEED 2593090257
RANK 343. SEED 2593090257
RANK 342. SEED 2593090257
RANK 339. SEED 2593090257
RANK 350. SEED 2593090257
RANK 346. SEED 2593090257
RANK 351. SEED 2593090257
RANK 345. SEED 2593090257
RANK 349. SEED 2593090257
RANK 347. SEED 2593090257
RANK 344. SEED 2593090257
RANK 348. SEED 2593090257
RANK 353. SEED 2593090257
RANK 356. SEED 2593090257
RANK 358. SEED 2593090257
RANK 352. SEED 2593090257
RANK 357. SEED 2593090257
RANK 355. SEED 2593090257
RANK 354. SEED 2593090257
RANK 359. SEED 2593090257
RANK 361. SEED 2593090257
RANK 366. SEED 2593090257
RANK 360. SEED 2593090257
RANK 364. SEED 2593090257
RANK 367. SEED 2593090257
RANK 362. SEED 2593090257
RANK 363. SEED 2593090257
RANK 365. SEED 2593090257
RANK 368. SEED 2593090257
RANK 372. SEED 2593090257
RANK 374. SEED 2593090257
RANK 375. SEED 2593090257
RANK 371. SEED 2593090257
RANK 373. SEED 2593090257
RANK 370. SEED 2593090257
RANK 369. SEED 2593090257
RANK 382. SEED 2593090257
RANK 379. SEED 2593090257
RANK 380. SEED 2593090257
RANK 381. SEED 2593090257
RANK 383. SEED 2593090257
RANK 376. SEED 2593090257
RANK 378. SEED 2593090257
RANK 377. SEED 2593090257
RANK 386. SEED 2593090257
RANK 390. SEED 2593090257
RANK 385. SEED 2593090257
RANK 389. SEED 2593090257
RANK 388. SEED 2593090257
RANK 391. SEED 2593090257
RANK 387. SEED 2593090257
RANK 384. SEED 2593090257
RANK 397. SEED 2593090257
RANK 393. SEED 2593090257
RANK 395. SEED 2593090257
RANK 396. SEED 2593090257
RANK 399. SEED 2593090257
RANK 398. SEED 2593090257
RANK 394. SEED 2593090257
RANK 392. SEED 2593090257
RANK 400. SEED 2593090257
RANK 402. SEED 2593090257
RANK 401. SEED 2593090257
RANK 406. SEED 2593090257
RANK 407. SEED 2593090257
RANK 403. SEED 2593090257
RANK 405. SEED 2593090257
RANK 404. SEED 2593090257
RANK 408. SEED 2593090257
RANK 411. SEED 2593090257
RANK 413. SEED 2593090257
RANK 410. SEED 2593090257
RANK 414. SEED 2593090257
RANK 412. SEED 2593090257
RANK 415. SEED 2593090257
RANK 409. SEED 2593090257
RANK 419. SEED 2593090257
RANK 418. SEED 2593090257
RANK 421. SEED 2593090257
RANK 422. SEED 2593090257
RANK 423. SEED 2593090257
RANK 420. SEED 2593090257
RANK 416. SEED 2593090257
RANK 417. SEED 2593090257
RANK 428. SEED 2593090257
RANK 429. SEED 2593090257
RANK 426. SEED 2593090257
RANK 430. SEED 2593090257
RANK 431. SEED 2593090257
RANK 425. SEED 2593090257
RANK 427. SEED 2593090257
RANK 424. SEED 2593090257
RANK 433. SEED 2593090257
RANK 438. SEED 2593090257
RANK 439. SEED 2593090257
RANK 434. SEED 2593090257
RANK 436. SEED 2593090257
RANK 432. SEED 2593090257
RANK 435. SEED 2593090257
RANK 437. SEED 2593090257
RANK 442. SEED 2593090257
RANK 440. SEED 2593090257
RANK 441. SEED 2593090257
RANK 445. SEED 2593090257
RANK 447. SEED 2593090257
RANK 444. SEED 2593090257
RANK 446. SEED 2593090257
RANK 443. SEED 2593090257
RANK 449. SEED 2593090257
RANK 453. SEED 2593090257
RANK 448. SEED 2593090257
RANK 450. SEED 2593090257
RANK 451. SEED 2593090257
RANK 452. SEED 2593090257
RANK 454. SEED 2593090257
RANK 455. SEED 2593090257
RANK 458. SEED 2593090257
RANK 457. SEED 2593090257
RANK 459. SEED 2593090257
RANK 460. SEED 2593090257
RANK 462. SEED 2593090257
RANK 456. SEED 2593090257
RANK 463. SEED 2593090257
RANK 461. SEED 2593090257
RANK 464. SEED 2593090257
RANK 468. SEED 2593090257
RANK 466. SEED 2593090257
RANK 471. SEED 2593090257
RANK 465. SEED 2593090257
RANK 470. SEED 2593090257
RANK 467. SEED 2593090257
RANK 469. SEED 2593090257
RANK 475. SEED 2593090257
RANK 477. SEED 2593090257
RANK 473. SEED 2593090257
RANK 474. SEED 2593090257
RANK 479. SEED 2593090257
RANK 472. SEED 2593090257
RANK 478. SEED 2593090257
RANK 476. SEED 2593090257
RANK 482. SEED 2593090257
RANK 487. SEED 2593090257
RANK 483. SEED 2593090257
RANK 485. SEED 2593090257
RANK 484. SEED 2593090257
RANK 486. SEED 2593090257
RANK 481. SEED 2593090257
RANK 480. SEED 2593090257
RANK 490. SEED 2593090257
RANK 489. SEED 2593090257
RANK 492. SEED 2593090257
RANK 491. SEED 2593090257
RANK 493. SEED 2593090257
RANK 488. SEED 2593090257
RANK 494. SEED 2593090257
RANK 495. SEED 2593090257
RANK 501. SEED 2593090257
RANK 496. SEED 2593090257
RANK 497. SEED 2593090257
RANK 500. SEED 2593090257
RANK 502. SEED 2593090257
RANK 503. SEED 2593090257
RANK 499. SEED 2593090257
RANK 498. SEED 2593090257
RANK 506. SEED 2593090257
RANK 504. SEED 2593090257
RANK 505. SEED 2593090257
RANK 508. SEED 2593090257
RANK 510. SEED 2593090257
RANK 507. SEED 2593090257
RANK 511. SEED 2593090257
RANK 513. SEED 2593090257
RANK 512. SEED 2593090257
RANK 514. SEED 2593090257
RANK 515. SEED 2593090257
RANK 516. SEED 2593090257
RANK 517. SEED 2593090257
RANK 518. SEED 2593090257
RANK 519. SEED 2593090257
RANK 524. SEED 2593090257
RANK 521. SEED 2593090257
RANK 522. SEED 2593090257
RANK 526. SEED 2593090257
RANK 520. SEED 2593090257
RANK 523. SEED 2593090257
RANK 525. SEED 2593090257
RANK 527. SEED 2593090257
RANK 529. SEED 2593090257
RANK 534. SEED 2593090257
RANK 528. SEED 2593090257
RANK 531. SEED 2593090257
RANK 530. SEED 2593090257
RANK 532. SEED 2593090257
RANK 533. SEED 2593090257
RANK 535. SEED 2593090257
RANK 538. SEED 2593090257
RANK 537. SEED 2593090257
RANK 541. SEED 2593090257
RANK 542. SEED 2593090257
RANK 540. SEED 2593090257
RANK 539. SEED 2593090257
RANK 543. SEED 2593090257
RANK 536. SEED 2593090257
RANK 549. SEED 2593090257
RANK 550. SEED 2593090257
RANK 551. SEED 2593090257
RANK 545. SEED 2593090257
RANK 544. SEED 2593090257
RANK 548. SEED 2593090257
RANK 546. SEED 2593090257
RANK 547. SEED 2593090257
RANK 552. SEED 2593090257
RANK 556. SEED 2593090257
RANK 553. SEED 2593090257
RANK 554. SEED 2593090257
RANK 559. SEED 2593090257
RANK 555. SEED 2593090257
RANK 557. SEED 2593090257
RANK 558. SEED 2593090257
RANK 560. SEED 2593090257
RANK 561. SEED 2593090257
RANK 563. SEED 2593090257
RANK 565. SEED 2593090257
RANK 562. SEED 2593090257
RANK 564. SEED 2593090257
RANK 566. SEED 2593090257
RANK 567. SEED 2593090257
RANK 568. SEED 2593090257
RANK 569. SEED 2593090257
RANK 571. SEED 2593090257
RANK 573. SEED 2593090257
RANK 575. SEED 2593090257
RANK 570. SEED 2593090257
RANK 572. SEED 2593090257
RANK 574. SEED 2593090257
RANK 576. SEED 2593090257
RANK 577. SEED 2593090257
RANK 578. SEED 2593090257
RANK 581. SEED 2593090257
RANK 582. SEED 2593090257
RANK 580. SEED 2593090257
RANK 579. SEED 2593090257
RANK 583. SEED 2593090257
RANK 585. SEED 2593090257
RANK 586. SEED 2593090257
RANK 587. SEED 2593090257
RANK 584. SEED 2593090257
RANK 588. SEED 2593090257
RANK 589. SEED 2593090257
RANK 590. SEED 2593090257
RANK 591. SEED 2593090257
RANK 596. SEED 2593090257
RANK 598. SEED 2593090257
RANK 599. SEED 2593090257
RANK 594. SEED 2593090257
RANK 597. SEED 2593090257
RANK 593. SEED 2593090257
RANK 595. SEED 2593090257
RANK 592. SEED 2593090257
RANK 605. SEED 2593090257
RANK 600. SEED 2593090257
RANK 606. SEED 2593090257
RANK 602. SEED 2593090257
RANK 607. SEED 2593090257
RANK 601. SEED 2593090257
RANK 603. SEED 2593090257
RANK 604. SEED 2593090257
RANK 509. SEED 2593090257
RANK 608. SEED 2593090257
RANK 610. SEED 2593090257
RANK 611. SEED 2593090257
RANK 612. SEED 2593090257
RANK 614. SEED 2593090257
RANK 609. SEED 2593090257
RANK 615. SEED 2593090257
RANK 613. SEED 2593090257
RANK 617. SEED 2593090257
RANK 622. SEED 2593090257
RANK 619. SEED 2593090257
RANK 621. SEED 2593090257
RANK 618. SEED 2593090257
RANK 623. SEED 2593090257
RANK 616. SEED 2593090257
RANK 620. SEED 2593090257
RANK 625. SEED 2593090257
RANK 624. SEED 2593090257
RANK 628. SEED 2593090257
RANK 630. SEED 2593090257
RANK 631. SEED 2593090257
RANK 629. SEED 2593090257
RANK 626. SEED 2593090257
RANK 627. SEED 2593090257
RANK 637. SEED 2593090257
RANK 638. SEED 2593090257
RANK 633. SEED 2593090257
RANK 639. SEED 2593090257
RANK 635. SEED 2593090257
RANK 634. SEED 2593090257
RANK 636. SEED 2593090257
RANK 632. SEED 2593090257
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
[10:39:31] ../src/storage/storage.cc:199: Using Pooled (Naive) StorageManager for CPU
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
:::MLLOG {"namespace": "", "time_ms": 1621445990366, "event_type": "INTERVAL_END", "key": "init_stop", "value": null, "metadata": {"file": "main.py", "lineno": 99}}
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
MODEL WARMED UP
:::MLLOG {"namespace": "", "time_ms": 1621445990376, "event_type": "INTERVAL_START", "key": "run_start", "value": null, "metadata": {"file": "main.py", "lineno": 101}}
RANK 7, VAL CASES ['00171', '00012', '00138']
RANK 12, VAL CASES ['00066', '00065']
RANK 12, VAL CASES ['00066', '00065']
RANK 7, VAL CASES ['00171', '00012', '00138']
RANK 16, VAL CASES ['00185']
RANK 14, VAL CASES ['00034', '00076']
RANK 14, VAL CASES ['00034', '00076']
RANK 14, VAL CASES ['00034', '00076']
RANK 18, VAL CASES ['00176']
RANK 14, VAL CASES ['00034', '00076']
RANK 18, VAL CASES ['00176']
RANK 19, VAL CASES ['00125']
RANK 19, VAL CASES ['00125']
RANK 6, VAL CASES ['00006', '00080', '00041']
RANK 14, VAL CASES ['00034', '00076']
RANK 7, VAL CASES ['00171', '00012', '00138']
RANK 18, VAL CASES ['00176']
RANK 1, VAL CASES ['00000', '00003']
RANK 19, VAL CASES ['00125']
RANK 7, VAL CASES ['00171', '00012', '00138']
RANK 6, VAL CASES ['00006', '00080', '00041']
RANK 0, VAL CASES ['00052', '00157', '00187']
RANK 19, VAL CASES ['00125']
RANK 18, VAL CASES ['00176']
RANK 12, VAL CASES ['00066', '00065']
RANK 6, VAL CASES ['00006', '00080', '00041']
RANK 6, VAL CASES ['00006', '00080', '00041']
RANK 0, VAL CASES ['00052', '00157', '00187']
RANK 1, VAL CASES ['00000', '00003']
RANK 0, VAL CASES ['00052', '00157', '00187']
RANK 11, VAL CASES ['00128', '00061']
RANK 19, VAL CASES ['00125']
RANK 11, VAL CASES ['00128', '00061']
RANK 12, VAL CASES ['00066', '00065']
RANK 11, VAL CASES ['00128', '00061']
RANK 7, VAL CASES ['00171', '00012', '00138']
RANK 0, VAL CASES ['00052', '00157', '00187']
RANK 8, VAL CASES ['00189', '00056']
RANK 16, VAL CASES ['00185']
RANK 16, VAL CASES ['00185']
RANK 16, VAL CASES ['00185']
RANK 7, VAL CASES ['00171', '00012', '00138']
RANK 16, VAL CASES ['00185']
RANK 6, VAL CASES ['00006', '00080', '00041']
RANK 16, VAL CASES ['00185']
RANK 19, VAL CASES ['00125']
RANK 0, VAL CASES ['00052', '00157', '00187']
RANK 16, VAL CASES ['00185']
RANK 19, VAL CASES ['00125']
RANK 7, VAL CASES ['00171', '00012', '00138']
RANK 12, VAL CASES ['00066', '00065']
RANK 12, VAL CASES ['00066', '00065']
RANK 12, VAL CASES ['00066', '00065']
RANK 18, VAL CASES ['00176']
RANK 5, VAL CASES ['00092', '00049', '00087']
RANK 6, VAL CASES ['00006', '00080', '00041']
RANK 5, VAL CASES ['00092', '00049', '00087']
RANK 5, VAL CASES ['00092', '00049', '00087']
RANK 5, VAL CASES ['00092', '00049', '00087']
RANK 5, VAL CASES ['00092', '00049', '00087']
RANK 5, VAL CASES ['00092', '00049', '00087']
RANK 7, VAL CASES ['00171', '00012', '00138']
RANK 8, VAL CASES ['00189', '00056']
RANK 8, VAL CASES ['00189', '00056']
RANK 0, VAL CASES ['00052', '00157', '00187']
RANK 1, VAL CASES ['00000', '00003']
RANK 19, VAL CASES ['00125']
RANK 0, VAL CASES ['00052', '00157', '00187']
RANK 18, VAL CASES ['00176']
RANK 12, VAL CASES ['00066', '00065']
RANK 14, VAL CASES ['00034', '00076']
RANK 5, VAL CASES ['00092', '00049', '00087']
RANK 14, VAL CASES ['00034', '00076']
RANK 5, VAL CASES ['00092', '00049', '00087']
RANK 6, VAL CASES ['00006', '00080', '00041']
RANK 18, VAL CASES ['00176']
RANK 8, VAL CASES ['00189', '00056']
RANK 14, VAL CASES ['00034', '00076']
RANK 8, VAL CASES ['00189', '00056']
RANK 8, VAL CASES ['00189', '00056']
RANK 8, VAL CASES ['00189', '00056']
RANK 17, VAL CASES ['00084']
RANK 8, VAL CASES ['00189', '00056']
RANK 6, VAL CASES ['00006', '00080', '00041']
RANK 0, VAL CASES ['00052', '00157', '00187']
RANK 16, VAL CASES ['00185']
RANK 18, VAL CASES ['00176']
RANK 13, VAL CASES ['00044', '00070']
RANK 3, VAL CASES ['00086', '00078', '00160']
RANK 10, VAL CASES ['00207', '00162']
RANK 10, VAL CASES ['00207', '00162']
RANK 15, VAL CASES ['00005', '00024']
RANK 11, VAL CASES ['00128', '00061']
RANK 15, VAL CASES ['00005', '00024']
RANK 15, VAL CASES ['00005', '00024']
RANK 11, VAL CASES ['00128', '00061']
RANK 2, VAL CASES ['00169', '00206']
RANK 15, VAL CASES ['00005', '00024']
RANK 15, VAL CASES ['00005', '00024']
RANK 9, VAL CASES ['00198', '00203']
RANK 9, VAL CASES ['00198', '00203']
RANK 9, VAL CASES ['00198', '00203']
RANK 9, VAL CASES ['00198', '00203']
RANK 9, VAL CASES ['00198', '00203']
RANK 9, VAL CASES ['00198', '00203']
RANK 9, VAL CASES ['00198', '00203']
RANK 11, VAL CASES ['00128', '00061']
RANK 3, VAL CASES ['00086', '00078', '00160']
RANK 17, VAL CASES ['00084']
RANK 1, VAL CASES ['00000', '00003']
RANK 15, VAL CASES ['00005', '00024']
RANK 1, VAL CASES ['00000', '00003']
RANK 1, VAL CASES ['00000', '00003']
RANK 10, VAL CASES ['00207', '00162']
RANK 3, VAL CASES ['00086', '00078', '00160']
RANK 10, VAL CASES ['00207', '00162']
RANK 11, VAL CASES ['00128', '00061']
RANK 10, VAL CASES ['00207', '00162']
RANK 3, VAL CASES ['00086', '00078', '00160']
RANK 3, VAL CASES ['00086', '00078', '00160']
RANK 3, VAL CASES ['00086', '00078', '00160']
RANK 3, VAL CASES ['00086', '00078', '00160']
RANK 10, VAL CASES ['00207', '00162']
RANK 15, VAL CASES ['00005', '00024']
RANK 11, VAL CASES ['00128', '00061']
RANK 10, VAL CASES ['00207', '00162']
RANK 1, VAL CASES ['00000', '00003']
RANK 9, VAL CASES ['00198', '00203']
RANK 2, VAL CASES ['00169', '00206']
RANK 2, VAL CASES ['00169', '00206']
RANK 2, VAL CASES ['00169', '00206']
RANK 2, VAL CASES ['00169', '00206']
RANK 15, VAL CASES ['00005', '00024']
RANK 2, VAL CASES ['00169', '00206']
RANK 2, VAL CASES ['00169', '00206']
:::MLLOG {"namespace": "", "time_ms": 1621445990441, "event_type": "POINT_IN_TIME", "key": "train_samples", "value": 168, "metadata": {"file": "/workspace/unet3d/data_loading/data_loader.py", "lineno": 104}}
:::MLLOG {"namespace": "", "time_ms": 1621445990441, "event_type": "POINT_IN_TIME", "key": "eval_samples", "value": 42, "metadata": {"file": "/workspace/unet3d/data_loading/data_loader.py", "lineno": 105}}
RANK 2, VAL CASES ['00169', '00206']
RANK 13, VAL CASES ['00044', '00070']
RANK 13, VAL CASES ['00044', '00070']
RANK 17, VAL CASES ['00084']
RANK 13, VAL CASES ['00044', '00070']
RANK 13, VAL CASES ['00044', '00070']
RANK 13, VAL CASES ['00044', '00070']
RANK 13, VAL CASES ['00044', '00070']
RANK 1, VAL CASES ['00000', '00003']
RANK 4, VAL CASES ['00111', '00161', '00112']
RANK 3, VAL CASES ['00086', '00078', '00160']
RANK 4, VAL CASES ['00111', '00161', '00112']
RANK 4, VAL CASES ['00111', '00161', '00112']
RANK 4, VAL CASES ['00111', '00161', '00112']
RANK 4, VAL CASES ['00111', '00161', '00112']
RANK 4, VAL CASES ['00111', '00161', '00112']
RANK 4, VAL CASES ['00111', '00161', '00112']
RANK 10, VAL CASES ['00207', '00162']
RANK 4, VAL CASES ['00111', '00161', '00112']
RANK 13, VAL CASES ['00044', '00070']
RANK 17, VAL CASES ['00084']
RANK 17, VAL CASES ['00084']
RANK 17, VAL CASES ['00084']
RANK 17, VAL CASES ['00084']
RANK 17, VAL CASES ['00084']
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
EVALUATION TIME: 14.503 s.
EVAL WARMUP done at epoch 14, cycle 1. Score: 0.006580981891602278
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
:::MLLOG {"namespace": "", "time_ms": 1621446017578, "event_type": "POINT_IN_TIME", "key": "global_batch_size", "value": 80, "metadata": {"file": "main.py", "lineno": 107}}
:::MLLOG {"namespace": "", "time_ms": 1621446017579, "event_type": "POINT_IN_TIME", "key": "gradient_accumulation_steps", "value": 1, "metadata": {"file": "main.py", "lineno": 108}}
:::MLLOG {"namespace": "", "time_ms": 1621446017579, "event_type": "POINT_IN_TIME", "key": "samples_per_epoch", "value": 240, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 24}}
:::MLLOG {"namespace": "", "time_ms": 1621446017579, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1, "epoch_count": 14}}
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
/usr/local/lib/python3.8/dist-packages/nvidia/dali/pipeline.py:199: Warning: batch_size is deprecated, please use max_batch_size instead
  _show_deprecation_warning("batch_size", "max_batch_size")
:::MLLOG {"namespace": "", "time_ms": 1621446022371, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 701.2102272116626, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446022371, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.03089264900662252, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446022371, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 701.2102272116626, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1}}
:::MLLOG {"namespace": "", "time_ms": 1621446022372, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 14, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446022372, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 14, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446024909, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 1324.1552744940832, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446024910, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.05175218543046358, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446024910, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 1324.1552744940832, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446024910, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 28, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446024911, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 28, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446027538, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 1278.7107260776531, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446027539, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.07261172185430464, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446027539, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 1278.7107260776531, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 28}}
:::MLLOG {"namespace": "", "time_ms": 1621446027539, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 42, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446027539, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 42, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446029728, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 1535.111730501749, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446029729, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.0934712582781457, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446029729, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 1535.111730501749, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 42}}
:::MLLOG {"namespace": "", "time_ms": 1621446029729, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 56, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446029729, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 56, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446031107, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 2438.656861876495, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446031108, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.11433079470198675, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446031108, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 2438.656861876495, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 56}}
:::MLLOG {"namespace": "", "time_ms": 1621446031108, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 70, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446031108, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 70, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446032389, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 2623.3343050171275, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446032389, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.13519033112582782, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446032389, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 2623.3343050171275, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 70}}
:::MLLOG {"namespace": "", "time_ms": 1621446032390, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 84, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446032390, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 84, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446033674, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 2616.0419803407885, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446033675, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.15604986754966885, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446033675, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 2616.0419803407885, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 84}}
:::MLLOG {"namespace": "", "time_ms": 1621446033675, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 98, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446033675, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 98, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446035093, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 2369.2186897938846, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446035094, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.1769094039735099, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446035094, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 2369.2186897938846, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 98}}
:::MLLOG {"namespace": "", "time_ms": 1621446035094, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 112, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446035094, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 112, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446036243, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 2924.5679905967977, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446036244, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.197768940397351, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446036244, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 2924.5679905967977, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 112}}
:::MLLOG {"namespace": "", "time_ms": 1621446036244, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 126, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446036244, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 126, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446037356, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3023.729945841381, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446037357, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.21862847682119205, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446037357, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3023.729945841381, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 126}}
:::MLLOG {"namespace": "", "time_ms": 1621446037357, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 140, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446037358, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 140, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446038450, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3078.1757834103196, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446038450, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.2394880132450331, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446038450, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3078.1757834103196, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 140}}
:::MLLOG {"namespace": "", "time_ms": 1621446038450, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 154, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446038450, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 154, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446039788, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 2511.557491048267, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446039790, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.26034754966887413, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446039790, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 2511.557491048267, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 154}}
:::MLLOG {"namespace": "", "time_ms": 1621446039790, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 168, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446039791, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 168, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446040754, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3488.7370439786205, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446040755, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.2812070860927152, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446040755, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3488.7370439786205, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 168}}
:::MLLOG {"namespace": "", "time_ms": 1621446040755, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 182, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446040755, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 182, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446041820, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3156.454308122065, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446041821, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.3020666225165563, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446041821, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3156.454308122065, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 182}}
:::MLLOG {"namespace": "", "time_ms": 1621446041822, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 196, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446041822, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 196, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446042907, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3098.5729758158104, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446042907, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.32292615894039733, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446042907, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3098.5729758158104, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 196}}
:::MLLOG {"namespace": "", "time_ms": 1621446042908, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 210, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446042908, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 210, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446043937, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3264.2683003378725, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446043938, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.3437856953642384, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446043938, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3264.2683003378725, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 210}}
:::MLLOG {"namespace": "", "time_ms": 1621446043938, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 224, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446043939, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 224, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446044821, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3807.5087090222064, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446044822, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.36464523178807945, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446044822, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3807.5087090222064, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 224}}
:::MLLOG {"namespace": "", "time_ms": 1621446044823, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 238, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446044823, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 238, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446045834, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3321.7762072405203, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446045835, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.3855047682119205, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446045836, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3321.7762072405203, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 238}}
:::MLLOG {"namespace": "", "time_ms": 1621446045836, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 252, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446045836, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 252, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446046923, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3091.349234865445, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446046923, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.4063643046357616, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446046923, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3091.349234865445, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 252}}
:::MLLOG {"namespace": "", "time_ms": 1621446046923, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 266, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446046924, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 266, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446047911, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3402.392161359908, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446047912, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.42722384105960265, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446047912, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3402.392161359908, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 266}}
:::MLLOG {"namespace": "", "time_ms": 1621446047912, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 280, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446047912, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 280, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446048797, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3797.244455437781, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446048798, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.4480833774834437, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446048798, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3797.244455437781, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 280}}
:::MLLOG {"namespace": "", "time_ms": 1621446048798, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 294, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446048798, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 294, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446049891, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3075.9432246844417, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446049891, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.46894291390728476, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446049891, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3075.9432246844417, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 294}}
:::MLLOG {"namespace": "", "time_ms": 1621446049892, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 308, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446049892, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 308, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446050834, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3565.2920453967613, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446050835, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.4898024503311258, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446050835, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3565.2920453967613, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 308}}
:::MLLOG {"namespace": "", "time_ms": 1621446050835, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 322, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446050835, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 322, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446051740, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3714.14957577949, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446051741, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.5106619867549669, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446051742, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3714.14957577949, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 322}}
:::MLLOG {"namespace": "", "time_ms": 1621446051742, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 336, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446051743, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 336, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446052732, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3398.261292282763, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446052732, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.531521523178808, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446052732, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3398.261292282763, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 336}}
:::MLLOG {"namespace": "", "time_ms": 1621446052732, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 350, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446052732, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 350, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446053713, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3425.323052483086, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446053714, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.5523810596026489, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446053714, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3425.323052483086, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 350}}
:::MLLOG {"namespace": "", "time_ms": 1621446053714, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 364, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446053714, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 364, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446054645, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3610.760042613178, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446054645, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.5732405960264901, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446054645, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3610.760042613178, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 364}}
:::MLLOG {"namespace": "", "time_ms": 1621446054645, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 378, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446054646, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 378, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446055540, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3758.429130258999, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446055540, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.5941001324503311, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446055541, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3758.429130258999, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 378}}
:::MLLOG {"namespace": "", "time_ms": 1621446055541, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 392, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446055541, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 392, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446056430, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3780.353086786687, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446056430, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.6149596688741722, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446056430, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3780.353086786687, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 392}}
:::MLLOG {"namespace": "", "time_ms": 1621446056430, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 406, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446056430, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 406, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446057327, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3748.7255697358123, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446057327, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.6358192052980133, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446057328, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3748.7255697358123, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 406}}
:::MLLOG {"namespace": "", "time_ms": 1621446057328, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 420, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446057328, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 420, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446058218, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3773.1315586348483, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446058219, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.6566787417218543, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446058219, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3773.1315586348483, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 420}}
:::MLLOG {"namespace": "", "time_ms": 1621446058219, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 434, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446058219, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 434, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446059162, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3564.204603997118, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446059162, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.6775382781456953, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446059163, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3564.204603997118, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 434}}
:::MLLOG {"namespace": "", "time_ms": 1621446059163, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 448, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446059163, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 448, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446060116, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3525.0192886209516, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446060116, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.6983978145695363, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446060116, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3525.0192886209516, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 448}}
:::MLLOG {"namespace": "", "time_ms": 1621446060117, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 462, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446060117, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 462, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446060981, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3887.2998653926784, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446060982, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.7192573509933775, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446060982, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3887.2998653926784, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 462}}
:::MLLOG {"namespace": "", "time_ms": 1621446060982, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 476, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446060982, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 476, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446061806, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4079.334748990939, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446061807, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.7401168874172186, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446061807, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4079.334748990939, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 476}}
:::MLLOG {"namespace": "", "time_ms": 1621446061807, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 490, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446061807, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 490, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446062671, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3890.846892164807, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446062672, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.7609764238410596, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446062672, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3890.846892164807, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 490}}
:::MLLOG {"namespace": "", "time_ms": 1621446062672, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 504, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446062672, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 504, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446063535, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3894.0646609535843, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446063536, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.7818359602649007, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446063536, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3894.0646609535843, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 504}}
:::MLLOG {"namespace": "", "time_ms": 1621446063536, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 518, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446063536, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 518, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446064403, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3878.624377970474, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446064403, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.8026954966887417, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446064404, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3878.624377970474, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 518}}
:::MLLOG {"namespace": "", "time_ms": 1621446064404, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 532, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446064404, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 532, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446065299, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3752.6795162076714, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446065300, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.8235550331125828, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446065300, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3752.6795162076714, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 532}}
:::MLLOG {"namespace": "", "time_ms": 1621446065300, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 546, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446065300, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 546, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446066181, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3813.171803843081, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446066182, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.8444145695364238, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446066182, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3813.171803843081, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 546}}
:::MLLOG {"namespace": "", "time_ms": 1621446066182, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 560, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446066182, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 560, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446067043, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3903.579135021734, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446067043, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.8652741059602649, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446067044, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3903.579135021734, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 560}}
:::MLLOG {"namespace": "", "time_ms": 1621446067044, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 574, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446067044, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 574, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446067939, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3755.5045851023347, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446067940, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.886133642384106, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446067940, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3755.5045851023347, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 574}}
:::MLLOG {"namespace": "", "time_ms": 1621446067940, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 588, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446067940, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 588, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446068779, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4004.205534001134, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446068780, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.9069931788079469, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446068780, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4004.205534001134, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 588}}
:::MLLOG {"namespace": "", "time_ms": 1621446068780, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 602, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446068780, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 602, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446069696, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3668.04729024344, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446069697, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.9278527152317881, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446069697, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3668.04729024344, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 602}}
:::MLLOG {"namespace": "", "time_ms": 1621446069697, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 616, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446069697, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 616, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446070589, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3769.8936378239637, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446070589, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.9487122516556292, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446070589, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3769.8936378239637, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 616}}
:::MLLOG {"namespace": "", "time_ms": 1621446070589, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 630, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446070589, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 630, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446071416, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4063.7933416918786, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446071417, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.9695717880794702, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446071417, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4063.7933416918786, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 630}}
:::MLLOG {"namespace": "", "time_ms": 1621446071417, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 644, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446071417, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 644, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446072300, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3809.591907680081, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446072300, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 0.9904313245033113, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446072300, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3809.591907680081, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 644}}
:::MLLOG {"namespace": "", "time_ms": 1621446072300, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 658, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446072300, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 658, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446073230, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3613.928581319706, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446073231, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.0112908609271523, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446073231, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3613.928581319706, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 658}}
:::MLLOG {"namespace": "", "time_ms": 1621446073231, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 672, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446073231, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 672, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446074136, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3716.284712452511, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446074136, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.0321503973509933, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446074136, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3716.284712452511, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 672}}
:::MLLOG {"namespace": "", "time_ms": 1621446074136, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 686, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446074136, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 686, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446074961, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4073.49104476404, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446074962, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.0530099337748344, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446074962, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4073.49104476404, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 686}}
rank 0: cycle = 50: time to send the model = 0.04252290725708008
:::MLLOG {"namespace": "", "time_ms": 1621446075007, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 700, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446075007, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 700, "epoch_count": 14}}
rank 640: cycle = 50: time to receive the model = 0.05327486991882324
:::MLLOG {"namespace": "", "time_ms": 1621446075018, "event_type": "INTERVAL_START", "key": "eval_start", "value": 700, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 700}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.731 s.
:::MLLOG {"namespace": "", "time_ms": 1621446075790, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8713455200195312, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 700}}
:::MLLOG {"namespace": "", "time_ms": 1621446075790, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 700}}
:::MLLOG {"namespace": "", "time_ms": 1621446075823, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4119.619949411166, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446075825, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.0738694701986755, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446075825, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4119.619949411166, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 700}}
rank 0: cycle = 51: time to send the model = 0.040097951889038086
:::MLLOG {"namespace": "", "time_ms": 1621446075865, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 714, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446075865, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 714, "epoch_count": 14}}
rank 640: cycle = 51: time to receive the model = 0.05552172660827637
:::MLLOG {"namespace": "", "time_ms": 1621446075880, "event_type": "INTERVAL_START", "key": "eval_start", "value": 714, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 714}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.763 s.
:::MLLOG {"namespace": "", "time_ms": 1621446076644, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8845975995063782, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 714}}
:::MLLOG {"namespace": "", "time_ms": 1621446076645, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 714}}
:::MLLOG {"namespace": "", "time_ms": 1621446076715, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3952.8861822367726, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446076718, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.0947290066225166, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446076719, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3952.8861822367726, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 714}}
rank 0: cycle = 52: time to send the model = 0.03860282897949219
:::MLLOG {"namespace": "", "time_ms": 1621446076758, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 728, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446076758, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 728, "epoch_count": 14}}
rank 640: cycle = 52: time to receive the model = 0.053394317626953125
:::MLLOG {"namespace": "", "time_ms": 1621446076772, "event_type": "INTERVAL_START", "key": "eval_start", "value": 728, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 728}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.769 s.
:::MLLOG {"namespace": "", "time_ms": 1621446077543, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8772872686386108, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 728}}
:::MLLOG {"namespace": "", "time_ms": 1621446077543, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 728}}
:::MLLOG {"namespace": "", "time_ms": 1621446077593, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4026.7481338997636, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446077594, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.1155885430463577, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446077594, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4026.7481338997636, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 728}}
rank 0: cycle = 53: time to send the model = 0.038103342056274414
:::MLLOG {"namespace": "", "time_ms": 1621446077641, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 742, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446077641, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 742, "epoch_count": 14}}
rank 640: cycle = 53: time to receive the model = 0.05106782913208008
:::MLLOG {"namespace": "", "time_ms": 1621446077654, "event_type": "INTERVAL_START", "key": "eval_start", "value": 742, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 742}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.768 s.
:::MLLOG {"namespace": "", "time_ms": 1621446078424, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8901377320289612, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 742}}
:::MLLOG {"namespace": "", "time_ms": 1621446078424, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 742}}
:::MLLOG {"namespace": "", "time_ms": 1621446078430, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4259.649044750784, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446078433, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.1364480794701988, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446078434, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4259.649044750784, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 742}}
rank 0: cycle = 54: time to send the model = 0.04301190376281738
:::MLLOG {"namespace": "", "time_ms": 1621446078478, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 756, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446078478, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 756, "epoch_count": 14}}
rank 640: cycle = 54: time to receive the model = 0.055825233459472656
:::MLLOG {"namespace": "", "time_ms": 1621446078490, "event_type": "INTERVAL_START", "key": "eval_start", "value": 756, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 756}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.766 s.
:::MLLOG {"namespace": "", "time_ms": 1621446079258, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8882678747177124, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 756}}
:::MLLOG {"namespace": "", "time_ms": 1621446079259, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 756}}
:::MLLOG {"namespace": "", "time_ms": 1621446079329, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3949.951312510563, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446079330, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.1573076158940396, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446079330, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3949.951312510563, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 756}}
rank 0: cycle = 55: time to send the model = 0.03854727745056152
:::MLLOG {"namespace": "", "time_ms": 1621446079371, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 770, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446079372, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 770, "epoch_count": 14}}
rank 640: cycle = 55: time to receive the model = 0.05266594886779785
:::MLLOG {"namespace": "", "time_ms": 1621446079385, "event_type": "INTERVAL_START", "key": "eval_start", "value": 770, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 770}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.768 s.
:::MLLOG {"namespace": "", "time_ms": 1621446080155, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8610985279083252, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 770}}
:::MLLOG {"namespace": "", "time_ms": 1621446080155, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 770}}
:::MLLOG {"namespace": "", "time_ms": 1621446080208, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4017.207327905171, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446080211, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.1781671523178807, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446080212, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4017.207327905171, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 770}}
rank 0: cycle = 56: time to send the model = 0.040976524353027344
:::MLLOG {"namespace": "", "time_ms": 1621446080253, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 784, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446080254, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 784, "epoch_count": 14}}
rank 640: cycle = 56: time to receive the model = 0.057019710540771484
:::MLLOG {"namespace": "", "time_ms": 1621446080269, "event_type": "INTERVAL_START", "key": "eval_start", "value": 784, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 784}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.763 s.
:::MLLOG {"namespace": "", "time_ms": 1621446081033, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8950458765029907, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 784}}
:::MLLOG {"namespace": "", "time_ms": 1621446081034, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 784}}
:::MLLOG {"namespace": "", "time_ms": 1621446081035, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4301.202975254335, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446081037, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.1990266887417218, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446081037, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4301.202975254335, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 784}}
rank 0: cycle = 57: time to send the model = 0.04057765007019043
:::MLLOG {"namespace": "", "time_ms": 1621446081079, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 798, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446081079, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 798, "epoch_count": 14}}
rank 640: cycle = 57: time to receive the model = 0.055286407470703125
:::MLLOG {"namespace": "", "time_ms": 1621446081094, "event_type": "INTERVAL_START", "key": "eval_start", "value": 798, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 798}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.763 s.
:::MLLOG {"namespace": "", "time_ms": 1621446081858, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8859926462173462, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 798}}
:::MLLOG {"namespace": "", "time_ms": 1621446081858, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 798}}
:::MLLOG {"namespace": "", "time_ms": 1621446081887, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4161.369730986195, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446081889, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.2198862251655629, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446081889, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4161.369730986195, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 798}}
rank 0: cycle = 58: time to send the model = 0.04865384101867676
:::MLLOG {"namespace": "", "time_ms": 1621446081938, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 812, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446081939, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 812, "epoch_count": 14}}
rank 640: cycle = 58: time to receive the model = 0.05588364601135254
:::MLLOG {"namespace": "", "time_ms": 1621446081946, "event_type": "INTERVAL_START", "key": "eval_start", "value": 812, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 812}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446082714, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.888242244720459, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 812}}
:::MLLOG {"namespace": "", "time_ms": 1621446082715, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 812}}
:::MLLOG {"namespace": "", "time_ms": 1621446082752, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4132.665781847762, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446082753, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.240745761589404, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446082754, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4132.665781847762, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 812}}
rank 0: cycle = 59: time to send the model = 0.04077458381652832
:::MLLOG {"namespace": "", "time_ms": 1621446082797, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 826, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446082797, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 826, "epoch_count": 14}}
rank 640: cycle = 59: time to receive the model = 0.0563504695892334
:::MLLOG {"namespace": "", "time_ms": 1621446082812, "event_type": "INTERVAL_START", "key": "eval_start", "value": 826, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 826}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.763 s.
:::MLLOG {"namespace": "", "time_ms": 1621446083577, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8864036798477173, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 826}}
:::MLLOG {"namespace": "", "time_ms": 1621446083577, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 826}}
:::MLLOG {"namespace": "", "time_ms": 1621446083619, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4087.8317976861595, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446083621, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.261605298013245, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446083622, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4087.8317976861595, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 826}}
rank 0: cycle = 60: time to send the model = 0.03797435760498047
:::MLLOG {"namespace": "", "time_ms": 1621446083660, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 840, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446083660, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 840, "epoch_count": 14}}
rank 640: cycle = 60: time to receive the model = 0.05151200294494629
:::MLLOG {"namespace": "", "time_ms": 1621446083674, "event_type": "INTERVAL_START", "key": "eval_start", "value": 840, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 840}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.773 s.
:::MLLOG {"namespace": "", "time_ms": 1621446084448, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8907985687255859, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 840}}
:::MLLOG {"namespace": "", "time_ms": 1621446084449, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 840}}
:::MLLOG {"namespace": "", "time_ms": 1621446084494, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4033.238539514278, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446084495, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.2824648344370861, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446084495, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4033.238539514278, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 840}}
rank 0: cycle = 61: time to send the model = 0.03840065002441406
:::MLLOG {"namespace": "", "time_ms": 1621446084537, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 854, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446084538, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 854, "epoch_count": 14}}
rank 640: cycle = 61: time to receive the model = 0.052332162857055664
:::MLLOG {"namespace": "", "time_ms": 1621446084551, "event_type": "INTERVAL_START", "key": "eval_start", "value": 854, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 854}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446085318, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8889386653900146, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 854}}
:::MLLOG {"namespace": "", "time_ms": 1621446085319, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 854}}
:::MLLOG {"namespace": "", "time_ms": 1621446085335, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4216.044232850706, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446085337, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.3033243708609272, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446085338, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4216.044232850706, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 854}}
rank 0: cycle = 62: time to send the model = 0.043203115463256836
:::MLLOG {"namespace": "", "time_ms": 1621446085381, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 868, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446085382, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 868, "epoch_count": 14}}
rank 640: cycle = 62: time to receive the model = 0.05240035057067871
:::MLLOG {"namespace": "", "time_ms": 1621446085391, "event_type": "INTERVAL_START", "key": "eval_start", "value": 868, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 868}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.771 s.
:::MLLOG {"namespace": "", "time_ms": 1621446086163, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8770450353622437, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 868}}
:::MLLOG {"namespace": "", "time_ms": 1621446086163, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 868}}
:::MLLOG {"namespace": "", "time_ms": 1621446086184, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4187.848979207347, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446086186, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.3241839072847683, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446086186, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4187.848979207347, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 868}}
rank 0: cycle = 63: time to send the model = 0.03878188133239746
:::MLLOG {"namespace": "", "time_ms": 1621446086227, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 882, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446086228, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 882, "epoch_count": 14}}
rank 640: cycle = 63: time to receive the model = 0.0521092414855957
:::MLLOG {"namespace": "", "time_ms": 1621446086241, "event_type": "INTERVAL_START", "key": "eval_start", "value": 882, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 882}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446087007, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8840579986572266, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 882}}
:::MLLOG {"namespace": "", "time_ms": 1621446087007, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 882}}
:::MLLOG {"namespace": "", "time_ms": 1621446087025, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4216.701461602745, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446087027, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.3450434437086094, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446087028, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4216.701461602745, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 882}}
rank 0: cycle = 64: time to send the model = 0.04310917854309082
:::MLLOG {"namespace": "", "time_ms": 1621446087071, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 896, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446087072, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 896, "epoch_count": 14}}
rank 640: cycle = 64: time to receive the model = 0.05779862403869629
:::MLLOG {"namespace": "", "time_ms": 1621446087086, "event_type": "INTERVAL_START", "key": "eval_start", "value": 896, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 896}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.766 s.
:::MLLOG {"namespace": "", "time_ms": 1621446087853, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8870959877967834, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 896}}
:::MLLOG {"namespace": "", "time_ms": 1621446087853, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 896}}
:::MLLOG {"namespace": "", "time_ms": 1621446087870, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4207.003893002, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446087872, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.3659029801324505, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446087872, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4207.003893002, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 896}}
rank 0: cycle = 65: time to send the model = 0.038327693939208984
:::MLLOG {"namespace": "", "time_ms": 1621446087911, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 910, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446087911, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 910, "epoch_count": 14}}
rank 640: cycle = 65: time to receive the model = 0.052712202072143555
:::MLLOG {"namespace": "", "time_ms": 1621446087926, "event_type": "INTERVAL_START", "key": "eval_start", "value": 910, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 910}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446088693, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8850911855697632, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 910}}
:::MLLOG {"namespace": "", "time_ms": 1621446088694, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 910}}
:::MLLOG {"namespace": "", "time_ms": 1621446088725, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4129.727839087601, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446088728, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.3867625165562913, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446088728, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4129.727839087601, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 910}}
rank 0: cycle = 66: time to send the model = 0.048079729080200195
:::MLLOG {"namespace": "", "time_ms": 1621446088777, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 924, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446088777, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 924, "epoch_count": 14}}
rank 640: cycle = 66: time to receive the model = 0.06110978126525879
:::MLLOG {"namespace": "", "time_ms": 1621446088790, "event_type": "INTERVAL_START", "key": "eval_start", "value": 924, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 924}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.769 s.
:::MLLOG {"namespace": "", "time_ms": 1621446089560, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8887754082679749, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 924}}
:::MLLOG {"namespace": "", "time_ms": 1621446089561, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 924}}
:::MLLOG {"namespace": "", "time_ms": 1621446089567, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4254.157206434457, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446089569, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.4076220529801324, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446089569, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4254.157206434457, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 924}}
rank 0: cycle = 67: time to send the model = 0.03740549087524414
:::MLLOG {"namespace": "", "time_ms": 1621446089608, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 938, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446089608, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 938, "epoch_count": 14}}
rank 640: cycle = 67: time to receive the model = 0.05148196220397949
:::MLLOG {"namespace": "", "time_ms": 1621446089622, "event_type": "INTERVAL_START", "key": "eval_start", "value": 938, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 938}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.771 s.
:::MLLOG {"namespace": "", "time_ms": 1621446090394, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8920778036117554, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 938}}
:::MLLOG {"namespace": "", "time_ms": 1621446090395, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 938}}
:::MLLOG {"namespace": "", "time_ms": 1621446090395, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4269.109987991968, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446090398, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.4284815894039735, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446090398, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4269.109987991968, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 938}}
rank 0: cycle = 68: time to send the model = 0.04262995719909668
:::MLLOG {"namespace": "", "time_ms": 1621446090441, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 952, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446090442, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 952, "epoch_count": 14}}
rank 640: cycle = 68: time to receive the model = 0.05839133262634277
:::MLLOG {"namespace": "", "time_ms": 1621446090457, "event_type": "INTERVAL_START", "key": "eval_start", "value": 952, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 952}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.763 s.
:::MLLOG {"namespace": "", "time_ms": 1621446091221, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8784434795379639, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 952}}
:::MLLOG {"namespace": "", "time_ms": 1621446091221, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 952}}
:::MLLOG {"namespace": "", "time_ms": 1621446091303, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3902.085416999504, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446091304, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.4493411258278146, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446091305, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3902.085416999504, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 952}}
rank 0: cycle = 69: time to send the model = 0.04631328582763672
:::MLLOG {"namespace": "", "time_ms": 1621446091351, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 966, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446091351, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 966, "epoch_count": 14}}
rank 640: cycle = 69: time to receive the model = 0.06407499313354492
:::MLLOG {"namespace": "", "time_ms": 1621446091369, "event_type": "INTERVAL_START", "key": "eval_start", "value": 966, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 966}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446092135, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8878422975540161, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 966}}
:::MLLOG {"namespace": "", "time_ms": 1621446092135, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 966}}
:::MLLOG {"namespace": "", "time_ms": 1621446092138, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4273.8666060137375, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446092140, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.4702006622516555, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446092141, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4273.8666060137375, "iterations": 3, "loss_scale": 1024.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 966}}
rank 0: cycle = 70: time to send the model = 0.04951763153076172
:::MLLOG {"namespace": "", "time_ms": 1621446092190, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 980, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446092191, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 980, "epoch_count": 14}}
rank 640: cycle = 70: time to receive the model = 0.05913424491882324
:::MLLOG {"namespace": "", "time_ms": 1621446092200, "event_type": "INTERVAL_START", "key": "eval_start", "value": 980, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 980}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.768 s.
:::MLLOG {"namespace": "", "time_ms": 1621446092969, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8737170696258545, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 980}}
:::MLLOG {"namespace": "", "time_ms": 1621446092970, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 980}}
:::MLLOG {"namespace": "", "time_ms": 1621446092975, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4287.9210574197, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446092976, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.4910601986754968, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446092976, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4287.9210574197, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 980}}
rank 0: cycle = 71: time to send the model = 0.03890061378479004
:::MLLOG {"namespace": "", "time_ms": 1621446093015, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 994, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446093016, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 994, "epoch_count": 14}}
rank 640: cycle = 71: time to receive the model = 0.052004098892211914
:::MLLOG {"namespace": "", "time_ms": 1621446093028, "event_type": "INTERVAL_START", "key": "eval_start", "value": 994, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 994}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446093794, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8852728605270386, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 994}}
:::MLLOG {"namespace": "", "time_ms": 1621446093795, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 994}}
:::MLLOG {"namespace": "", "time_ms": 1621446093817, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4192.998679577727, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446093820, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446093820, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4192.998679577727, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 994}}
rank 0: cycle = 72: time to send the model = 0.03896474838256836
:::MLLOG {"namespace": "", "time_ms": 1621446093860, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1008, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446093860, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1008, "epoch_count": 14}}
rank 640: cycle = 72: time to receive the model = 0.054923057556152344
:::MLLOG {"namespace": "", "time_ms": 1621446093876, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1008, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1008}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446094644, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8720160126686096, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1008}}
:::MLLOG {"namespace": "", "time_ms": 1621446094644, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1008}}
:::MLLOG {"namespace": "", "time_ms": 1621446094687, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4062.149931211125, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446094689, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446094689, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4062.149931211125, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1008}}
rank 0: cycle = 73: time to send the model = 0.03717923164367676
:::MLLOG {"namespace": "", "time_ms": 1621446094726, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1022, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446094727, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1022, "epoch_count": 14}}
rank 640: cycle = 73: time to receive the model = 0.05256938934326172
:::MLLOG {"namespace": "", "time_ms": 1621446094742, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1022, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1022}}
EVALUATION FROM CACHE
:::MLLOG {"namespace": "", "time_ms": 1621446095508, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4300.56901240656, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446095510, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446095510, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4300.56901240656, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1022}}
EVALUATION TIME: 0.769 s.
:::MLLOG {"namespace": "", "time_ms": 1621446095513, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8789947628974915, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1022}}
:::MLLOG {"namespace": "", "time_ms": 1621446095514, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1022}}
rank 0: cycle = 74: time to send the model = 0.04264545440673828
:::MLLOG {"namespace": "", "time_ms": 1621446095557, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1036, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446095558, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1036, "epoch_count": 14}}
rank 640: cycle = 74: time to receive the model = 0.05081629753112793
:::MLLOG {"namespace": "", "time_ms": 1621446095565, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1036, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1036}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.773 s.
:::MLLOG {"namespace": "", "time_ms": 1621446096339, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8371724486351013, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1036}}
:::MLLOG {"namespace": "", "time_ms": 1621446096340, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1036}}
:::MLLOG {"namespace": "", "time_ms": 1621446096369, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4144.948275136919, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446096371, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446096371, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4144.948275136919, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1036}}
rank 0: cycle = 75: time to send the model = 0.03811955451965332
:::MLLOG {"namespace": "", "time_ms": 1621446096411, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1050, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446096411, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1050, "epoch_count": 14}}
rank 640: cycle = 75: time to receive the model = 0.05230593681335449
:::MLLOG {"namespace": "", "time_ms": 1621446096425, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1050, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1050}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.762 s.
:::MLLOG {"namespace": "", "time_ms": 1621446097189, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8819041848182678, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1050}}
:::MLLOG {"namespace": "", "time_ms": 1621446097190, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1050}}
:::MLLOG {"namespace": "", "time_ms": 1621446097228, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4115.547607129987, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446097230, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446097231, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4115.547607129987, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1050}}
rank 0: cycle = 76: time to send the model = 0.042490482330322266
:::MLLOG {"namespace": "", "time_ms": 1621446097274, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1064, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446097274, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1064, "epoch_count": 14}}
rank 640: cycle = 76: time to receive the model = 0.05901932716369629
:::MLLOG {"namespace": "", "time_ms": 1621446097290, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1064, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1064}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.761 s.
:::MLLOG {"namespace": "", "time_ms": 1621446098052, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8802221417427063, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1064}}
:::MLLOG {"namespace": "", "time_ms": 1621446098053, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1064}}
:::MLLOG {"namespace": "", "time_ms": 1621446098061, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4271.173685698777, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446098062, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446098062, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4271.173685698777, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1064}}
rank 0: cycle = 77: time to send the model = 0.03855323791503906
:::MLLOG {"namespace": "", "time_ms": 1621446098103, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1078, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446098103, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1078, "epoch_count": 14}}
rank 640: cycle = 77: time to receive the model = 0.0533294677734375
:::MLLOG {"namespace": "", "time_ms": 1621446098118, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1078, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1078}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446098883, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8886921405792236, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1078}}
:::MLLOG {"namespace": "", "time_ms": 1621446098883, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1078}}
:::MLLOG {"namespace": "", "time_ms": 1621446098941, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4011.3300452229037, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446098943, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446098943, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4011.3300452229037, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1078}}
rank 0: cycle = 78: time to send the model = 0.04982590675354004
:::MLLOG {"namespace": "", "time_ms": 1621446098993, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1092, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446098994, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1092, "epoch_count": 14}}
rank 640: cycle = 78: time to receive the model = 0.05814337730407715
:::MLLOG {"namespace": "", "time_ms": 1621446099002, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1092, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1092}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.77 s.
:::MLLOG {"namespace": "", "time_ms": 1621446099773, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8914409875869751, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1092}}
:::MLLOG {"namespace": "", "time_ms": 1621446099773, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1092}}
:::MLLOG {"namespace": "", "time_ms": 1621446099810, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4114.272822206373, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446099812, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446099812, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4114.272822206373, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1092}}
rank 0: cycle = 79: time to send the model = 0.038407325744628906
:::MLLOG {"namespace": "", "time_ms": 1621446099853, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1106, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446099853, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1106, "epoch_count": 14}}
rank 640: cycle = 79: time to receive the model = 0.053132057189941406
:::MLLOG {"namespace": "", "time_ms": 1621446099867, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1106, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1106}}
EVALUATION FROM CACHE
:::MLLOG {"namespace": "", "time_ms": 1621446100635, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4296.987944349907, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446100637, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446100637, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4296.987944349907, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1106}}
EVALUATION TIME: 0.77 s.
:::MLLOG {"namespace": "", "time_ms": 1621446100639, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8880959749221802, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1106}}
:::MLLOG {"namespace": "", "time_ms": 1621446100640, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1106}}
rank 0: cycle = 80: time to send the model = 0.042690277099609375
:::MLLOG {"namespace": "", "time_ms": 1621446100683, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1120, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446100684, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1120, "epoch_count": 14}}
rank 640: cycle = 80: time to receive the model = 0.0581517219543457
:::MLLOG {"namespace": "", "time_ms": 1621446100698, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1120, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1120}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.763 s.
:::MLLOG {"namespace": "", "time_ms": 1621446101463, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.888117790222168, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1120}}
:::MLLOG {"namespace": "", "time_ms": 1621446101463, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1120}}
:::MLLOG {"namespace": "", "time_ms": 1621446101475, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4253.412509012898, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446101476, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446101476, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4253.412509012898, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1120}}
rank 0: cycle = 81: time to send the model = 0.03947186470031738
:::MLLOG {"namespace": "", "time_ms": 1621446101519, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1134, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446101519, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1134, "epoch_count": 14}}
rank 640: cycle = 81: time to receive the model = 0.05444455146789551
:::MLLOG {"namespace": "", "time_ms": 1621446101534, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1134, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1134}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.766 s.
:::MLLOG {"namespace": "", "time_ms": 1621446102301, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8989841341972351, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1134}}
:::MLLOG {"namespace": "", "time_ms": 1621446102302, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1134}}
:::MLLOG {"namespace": "", "time_ms": 1621446102365, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3971.8810267186523, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446102367, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446102367, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3971.8810267186523, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1134}}
rank 0: cycle = 82: time to send the model = 0.04965472221374512
:::MLLOG {"namespace": "", "time_ms": 1621446102417, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1148, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446102417, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1148, "epoch_count": 14}}
rank 640: cycle = 82: time to receive the model = 0.05856466293334961
:::MLLOG {"namespace": "", "time_ms": 1621446102426, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1148, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1148}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.766 s.
:::MLLOG {"namespace": "", "time_ms": 1621446103193, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8735445737838745, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1621446103193, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1148}}
:::MLLOG {"namespace": "", "time_ms": 1621446103205, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4263.713706039569, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446103207, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446103207, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4263.713706039569, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1148}}
rank 0: cycle = 83: time to send the model = 0.03829526901245117
:::MLLOG {"namespace": "", "time_ms": 1621446103249, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1162, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446103249, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1162, "epoch_count": 14}}
rank 640: cycle = 83: time to receive the model = 0.052320003509521484
:::MLLOG {"namespace": "", "time_ms": 1621446103263, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1162, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1162}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.772 s.
:::MLLOG {"namespace": "", "time_ms": 1621446104036, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8944493532180786, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1621446104036, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1162}}
:::MLLOG {"namespace": "", "time_ms": 1621446104040, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4247.383654660474, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446104042, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446104043, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4247.383654660474, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1162}}
rank 0: cycle = 84: time to send the model = 0.0397188663482666
:::MLLOG {"namespace": "", "time_ms": 1621446104083, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1176, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446104083, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1176, "epoch_count": 14}}
rank 640: cycle = 84: time to receive the model = 0.055217742919921875
:::MLLOG {"namespace": "", "time_ms": 1621446104098, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1176, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1176}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446104867, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8945249915122986, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1176}}
:::MLLOG {"namespace": "", "time_ms": 1621446104867, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1176}}
:::MLLOG {"namespace": "", "time_ms": 1621446104870, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4266.796362242553, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446104872, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446104872, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4266.796362242553, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1176}}
rank 0: cycle = 85: time to send the model = 0.03798341751098633
:::MLLOG {"namespace": "", "time_ms": 1621446104913, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1190, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446104913, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1190, "epoch_count": 14}}
rank 640: cycle = 85: time to receive the model = 0.05316638946533203
:::MLLOG {"namespace": "", "time_ms": 1621446104928, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1190, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1190}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.77 s.
:::MLLOG {"namespace": "", "time_ms": 1621446105700, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8783183097839355, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1190}}
:::MLLOG {"namespace": "", "time_ms": 1621446105700, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1190}}
:::MLLOG {"namespace": "", "time_ms": 1621446105733, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4098.981931202858, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446105735, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446105736, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4098.981931202858, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1190}}
rank 0: cycle = 86: time to send the model = 0.046788692474365234
:::MLLOG {"namespace": "", "time_ms": 1621446105783, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1204, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446105783, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1204, "epoch_count": 14}}
rank 640: cycle = 86: time to receive the model = 0.05390620231628418
:::MLLOG {"namespace": "", "time_ms": 1621446105790, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1204, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1204}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.768 s.
:::MLLOG {"namespace": "", "time_ms": 1621446106560, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8943957090377808, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1204}}
:::MLLOG {"namespace": "", "time_ms": 1621446106560, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1204}}
:::MLLOG {"namespace": "", "time_ms": 1621446106566, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4295.37441567795, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446106567, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446106568, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4295.37441567795, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1204}}
rank 0: cycle = 87: time to send the model = 0.03851604461669922
:::MLLOG {"namespace": "", "time_ms": 1621446106609, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1218, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446106609, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1218, "epoch_count": 14}}
rank 640: cycle = 87: time to receive the model = 0.05267071723937988
:::MLLOG {"namespace": "", "time_ms": 1621446106623, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1218, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1218}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446107388, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8847280740737915, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1218}}
:::MLLOG {"namespace": "", "time_ms": 1621446107389, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1218}}
:::MLLOG {"namespace": "", "time_ms": 1621446107415, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4170.029710977083, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446107417, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446107417, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4170.029710977083, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1218}}
rank 0: cycle = 88: time to send the model = 0.04274773597717285
:::MLLOG {"namespace": "", "time_ms": 1621446107460, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1232, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446107461, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1232, "epoch_count": 14}}
rank 640: cycle = 88: time to receive the model = 0.058307647705078125
:::MLLOG {"namespace": "", "time_ms": 1621446107476, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1232, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1232}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446108241, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8801038265228271, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1232}}
:::MLLOG {"namespace": "", "time_ms": 1621446108242, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1232}}
:::MLLOG {"namespace": "", "time_ms": 1621446108295, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4028.4850797658178, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446108296, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446108296, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4028.4850797658178, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1232}}
rank 0: cycle = 89: time to send the model = 0.04410910606384277
:::MLLOG {"namespace": "", "time_ms": 1621446108343, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1246, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446108343, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1246, "epoch_count": 14}}
rank 640: cycle = 89: time to receive the model = 0.06125164031982422
:::MLLOG {"namespace": "", "time_ms": 1621446108360, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1246, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1246}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446109126, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8339570760726929, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1246}}
:::MLLOG {"namespace": "", "time_ms": 1621446109126, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1246}}
:::MLLOG {"namespace": "", "time_ms": 1621446109153, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4150.078490938528, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446109155, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446109155, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4150.078490938528, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1246}}
rank 0: cycle = 90: time to send the model = 0.04842567443847656
:::MLLOG {"namespace": "", "time_ms": 1621446109204, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1260, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446109204, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1260, "epoch_count": 14}}
rank 640: cycle = 90: time to receive the model = 0.061714887619018555
:::MLLOG {"namespace": "", "time_ms": 1621446109217, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1260, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1260}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446109985, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.883936882019043, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1260}}
:::MLLOG {"namespace": "", "time_ms": 1621446109986, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1260}}
:::MLLOG {"namespace": "", "time_ms": 1621446109995, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4251.950835825957, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446109996, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446109996, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4251.950835825957, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1260}}
rank 0: cycle = 91: time to send the model = 0.03828620910644531
:::MLLOG {"namespace": "", "time_ms": 1621446110036, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1274, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446110037, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1274, "epoch_count": 14}}
rank 640: cycle = 91: time to receive the model = 0.05145406723022461
:::MLLOG {"namespace": "", "time_ms": 1621446110050, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1274, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1274}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446110816, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8900061845779419, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1274}}
:::MLLOG {"namespace": "", "time_ms": 1621446110817, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1274}}
:::MLLOG {"namespace": "", "time_ms": 1621446110834, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4215.404861417913, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446110836, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446110836, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4215.404861417913, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1274}}
rank 0: cycle = 92: time to send the model = 0.04039597511291504
:::MLLOG {"namespace": "", "time_ms": 1621446110877, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1288, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446110878, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1288, "epoch_count": 14}}
rank 640: cycle = 92: time to receive the model = 0.056105613708496094
:::MLLOG {"namespace": "", "time_ms": 1621446110893, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1288, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1288}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446111659, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8920975923538208, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1288}}
:::MLLOG {"namespace": "", "time_ms": 1621446111659, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1288}}
:::MLLOG {"namespace": "", "time_ms": 1621446111678, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4200.345747320476, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446111679, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446111679, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4200.345747320476, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1288}}
rank 0: cycle = 93: time to send the model = 0.03699612617492676
:::MLLOG {"namespace": "", "time_ms": 1621446111716, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1302, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446111717, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1302, "epoch_count": 14}}
rank 640: cycle = 93: time to receive the model = 0.05162477493286133
:::MLLOG {"namespace": "", "time_ms": 1621446111731, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1302, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1302}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.772 s.
:::MLLOG {"namespace": "", "time_ms": 1621446112504, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8944355249404907, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1302}}
:::MLLOG {"namespace": "", "time_ms": 1621446112505, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1302}}
:::MLLOG {"namespace": "", "time_ms": 1621446112504, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4267.1736093322215, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446112507, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446112507, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4267.1736093322215, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1302}}
rank 0: cycle = 94: time to send the model = 0.043735504150390625
:::MLLOG {"namespace": "", "time_ms": 1621446112551, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1316, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446112552, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1316, "epoch_count": 14}}
rank 640: cycle = 94: time to receive the model = 0.053436279296875
:::MLLOG {"namespace": "", "time_ms": 1621446112561, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1316, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1316}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.769 s.
:::MLLOG {"namespace": "", "time_ms": 1621446113331, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8847665786743164, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1316}}
:::MLLOG {"namespace": "", "time_ms": 1621446113331, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1316}}
:::MLLOG {"namespace": "", "time_ms": 1621446113340, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4264.473629026182, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446113341, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446113341, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4264.473629026182, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1316}}
rank 0: cycle = 95: time to send the model = 0.03858351707458496
:::MLLOG {"namespace": "", "time_ms": 1621446113384, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1330, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446113384, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1330, "epoch_count": 14}}
rank 640: cycle = 95: time to receive the model = 0.052039146423339844
:::MLLOG {"namespace": "", "time_ms": 1621446113397, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1330, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1330}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446114163, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9008487462997437, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1330}}
:::MLLOG {"namespace": "", "time_ms": 1621446114163, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1330}}
:::MLLOG {"namespace": "", "time_ms": 1621446114178, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4233.392322443899, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446114180, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446114180, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4233.392322443899, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1330}}
rank 0: cycle = 96: time to send the model = 0.043027639389038086
:::MLLOG {"namespace": "", "time_ms": 1621446114223, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1344, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446114224, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1344, "epoch_count": 14}}
rank 640: cycle = 96: time to receive the model = 0.059403419494628906
:::MLLOG {"namespace": "", "time_ms": 1621446114240, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1344, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1344}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.762 s.
:::MLLOG {"namespace": "", "time_ms": 1621446115003, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8820759057998657, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1344}}
:::MLLOG {"namespace": "", "time_ms": 1621446115003, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1344}}
:::MLLOG {"namespace": "", "time_ms": 1621446115050, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4068.4015034728836, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446115051, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446115051, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4068.4015034728836, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1344}}
rank 0: cycle = 97: time to send the model = 0.03802227973937988
:::MLLOG {"namespace": "", "time_ms": 1621446115089, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1358, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446115090, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1358, "epoch_count": 14}}
rank 640: cycle = 97: time to receive the model = 0.05220198631286621
:::MLLOG {"namespace": "", "time_ms": 1621446115104, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1358, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1358}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.766 s.
:::MLLOG {"namespace": "", "time_ms": 1621446115871, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9022637605667114, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1358}}
:::MLLOG {"namespace": "", "time_ms": 1621446115871, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1358}}
:::MLLOG {"namespace": "", "time_ms": 1621446115878, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4263.422194578295, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446115880, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446115881, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4263.422194578295, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1358}}
rank 0: cycle = 98: time to send the model = 0.047266244888305664
:::MLLOG {"namespace": "", "time_ms": 1621446115928, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1372, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446115929, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1372, "epoch_count": 14}}
rank 640: cycle = 98: time to receive the model = 0.0547490119934082
:::MLLOG {"namespace": "", "time_ms": 1621446115936, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1372, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1372}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.771 s.
:::MLLOG {"namespace": "", "time_ms": 1621446116708, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8945398330688477, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1372}}
:::MLLOG {"namespace": "", "time_ms": 1621446116708, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1372}}
:::MLLOG {"namespace": "", "time_ms": 1621446116736, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4161.996502152045, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446116737, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446116738, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4161.996502152045, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1372}}
rank 0: cycle = 99: time to send the model = 0.03713059425354004
:::MLLOG {"namespace": "", "time_ms": 1621446116775, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1386, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446116775, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1386, "epoch_count": 14}}
rank 640: cycle = 99: time to receive the model = 0.05118107795715332
:::MLLOG {"namespace": "", "time_ms": 1621446116789, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1386, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1386}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.774 s.
:::MLLOG {"namespace": "", "time_ms": 1621446117564, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8951167464256287, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1386}}
:::MLLOG {"namespace": "", "time_ms": 1621446117565, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1386}}
:::MLLOG {"namespace": "", "time_ms": 1621446117597, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4088.7711138957206, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446117599, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446117599, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4088.7711138957206, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1386}}
rank 0: cycle = 100: time to send the model = 0.03938865661621094
:::MLLOG {"namespace": "", "time_ms": 1621446117639, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1400, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446117640, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1400, "epoch_count": 14}}
rank 640: cycle = 100: time to receive the model = 0.05473470687866211
:::MLLOG {"namespace": "", "time_ms": 1621446117655, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1400, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1400}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.768 s.
:::MLLOG {"namespace": "", "time_ms": 1621446118424, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8943768739700317, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1400}}
:::MLLOG {"namespace": "", "time_ms": 1621446118424, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1400}}
:::MLLOG {"namespace": "", "time_ms": 1621446118427, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4267.861094034384, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446118428, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446118428, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4267.861094034384, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1400}}
rank 0: cycle = 101: time to send the model = 0.039994001388549805
:::MLLOG {"namespace": "", "time_ms": 1621446118470, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1414, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446118471, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1414, "epoch_count": 14}}
rank 640: cycle = 101: time to receive the model = 0.05486297607421875
:::MLLOG {"namespace": "", "time_ms": 1621446118485, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1414, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1414}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.768 s.
:::MLLOG {"namespace": "", "time_ms": 1621446119254, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8959254026412964, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1414}}
:::MLLOG {"namespace": "", "time_ms": 1621446119255, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1414}}
:::MLLOG {"namespace": "", "time_ms": 1621446119272, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4194.230351312283, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446119274, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446119274, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4194.230351312283, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1414}}
rank 0: cycle = 102: time to send the model = 0.043795108795166016
:::MLLOG {"namespace": "", "time_ms": 1621446119319, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1428, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446119319, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1428, "epoch_count": 14}}
rank 640: cycle = 102: time to receive the model = 0.051849365234375
:::MLLOG {"namespace": "", "time_ms": 1621446119327, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1428, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1428}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.771 s.
:::MLLOG {"namespace": "", "time_ms": 1621446120099, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9045240879058838, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1428}}
:::MLLOG {"namespace": "", "time_ms": 1621446120100, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1428}}
:::MLLOG {"namespace": "", "time_ms": 1621446120140, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4095.5845659489178, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446120141, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446120141, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4095.5845659489178, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1428}}
rank 0: cycle = 103: time to send the model = 0.03771471977233887
:::MLLOG {"namespace": "", "time_ms": 1621446120182, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1442, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446120182, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1442, "epoch_count": 14}}
rank 640: cycle = 103: time to receive the model = 0.052019596099853516
:::MLLOG {"namespace": "", "time_ms": 1621446120196, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1442, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1442}}
EVALUATION FROM CACHE
:::MLLOG {"namespace": "", "time_ms": 1621446120950, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4377.624858121067, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446120952, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446120952, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4377.624858121067, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1442}}
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446120963, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8942714929580688, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1442}}
:::MLLOG {"namespace": "", "time_ms": 1621446120964, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1442}}
rank 0: cycle = 104: time to send the model = 0.03651070594787598
:::MLLOG {"namespace": "", "time_ms": 1621446121001, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1456, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446121002, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1456, "epoch_count": 14}}
rank 640: cycle = 104: time to receive the model = 0.05112433433532715
:::MLLOG {"namespace": "", "time_ms": 1621446121015, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1456, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1456}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.774 s.
:::MLLOG {"namespace": "", "time_ms": 1621446121790, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8893262147903442, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1456}}
:::MLLOG {"namespace": "", "time_ms": 1621446121791, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1456}}
:::MLLOG {"namespace": "", "time_ms": 1621446121794, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4244.784084056768, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446121795, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446121795, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4244.784084056768, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1456}}
rank 0: cycle = 105: time to send the model = 0.0385589599609375
:::MLLOG {"namespace": "", "time_ms": 1621446121836, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1470, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446121836, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1470, "epoch_count": 14}}
rank 640: cycle = 105: time to receive the model = 0.052333831787109375
:::MLLOG {"namespace": "", "time_ms": 1621446121849, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1470, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1470}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.772 s.
:::MLLOG {"namespace": "", "time_ms": 1621446122622, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8956146240234375, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1470}}
:::MLLOG {"namespace": "", "time_ms": 1621446122623, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1470}}
:::MLLOG {"namespace": "", "time_ms": 1621446122627, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4246.7744145975, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446122629, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446122630, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4246.7744145975, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1470}}
rank 0: cycle = 106: time to send the model = 0.049788713455200195
:::MLLOG {"namespace": "", "time_ms": 1621446122680, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1484, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446122680, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1484, "epoch_count": 14}}
rank 640: cycle = 106: time to receive the model = 0.058007001876831055
:::MLLOG {"namespace": "", "time_ms": 1621446122688, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1484, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1484}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446123457, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8875503540039062, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1484}}
:::MLLOG {"namespace": "", "time_ms": 1621446123457, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1484}}
:::MLLOG {"namespace": "", "time_ms": 1621446123466, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4277.278103204424, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446123467, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446123468, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4277.278103204424, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1484}}
rank 0: cycle = 107: time to send the model = 0.03889203071594238
:::MLLOG {"namespace": "", "time_ms": 1621446123508, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1498, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446123508, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1498, "epoch_count": 14}}
rank 640: cycle = 107: time to receive the model = 0.05284476280212402
:::MLLOG {"namespace": "", "time_ms": 1621446123522, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1498, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1498}}
EVALUATION FROM CACHE
:::MLLOG {"namespace": "", "time_ms": 1621446124284, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4331.00921220525, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446124286, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446124287, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4331.00921220525, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1498}}
EVALUATION TIME: 0.766 s.
:::MLLOG {"namespace": "", "time_ms": 1621446124290, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8936419486999512, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1498}}
:::MLLOG {"namespace": "", "time_ms": 1621446124291, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1498}}
rank 0: cycle = 108: time to send the model = 0.03628253936767578
:::MLLOG {"namespace": "", "time_ms": 1621446124328, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1512, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446124329, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1512, "epoch_count": 14}}
rank 640: cycle = 108: time to receive the model = 0.051035404205322266
:::MLLOG {"namespace": "", "time_ms": 1621446124343, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1512, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1512}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.774 s.
:::MLLOG {"namespace": "", "time_ms": 1621446125118, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8922622799873352, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1512}}
:::MLLOG {"namespace": "", "time_ms": 1621446125118, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1512}}
:::MLLOG {"namespace": "", "time_ms": 1621446125121, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4240.806462290666, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446125123, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446125123, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4240.806462290666, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1512}}
rank 0: cycle = 109: time to send the model = 0.03777933120727539
:::MLLOG {"namespace": "", "time_ms": 1621446125161, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1526, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446125161, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1526, "epoch_count": 14}}
rank 640: cycle = 109: time to receive the model = 0.05301713943481445
:::MLLOG {"namespace": "", "time_ms": 1621446125176, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1526, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1526}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446125941, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8852106332778931, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1526}}
:::MLLOG {"namespace": "", "time_ms": 1621446125942, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1526}}
:::MLLOG {"namespace": "", "time_ms": 1621446126007, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 3973.826412600196, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446126009, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446126010, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 3973.826412600196, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1526}}
rank 0: cycle = 110: time to send the model = 0.04312944412231445
:::MLLOG {"namespace": "", "time_ms": 1621446126053, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1540, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446126053, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1540, "epoch_count": 14}}
rank 640: cycle = 110: time to receive the model = 0.05145740509033203
:::MLLOG {"namespace": "", "time_ms": 1621446126061, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1540, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1540}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.769 s.
:::MLLOG {"namespace": "", "time_ms": 1621446126832, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8911712169647217, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1540}}
:::MLLOG {"namespace": "", "time_ms": 1621446126832, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1540}}
:::MLLOG {"namespace": "", "time_ms": 1621446126834, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4307.692465697525, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446126835, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446126835, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4307.692465697525, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1540}}
rank 0: cycle = 111: time to send the model = 0.03742861747741699
:::MLLOG {"namespace": "", "time_ms": 1621446126874, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1554, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446126874, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1554, "epoch_count": 14}}
rank 640: cycle = 111: time to receive the model = 0.0508267879486084
:::MLLOG {"namespace": "", "time_ms": 1621446126887, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1554, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1554}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.773 s.
:::MLLOG {"namespace": "", "time_ms": 1621446127662, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9075049161911011, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1554}}
:::MLLOG {"namespace": "", "time_ms": 1621446127662, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1554}}
:::MLLOG {"namespace": "", "time_ms": 1621446127670, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4219.847894741412, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446127673, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446127674, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4219.847894741412, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1554}}
rank 0: cycle = 112: time to send the model = 0.03912544250488281
:::MLLOG {"namespace": "", "time_ms": 1621446127714, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1568, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446127715, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1568, "epoch_count": 14}}
rank 640: cycle = 112: time to receive the model = 0.0549931526184082
:::MLLOG {"namespace": "", "time_ms": 1621446127730, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1568, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1568}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446128499, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8932220339775085, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1568}}
:::MLLOG {"namespace": "", "time_ms": 1621446128499, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1568}}
:::MLLOG {"namespace": "", "time_ms": 1621446128506, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4247.099491536457, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446128507, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446128507, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4247.099491536457, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1568}}
rank 0: cycle = 113: time to send the model = 0.037406206130981445
:::MLLOG {"namespace": "", "time_ms": 1621446128545, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1582, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446128545, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1582, "epoch_count": 14}}
rank 640: cycle = 113: time to receive the model = 0.051802873611450195
:::MLLOG {"namespace": "", "time_ms": 1621446128560, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1582, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1582}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.766 s.
:::MLLOG {"namespace": "", "time_ms": 1621446129327, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9057050347328186, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1582}}
:::MLLOG {"namespace": "", "time_ms": 1621446129328, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1582}}
:::MLLOG {"namespace": "", "time_ms": 1621446129333, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4265.312568192556, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446129335, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446129336, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4265.312568192556, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1582}}
rank 0: cycle = 114: time to send the model = 0.04295682907104492
:::MLLOG {"namespace": "", "time_ms": 1621446129379, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1596, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446129380, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1596, "epoch_count": 14}}
rank 640: cycle = 114: time to receive the model = 0.05155348777770996
:::MLLOG {"namespace": "", "time_ms": 1621446129388, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1596, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1596}}
EVALUATION FROM CACHE
:::MLLOG {"namespace": "", "time_ms": 1621446130148, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4374.795565621647, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446130149, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446130149, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4374.795565621647, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1596}}
EVALUATION TIME: 0.773 s.
:::MLLOG {"namespace": "", "time_ms": 1621446130162, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8930312991142273, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1596}}
:::MLLOG {"namespace": "", "time_ms": 1621446130164, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1596}}
rank 0: cycle = 115: time to send the model = 0.036895751953125
:::MLLOG {"namespace": "", "time_ms": 1621446130201, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1610, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446130202, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1610, "epoch_count": 14}}
rank 640: cycle = 115: time to receive the model = 0.05083775520324707
:::MLLOG {"namespace": "", "time_ms": 1621446130215, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1610, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1610}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.775 s.
:::MLLOG {"namespace": "", "time_ms": 1621446130990, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9011355042457581, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1610}}
:::MLLOG {"namespace": "", "time_ms": 1621446130991, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1610}}
:::MLLOG {"namespace": "", "time_ms": 1621446131018, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4119.200914516607, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446131020, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446131020, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4119.200914516607, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1610}}
rank 0: cycle = 116: time to send the model = 0.040699005126953125
:::MLLOG {"namespace": "", "time_ms": 1621446131061, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1624, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446131061, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1624, "epoch_count": 14}}
rank 640: cycle = 116: time to receive the model = 0.056134939193725586
:::MLLOG {"namespace": "", "time_ms": 1621446131077, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1624, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1624}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446131842, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9060283303260803, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1624}}
:::MLLOG {"namespace": "", "time_ms": 1621446131843, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1624}}
:::MLLOG {"namespace": "", "time_ms": 1621446131861, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4205.225069630236, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446131862, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446131862, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4205.225069630236, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1624}}
rank 0: cycle = 117: time to send the model = 0.03856968879699707
:::MLLOG {"namespace": "", "time_ms": 1621446131903, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1638, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446131903, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1638, "epoch_count": 14}}
rank 640: cycle = 117: time to receive the model = 0.05301308631896973
:::MLLOG {"namespace": "", "time_ms": 1621446131917, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1638, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1638}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446132683, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9048916101455688, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1638}}
:::MLLOG {"namespace": "", "time_ms": 1621446132683, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1638}}
:::MLLOG {"namespace": "", "time_ms": 1621446132710, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4162.204238561357, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446132713, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446132714, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4162.204238561357, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1638}}
rank 0: cycle = 118: time to send the model = 0.048333168029785156
:::MLLOG {"namespace": "", "time_ms": 1621446132762, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1652, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446132763, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1652, "epoch_count": 14}}
rank 640: cycle = 118: time to receive the model = 0.05533766746520996
:::MLLOG {"namespace": "", "time_ms": 1621446132769, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1652, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1652}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446133538, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9059461355209351, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1652}}
:::MLLOG {"namespace": "", "time_ms": 1621446133538, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1652}}
:::MLLOG {"namespace": "", "time_ms": 1621446133547, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4286.401677470727, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446133548, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446133548, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4286.401677470727, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1652}}
rank 0: cycle = 119: time to send the model = 0.03842759132385254
:::MLLOG {"namespace": "", "time_ms": 1621446133587, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1666, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446133587, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1666, "epoch_count": 14}}
rank 640: cycle = 119: time to receive the model = 0.05275416374206543
:::MLLOG {"namespace": "", "time_ms": 1621446133601, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1666, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1666}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446134368, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9026951193809509, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1666}}
:::MLLOG {"namespace": "", "time_ms": 1621446134368, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1666}}
:::MLLOG {"namespace": "", "time_ms": 1621446134372, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4283.833571748611, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446134374, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446134375, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4283.833571748611, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1666}}
rank 0: cycle = 120: time to send the model = 0.042287349700927734
:::MLLOG {"namespace": "", "time_ms": 1621446134417, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1680, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446134418, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1680, "epoch_count": 14}}
rank 640: cycle = 120: time to receive the model = 0.05817866325378418
:::MLLOG {"namespace": "", "time_ms": 1621446134433, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1680, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1680}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446135199, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8920600414276123, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1680}}
:::MLLOG {"namespace": "", "time_ms": 1621446135199, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1680}}
:::MLLOG {"namespace": "", "time_ms": 1621446135231, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4133.1348345483375, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446135233, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446135233, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4133.1348345483375, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1680}}
rank 0: cycle = 121: time to send the model = 0.03793478012084961
:::MLLOG {"namespace": "", "time_ms": 1621446135273, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1694, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446135273, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1694, "epoch_count": 14}}
rank 640: cycle = 121: time to receive the model = 0.05205273628234863
:::MLLOG {"namespace": "", "time_ms": 1621446135287, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1694, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1694}}
EVALUATION FROM CACHE
:::MLLOG {"namespace": "", "time_ms": 1621446136052, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4314.426097314792, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446136054, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446136055, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4314.426097314792, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1694}}
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446136056, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8997616767883301, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1694}}
:::MLLOG {"namespace": "", "time_ms": 1621446136057, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1694}}
rank 0: cycle = 122: time to send the model = 0.04969072341918945
:::MLLOG {"namespace": "", "time_ms": 1621446136108, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1708, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446136109, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1708, "epoch_count": 14}}
rank 640: cycle = 122: time to receive the model = 0.05713200569152832
:::MLLOG {"namespace": "", "time_ms": 1621446136115, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1708, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1708}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.769 s.
:::MLLOG {"namespace": "", "time_ms": 1621446136886, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9074465036392212, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1708}}
:::MLLOG {"namespace": "", "time_ms": 1621446136886, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1708}}
:::MLLOG {"namespace": "", "time_ms": 1621446136917, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4160.75420426897, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446136918, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446136919, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4160.75420426897, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1708}}
rank 0: cycle = 123: time to send the model = 0.0393068790435791
:::MLLOG {"namespace": "", "time_ms": 1621446136958, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1722, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446136958, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1722, "epoch_count": 14}}
rank 640: cycle = 123: time to receive the model = 0.053401947021484375
:::MLLOG {"namespace": "", "time_ms": 1621446136972, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1722, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1722}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446137739, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8977494239807129, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1722}}
:::MLLOG {"namespace": "", "time_ms": 1621446137739, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1722}}
:::MLLOG {"namespace": "", "time_ms": 1621446137744, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4278.011702190632, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446137747, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446137747, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4278.011702190632, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1722}}
rank 0: cycle = 124: time to send the model = 0.04254651069641113
:::MLLOG {"namespace": "", "time_ms": 1621446137790, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1736, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446137790, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1736, "epoch_count": 14}}
rank 640: cycle = 124: time to receive the model = 0.05787849426269531
:::MLLOG {"namespace": "", "time_ms": 1621446137805, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1736, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1736}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446138570, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9018376469612122, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1736}}
:::MLLOG {"namespace": "", "time_ms": 1621446138571, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1736}}
:::MLLOG {"namespace": "", "time_ms": 1621446138579, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4261.215224779575, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446138580, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446138581, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4261.215224779575, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1736}}
rank 0: cycle = 125: time to send the model = 0.03888893127441406
:::MLLOG {"namespace": "", "time_ms": 1621446138622, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1750, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446138622, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1750, "epoch_count": 14}}
rank 640: cycle = 125: time to receive the model = 0.05258655548095703
:::MLLOG {"namespace": "", "time_ms": 1621446138635, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1750, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1750}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446139402, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8928840756416321, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1750}}
:::MLLOG {"namespace": "", "time_ms": 1621446139402, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1750}}
:::MLLOG {"namespace": "", "time_ms": 1621446139440, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4106.7423855649195, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446139442, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446139443, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4106.7423855649195, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1750}}
rank 0: cycle = 126: time to send the model = 0.05016922950744629
:::MLLOG {"namespace": "", "time_ms": 1621446139494, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1764, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446139494, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1764, "epoch_count": 14}}
rank 640: cycle = 126: time to receive the model = 0.05854630470275879
:::MLLOG {"namespace": "", "time_ms": 1621446139502, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1764, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1764}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.768 s.
:::MLLOG {"namespace": "", "time_ms": 1621446140271, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.897089958190918, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1764}}
:::MLLOG {"namespace": "", "time_ms": 1621446140272, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1764}}
:::MLLOG {"namespace": "", "time_ms": 1621446140292, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4209.732167234322, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446140294, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446140294, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4209.732167234322, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1764}}
rank 0: cycle = 127: time to send the model = 0.03906536102294922
:::MLLOG {"namespace": "", "time_ms": 1621446140335, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1778, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446140335, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1778, "epoch_count": 14}}
rank 640: cycle = 127: time to receive the model = 0.0526585578918457
:::MLLOG {"namespace": "", "time_ms": 1621446140349, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1778, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1778}}
EVALUATION FROM CACHE
:::MLLOG {"namespace": "", "time_ms": 1621446141110, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4338.004264478959, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446141112, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446141114, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4338.004264478959, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1778}}
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446141115, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.888930082321167, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1778}}
:::MLLOG {"namespace": "", "time_ms": 1621446141117, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1778}}
rank 0: cycle = 128: time to send the model = 0.03663349151611328
:::MLLOG {"namespace": "", "time_ms": 1621446141153, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1792, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446141155, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1792, "epoch_count": 14}}
rank 640: cycle = 128: time to receive the model = 0.05111885070800781
:::MLLOG {"namespace": "", "time_ms": 1621446141168, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1792, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1792}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.774 s.
:::MLLOG {"namespace": "", "time_ms": 1621446141943, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9004772901535034, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1792}}
:::MLLOG {"namespace": "", "time_ms": 1621446141943, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1792}}
:::MLLOG {"namespace": "", "time_ms": 1621446141946, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4247.173728683306, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446141947, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446141948, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4247.173728683306, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1792}}
rank 0: cycle = 129: time to send the model = 0.03801298141479492
:::MLLOG {"namespace": "", "time_ms": 1621446141986, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1806, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446141986, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1806, "epoch_count": 14}}
rank 640: cycle = 129: time to receive the model = 0.05273890495300293
:::MLLOG {"namespace": "", "time_ms": 1621446142000, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1806, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1806}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446142766, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8968284726142883, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1806}}
:::MLLOG {"namespace": "", "time_ms": 1621446142766, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1806}}
:::MLLOG {"namespace": "", "time_ms": 1621446142804, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4109.428403885581, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446142806, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446142807, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4109.428403885581, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1806}}
rank 0: cycle = 130: time to send the model = 0.04370880126953125
:::MLLOG {"namespace": "", "time_ms": 1621446142851, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1820, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446142851, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1820, "epoch_count": 14}}
rank 640: cycle = 130: time to receive the model = 0.052001953125
:::MLLOG {"namespace": "", "time_ms": 1621446142859, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1820, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1820}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.77 s.
:::MLLOG {"namespace": "", "time_ms": 1621446143630, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.900776743888855, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1820}}
:::MLLOG {"namespace": "", "time_ms": 1621446143631, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1820}}
:::MLLOG {"namespace": "", "time_ms": 1621446143637, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4277.345609766758, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446143638, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446143638, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4277.345609766758, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1820}}
rank 0: cycle = 131: time to send the model = 0.037283897399902344
:::MLLOG {"namespace": "", "time_ms": 1621446143676, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1834, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446143676, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1834, "epoch_count": 14}}
rank 640: cycle = 131: time to receive the model = 0.051241159439086914
:::MLLOG {"namespace": "", "time_ms": 1621446143690, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1834, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1834}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.772 s.
:::MLLOG {"namespace": "", "time_ms": 1621446144463, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.889066755771637, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1834}}
:::MLLOG {"namespace": "", "time_ms": 1621446144464, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1834}}
:::MLLOG {"namespace": "", "time_ms": 1621446144480, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4178.937697840233, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446144482, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446144482, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4178.937697840233, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1834}}
rank 0: cycle = 132: time to send the model = 0.04342365264892578
:::MLLOG {"namespace": "", "time_ms": 1621446144528, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1848, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446144528, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1848, "epoch_count": 14}}
rank 640: cycle = 132: time to receive the model = 0.0567626953125
:::MLLOG {"namespace": "", "time_ms": 1621446144541, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1848, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1848}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446145308, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9059184789657593, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1848}}
:::MLLOG {"namespace": "", "time_ms": 1621446145308, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1848}}
:::MLLOG {"namespace": "", "time_ms": 1621446145328, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4202.526443106244, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446145329, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446145330, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4202.526443106244, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1848}}
rank 0: cycle = 133: time to send the model = 0.03730034828186035
:::MLLOG {"namespace": "", "time_ms": 1621446145367, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1862, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446145367, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1862, "epoch_count": 14}}
rank 640: cycle = 133: time to receive the model = 0.051576852798461914
:::MLLOG {"namespace": "", "time_ms": 1621446145381, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1862, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1862}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446146150, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8927769660949707, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1862}}
:::MLLOG {"namespace": "", "time_ms": 1621446146150, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1862}}
:::MLLOG {"namespace": "", "time_ms": 1621446146189, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4087.529458171514, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446146191, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446146191, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4087.529458171514, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1862}}
rank 0: cycle = 134: time to send the model = 0.04965496063232422
:::MLLOG {"namespace": "", "time_ms": 1621446146241, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1876, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446146242, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1876, "epoch_count": 14}}
rank 640: cycle = 134: time to receive the model = 0.05809140205383301
:::MLLOG {"namespace": "", "time_ms": 1621446146250, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1876, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1876}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.767 s.
:::MLLOG {"namespace": "", "time_ms": 1621446147018, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9006791114807129, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1876}}
:::MLLOG {"namespace": "", "time_ms": 1621446147019, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1876}}
:::MLLOG {"namespace": "", "time_ms": 1621446147045, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4184.443160433241, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446147046, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446147046, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4184.443160433241, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1876}}
rank 0: cycle = 135: time to send the model = 0.03840756416320801
:::MLLOG {"namespace": "", "time_ms": 1621446147085, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1890, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446147085, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1890, "epoch_count": 14}}
rank 640: cycle = 135: time to receive the model = 0.05213499069213867
:::MLLOG {"namespace": "", "time_ms": 1621446147099, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1890, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1890}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.774 s.
:::MLLOG {"namespace": "", "time_ms": 1621446147875, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8934662342071533, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1890}}
:::MLLOG {"namespace": "", "time_ms": 1621446147875, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1890}}
:::MLLOG {"namespace": "", "time_ms": 1621446147880, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4230.558374354513, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446147882, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446147882, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4230.558374354513, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1890}}
rank 0: cycle = 136: time to send the model = 0.04308819770812988
:::MLLOG {"namespace": "", "time_ms": 1621446147925, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1904, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446147925, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1904, "epoch_count": 14}}
rank 640: cycle = 136: time to receive the model = 0.0570981502532959
:::MLLOG {"namespace": "", "time_ms": 1621446147939, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1904, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1904}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.765 s.
:::MLLOG {"namespace": "", "time_ms": 1621446148705, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8991076946258545, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1904}}
:::MLLOG {"namespace": "", "time_ms": 1621446148706, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1904}}
:::MLLOG {"namespace": "", "time_ms": 1621446148739, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4128.707924074151, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446148741, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446148741, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4128.707924074151, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1904}}
rank 0: cycle = 137: time to send the model = 0.03820371627807617
:::MLLOG {"namespace": "", "time_ms": 1621446148779, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1918, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446148780, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1918, "epoch_count": 14}}
rank 640: cycle = 137: time to receive the model = 0.053115129470825195
:::MLLOG {"namespace": "", "time_ms": 1621446148794, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1918, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1918}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.764 s.
:::MLLOG {"namespace": "", "time_ms": 1621446149559, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8927022814750671, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1918}}
:::MLLOG {"namespace": "", "time_ms": 1621446149560, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1918}}
:::MLLOG {"namespace": "", "time_ms": 1621446149588, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4158.171224629315, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446149590, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446149590, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4158.171224629315, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1918}}
rank 0: cycle = 138: time to send the model = 0.03972506523132324
:::MLLOG {"namespace": "", "time_ms": 1621446149630, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1932, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446149630, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1932, "epoch_count": 14}}
rank 640: cycle = 138: time to receive the model = 0.051818132400512695
:::MLLOG {"namespace": "", "time_ms": 1621446149642, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1932, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1932}}
EVALUATION FROM CACHE
:::MLLOG {"namespace": "", "time_ms": 1621446150410, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4310.247080851647, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446150411, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446150411, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4310.247080851647, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1932}}
EVALUATION TIME: 0.772 s.
:::MLLOG {"namespace": "", "time_ms": 1621446150415, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.8988285064697266, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1932}}
:::MLLOG {"namespace": "", "time_ms": 1621446150416, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1932}}
rank 0: cycle = 139: time to send the model = 0.03658342361450195
:::MLLOG {"namespace": "", "time_ms": 1621446150453, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1946, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446150454, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1946, "epoch_count": 14}}
rank 640: cycle = 139: time to receive the model = 0.05162334442138672
:::MLLOG {"namespace": "", "time_ms": 1621446150468, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1946, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1946}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.777 s.
:::MLLOG {"namespace": "", "time_ms": 1621446151246, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9058548212051392, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1946}}
:::MLLOG {"namespace": "", "time_ms": 1621446151246, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1946}}
:::MLLOG {"namespace": "", "time_ms": 1621446151246, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4243.27211796852, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446151248, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446151249, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4243.27211796852, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1946}}
rank 0: cycle = 140: time to send the model = 0.03793907165527344
:::MLLOG {"namespace": "", "time_ms": 1621446151287, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1960, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446151287, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1960, "epoch_count": 14}}
rank 640: cycle = 140: time to receive the model = 0.0530247688293457
:::MLLOG {"namespace": "", "time_ms": 1621446151302, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1960, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1960}}
EVALUATION FROM CACHE
:::MLLOG {"namespace": "", "time_ms": 1621446152063, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4330.675156221431, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446152065, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446152065, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4330.675156221431, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1960}}
EVALUATION TIME: 0.773 s.
:::MLLOG {"namespace": "", "time_ms": 1621446152076, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9001812934875488, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1960}}
:::MLLOG {"namespace": "", "time_ms": 1621446152078, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1960}}
rank 0: cycle = 141: time to send the model = 0.03525590896606445
:::MLLOG {"namespace": "", "time_ms": 1621446152113, "event_type": "INTERVAL_END", "key": "block_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 114, "first_epoch_num": 1974, "epoch_count": 14}}
:::MLLOG {"namespace": "", "time_ms": 1621446152114, "event_type": "INTERVAL_START", "key": "block_start", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 32, "first_epoch_num": 1974, "epoch_count": 14}}
rank 640: cycle = 141: time to receive the model = 0.05143857002258301
:::MLLOG {"namespace": "", "time_ms": 1621446152129, "event_type": "INTERVAL_START", "key": "eval_start", "value": 1974, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 88, "epoch_num": 1974}}
EVALUATION FROM CACHE
EVALUATION TIME: 0.777 s.
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
:::MLLOG {"namespace": "", "time_ms": 1621446152908, "event_type": "POINT_IN_TIME", "key": "eval_accuracy", "value": 0.9081321954727173, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 91, "epoch_num": 1974}}
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
:::MLLOG {"namespace": "", "time_ms": 1621446152908, "event_type": "INTERVAL_END", "key": "eval_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 96, "epoch_num": 1974}}
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
STOP TRAINING TRIGGERED AFTER EVAL
:::MLLOG {"namespace": "", "time_ms": 1621446152908, "event_type": "INTERVAL_END", "key": "run_stop", "value": null, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 102, "status": "success"}}
:::MLLOG {"namespace": "", "time_ms": 1621446152921, "event_type": "POINT_IN_TIME", "key": "throughput", "value": 4165.512375178232, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 62}}
:::MLLOG {"namespace": "", "time_ms": 1621446152923, "event_type": "POINT_IN_TIME", "key": "current_lr", "value": 1.5, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 63}}
:::MLLOG {"namespace": "", "time_ms": 1621446152923, "event_type": "POINT_IN_TIME", "key": "tracked_stats", "value": {"throughput": 4165.512375178232, "iterations": 3, "loss_scale": 2048.0}, "metadata": {"file": "/workspace/unet3d/runtime/training.py", "lineno": 64, "step": 1974}}
rank 0: cycle = 142: time to send the model = 0.04477715492248535
rank 640: cycle = 142: time to receive the model = 0.05258035659790039
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
+ set +x
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,531,nvidia,2021-05-19 10:33:59 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
+ ret_code=0
+ set +x
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
+ ret_code=0
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:50 AM
RESULT,image_segmentation,,532,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ ret_code=0
+ set +x
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
+ set +x
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
+ set +x
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
+ ret_code=0
+ set +x
+ ret_code=0
+ set +x
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:51 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:59 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:59 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:59 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,533,nvidia,2021-05-19 10:33:59 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:52 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,534,nvidia,2021-05-19 10:33:59 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:53 AM
RESULT,image_segmentation,,535,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
ENDING TIMING RUN AT 2021-05-19 10:42:54 AM
RESULT,image_segmentation,,536,nvidia,2021-05-19 10:33:58 AM
